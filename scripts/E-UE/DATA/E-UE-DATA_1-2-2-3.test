################################################################################
#// Filename: E-UE-DATA_1-2-2-3.test (PACT)
#// Author:   Matthew Forbes
#//
#//
#//
#// Creation Date: March 2, 2009
#// Modified by:
################################################################################
#// Description:
#//     TC2746 TEST CASE E-UE-DATA 1.2.2.3 - Ability of eUE to Implement the
#//	    User to Apps Mapping Table
#//
#// Objective:
#//     This test verifies the eUE ability to properly implement the pktcEUEUsrAppMapTable defined in
#//     CL-PKTC-EUE-USER-MIB.
#//
#//
#// PacketCable DUT:
#//     EDVA
#//
#// Test Steps:
#//     - Initial configuration
#//     - Start sniffer
#//     - Reset DUT
#//     - Check Provisioning state
#//     - Invoke SNMPv3 API and query MIB objects and validate values
#//     - Stop sniffer
#//     - Hybrid configuration
#//     - Start sniffer
#//     - Reset DUT
#//     - Check Provisioning state
#//     - Invoke SNMPv2 API and bulk query MIB objects and validate values
#//     - Stop sniffer
#//
#//
#// Notes:
#//     - Requires provPrimitives.tcl
#//
#//
################################################################################
global SCRIPT_VERSION
set SCRIPT_VERSION { # $Id: E-UE-DATA_1-2-2-3.test 7769 2011-01-25 18:13:14Z botte $ }

set test_case E-UE-DATA_1-2-2-3-
set step_num 1

Init_PROV
Init_PART

DoStep ${test_case}${step_num} "Initial Configuration" {
    LogMsg "--- Init PROV module ---"
    # PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 SecureFlow_BasicCall_DigitMap_MWI.cfg
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 C.1.2.4.bin
    PROV_DEPLOY_DHCP
} {PASS_STEP}

DoStep ${test_case}[incr step_num]_1 "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP || udp port 67"
    StartCaptureControllerLan
} {PASS_STEP}

DoStep ${test_case}${step_num}_2 "Reset CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "--- Reset of CM and MTA has passed ---"
} {
    IsEqual $val 0
}

DoStep ${test_case}${step_num}_3 "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
    # Get the OID from the MTA and check it using our previously defined
    set val [GetProvState 1 600]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 1"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 1
}

## Get all the values and verify

DoStep ${test_case}[incr step_num]_1 "pktcEUEUsrAppMapAppOrgID Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 1]
    LogMsg "The Value pktcEUEUsrAppMapAppOrgID is: $val"
} {IsEqual $val 4491}

DoStep ${test_case}${step_num}_2 "pktcEUEUsrAppMapAppIdentifier Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 2]
    LogMsg "The Value pktcEUEUsrAppMapAppIdentifier is: $val"
} {IsEqual $val 1}

DoStep ${test_case}${step_num}_3 "pktcEUEUsrAppMapAppIndexRef  Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 3]
    LogMsg "The Value pktcEUEUsrAppMapAppIndexRef  is: $val"
} {IsEqual $val 0}

DoStep ${test_case}${step_num}_4 "pktcEUEUsrAppMapAppAdminStat  Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 4]
    LogMsg "The Value pktcEUEUsrAppMapAppAdminStat  is: $val"
} {IsEqual $val 1}

DoStep ${test_case}${step_num}_5 "pktcEUEUsrAppMapAppAdminStatInfo Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 5]
    LogMsg "The Value pktcEUEUsrAppMapAppAdminStatInfo is: $val"
} {IsEqual $val ""}

DoStep ${test_case}${step_num}_6 "pktcEUEUsrAppMapAppOperStat Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 6]
    LogMsg "The Value pktcEUEUsrAppMapAppOperStat is: $val"
} {IsEqual $val 2}

DoStep ${test_case}${step_num}_7 "pktcEUEUsrAppMapAppOperStatInfo Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 7]
    LogMsg "The Value pktcEUEUsrAppMapAppOperStatInfo is: $val"
} {IsEqual $val ""}

DoStep ${test_case}${step_num}_8 "pktcEUEUsrAppMapRowStatusInfo Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 8]
    LogMsg "The Value pktcEUEUsrAppMapRowStatus is: $val"
} {IsEqual $val 1}

DoStep ${test_case}[incr step_num] "Stop Sniffer" {
    LogMsg "--- Stop Sniffer ---"
    StopCaptureControllerLan
    SaveToFileControllerLan "_Secure_Prov1"
} { PASS_STEP }

DoStep ${test_case}${step_num} "Initial Configuration" {
    LogMsg "--- Init PROV module ---"
    # PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 SecureFlow_BasicCall_DigitMap_MWI_new_IMPUId_IMPIId.cfg
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 C.1.2.4_New_IMPUId_IMPIId.bin
    PROV_DEPLOY_DHCP
} {PASS_STEP}

DoStep ${test_case}[incr step_num]_1 "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP || udp port 67"
    StartCaptureControllerLan
} {PASS_STEP}

DoStep ${test_case}${step_num}_2 "Reset CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "--- Reset of CM and MTA has passed ---"
} {
    IsEqual $val 0
}

DoStep ${test_case}${step_num}_3 "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
    # Get the OID from the MTA and check it using our previously defined
    set val [GetProvState 1 600]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 1"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 1
}

## Get all the values and verify

DoStep ${test_case}[incr step_num]_1 "pktcEUEUsrAppMapAppOrgID Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 1]
    LogMsg "The Value pktcEUEUsrAppMapAppOrgID is: $val"
} {IsEqual $val 4491}

DoStep ${test_case}${step_num}_2 "pktcEUEUsrAppMapAppIdentifier Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 2]
    LogMsg "The Value pktcEUEUsrAppMapAppIdentifier is: $val"
} {IsEqual $val 1}

DoStep ${test_case}${step_num}_3 "pktcEUEUsrAppMapAppIndexRef  Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 3]
    LogMsg "The Value pktcEUEUsrAppMapAppIndexRef  is: $val"
} {IsEqual $val 0}

DoStep ${test_case}${step_num}_4 "pktcEUEUsrAppMapAppAdminStat  Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 4]
    LogMsg "The Value pktcEUEUsrAppMapAppAdminStat  is: $val"
} {IsEqual $val 1}

DoStep ${test_case}${step_num}_5 "pktcEUEUsrAppMapAppAdminStatInfo Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 5]
    LogMsg "The Value pktcEUEUsrAppMapAppAdminStatInfo is: $val"
} {IsEqual $val ""}

DoStep ${test_case}${step_num}_6 "pktcEUEUsrAppMapAppOperStat Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 6]
    LogMsg "The Value pktcEUEUsrAppMapAppOperStat is: $val"
} {IsEqual $val 2}

DoStep ${test_case}${step_num}_7 "pktcEUEUsrAppMapAppOperStatInfo Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 7]
    LogMsg "The Value pktcEUEUsrAppMapAppOperStatInfo is: $val"
} {IsEqual $val ""}

DoStep ${test_case}${step_num}_8 "pktcEUEUsrAppMapRowStatusInfo Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 8]
    LogMsg "The Value pktcEUEUsrAppMapRowStatus is: $val"
} {IsEqual $val 1}

DoStep ${test_case}[incr step_num] "Stop Sniffer" {
    LogMsg "--- Stop Sniffer ---"
    StopCaptureControllerLan
    SaveToFileControllerLan "_Secure_Prov2"
} { PASS_STEP }

################################################################################
# Run MIB checks for Hybrid flow type
################################################################################
set step_num 1

DoStep ${test_case}[incr step_num]h "Configure Provisioning Server" {
    # PROV_MODIFY_DEVICE $MTA_MAC HYBRID2 HybridFlow_BasicCall_DigitMap_MWI.cfg
    PROV_MODIFY_DEVICE $MTA_MAC HYBRID2 C.1.2.4.bin
    PROV_DEPLOY_DHCP
} { PASS_STEP }


DoStep ${test_case}[incr step_num]h_1 "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    # Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP || udp port 67 || host $CM_IP"
    StartCaptureControllerLan
} {PASS_STEP}

############### Reset CM and MTA and Verify Provisioning ################

DoStep ${test_case}${step_num}h_2 "Reset CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "--- Reset of CM and MTA has passed ---"
} {
    IsEqual $val 0
}

DoStep ${test_case}${step_num}h_3 "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 120
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_GET $oid_pktcMtaDevProvisioningState $MTA_IP]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 1"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 1
}

## Get all the values and verify

DoStep ${test_case}[incr step_num]_1 "pktcEUEUsrAppMapAppOrgID Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 1]
    LogMsg "The Value pktcEUEUsrAppMapAppOrgID is: $val"
} {IsEqual $val 4491}

DoStep ${test_case}${step_num}_2 "pktcEUEUsrAppMapAppIdentifier Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 2]
    LogMsg "The Value pktcEUEUsrAppMapAppIdentifier is: $val"
} {IsEqual $val 1}

DoStep ${test_case}${step_num}_3 "pktcEUEUsrAppMapAppIndexRef  Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 3]
    LogMsg "The Value pktcEUEUsrAppMapAppIndexRef is: $val"
} {IsEqual $val 0}

DoStep ${test_case}${step_num}_4 "pktcEUEUsrAppMapAppAdminStat Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 4]
    LogMsg "The Value pktcEUEUsrAppMapAppAdminStat is: $val"
} {IsEqual $val 1}

DoStep ${test_case}${step_num}_5 "pktcEUEUsrAppMapAppAdminStatInfo Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 5]
    LogMsg "The Value pktcEUEUsrAppMapAppAdminStatInfo is: $val"
} {IsEqual $val ""}

DoStep ${test_case}${step_num}_6 "pktcEUEUsrAppMapAppOperStat Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 6]
    LogMsg "The Value pktcEUEUsrAppMapAppOperStat is: $val"
} {IsEqual $val 2}

DoStep ${test_case}${step_num}_7 "pktcEUEUsrAppMapAppOperStatInfo Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 7]
    LogMsg "The Value pktcEUEUsrAppMapAppOperStatInfo is: $val"
} {IsEqual $val ""}

DoStep ${test_case}${step_num}_8 "pktcEUEUsrAppMapRowStatus Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 8]
    LogMsg "The Value pktcEUEUsrAppMapRowStatus is: $val"
} {IsEqual $val 1}

DoStep ${test_case}[incr step_num] "Stop Sniffer" {
    LogMsg "--- Stop Sniffer ---"
    StopCaptureControllerLan
    SaveToFileControllerLan "_Hybrid_Prov1"
} { PASS_STEP }

DoStep ${test_case}[incr step_num]h "Configure Provisioning Server" {
    # PROV_MODIFY_DEVICE $MTA_MAC HYBRID2 HybridFlow_BasicCall_DigitMap_MWI_new_IMPUId_IMPIId.cfg
    PROV_MODIFY_DEVICE $MTA_MAC HYBRID2 C.1.2.4_New_IMPUId_IMPIId.bin
    PROV_DEPLOY_DHCP
} { PASS_STEP }


DoStep ${test_case}[incr step_num]h_1 "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    # Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP || udp port 67 || host $CM_IP"
    StartCaptureControllerLan
} {PASS_STEP}

############### Reset CM and MTA and Verify Provisioning ################

DoStep ${test_case}${step_num}h_2 "Reset CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "--- Reset of CM and MTA has passed ---"
} {
    IsEqual $val 0
}

DoStep ${test_case}${step_num}h_3 "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 120
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_GET $oid_pktcMtaDevProvisioningState $MTA_IP]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 1"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 1
}

## Get all the values and verify

DoStep ${test_case}[incr step_num]_1 "pktcEUEUsrAppMapAppOrgID Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 1]
    LogMsg "The Value pktcEUEUsrAppMapAppOrgID is: $val"
} {IsEqual $val 4491}

DoStep ${test_case}${step_num}_2 "pktcEUEUsrAppMapAppIdentifier Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 2]
    LogMsg "The Value pktcEUEUsrAppMapAppIdentifier is: $val"
} {IsEqual $val 1}

DoStep ${test_case}${step_num}_3 "pktcEUEUsrAppMapAppIndexRef  Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 3]
    LogMsg "The Value pktcEUEUsrAppMapAppIndexRef is: $val"
} {IsEqual $val 0}

DoStep ${test_case}${step_num}_4 "pktcEUEUsrAppMapAppAdminStat Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 4]
    LogMsg "The Value pktcEUEUsrAppMapAppAdminStat is: $val"
} {IsEqual $val 1}

DoStep ${test_case}${step_num}_5 "pktcEUEUsrAppMapAppAdminStatInfo Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 5]
    LogMsg "The Value pktcEUEUsrAppMapAppAdminStatInfo is: $val"
} {IsEqual $val ""}

DoStep ${test_case}${step_num}_6 "pktcEUEUsrAppMapAppOperStat Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 6]
    LogMsg "The Value pktcEUEUsrAppMapAppOperStat is: $val"
} {IsEqual $val 2}

DoStep ${test_case}${step_num}_7 "pktcEUEUsrAppMapAppOperStatInfo Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 7]
    LogMsg "The Value pktcEUEUsrAppMapAppOperStatInfo is: $val"
} {IsEqual $val ""}

DoStep ${test_case}${step_num}_8 "pktcEUEUsrAppMapRowStatus Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUEUsrAppMapTable $MTA_IP 8]
    LogMsg "The Value pktcEUEUsrAppMapRowStatus is: $val"
} {IsEqual $val 1}

DoStep ${test_case}[incr step_num] "Stop Sniffer" {
    LogMsg "--- Stop Sniffer ---"
    StopCaptureControllerLan
    SaveToFileControllerLan "_Hybrid_Prov2"
} { PASS_STEP }

DoStep ${test_case}[incr step_num] "Configure Provisioning Server" {
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 Device_Level_Secure.cfg
    PROV_DEPLOY_DHCP
} { PASS_STEP }


############### Reset CM and MTA and Verify Provisioning ################

DoStep ${test_case}[incr step_num] "Reset CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "--- Reset of CM and MTA has passed ---"
} {
    IsEqual $val 0
}

DoStep ${test_case}[incr step_num] "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
    # Get the OID from the MTA and check it using our previously defined
    set val [GetProvState 1 600]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 1"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 1
}


################################################################################
# Cleanup
################################################################################
set CONTINUE_PAST_STEP_ERROR 0
Cleanup
