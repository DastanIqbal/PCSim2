<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)





-->
<pc2xml version="$Revision: 8188 $" 
	name="SIP-UE 1.3.1.2" 
	descrip="UE re-computes route-set based on 2xx response" 
	number="SIP-UE 1.3.1.2">
	
	<template file="./templates/CallOrigAtUETemp.xml" name="UE1"/>
	
	<remove_from fsm="UE1">
		<state ID="Setup"/>
		<state ID="Alerting"/>
		<state ID="Releasing"/>
		<state ID="Answer"/>
		<state ID="OnHook"/>
		<state ID="Connected"/>
	</remove_from>
	
	<add_to fsm="UE1">
		<state ID="Setup">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<!-- If the current message that we received is an Invite, answer with
               a 100-trying -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
					</then>
				</if>
				<!-- This set of tests determines whether to send 183 with Answer
						 or a 180 to the INVITE -->
				<if>
					<and>
						<eq>
							<msg_ref type="extensions">precondition</msg_ref>
							<expr>require</expr>
						</eq>
						<or>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Require</msg_ref>
								<expr>precondition</expr>
							</contains>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Supported</msg_ref>
								<expr>precondition</expr>
							</contains>
						</or>
					</and>
					<then>
						<!--Sending 183-Invite with answer-->
						<sleep time="200"/>
						<send protocol="sip" msgtype="183-Invite"/>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>Invite</expr>
						</eq>
						<then>
							<!--Sending 180-Invite with SS not supporting precondition.
							Step 2 NOTE: We are deleting SCSCF1 rather than deleting ICSCF1-->
							<sleep time="200"/>
							<send protocol="sip" msgtype="180-Invite">
								<mod modtype="delete" hdr="Record-Route" hdr_instance="2"/>
							</send>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Setup" event="DialDigitsComplete"/>
			<transition to="Alerting" event="INVITE"/>
		</state>
		
		<state ID="Alerting">
			<response>
				<!-- Now test to see if the incoming message is a PRACK message because
							 the system is using reliability -->
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PRACK</expr>
						</eq>
						<contains>
							<msg_ref type="sip" msg_instance="last" hdr_instance="any">18x-Invite.Require</msg_ref>
							<expr>100rel</expr>
						</contains>
					</and>
					<then>
						<!--Reliablity required for test sending 200-Prack message to peer.-->
						<send protocol="sip" msgtype="200-PRACK"/>
					</then>
				</if>
				<!-- Now test for an UPDATE message -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required or supported sending 200-Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
				<!-- Test whether to send 180 -->
				<if>
					<and>
						<contains>
							<msg_ref type="sip" msg_instance="last">18x-Invite.Status-Line.status-code</msg_ref>
							<expr>183</expr>
						</contains>
						<eq>
							<msg_ref type="sdp">Request.qos-curr-remote.direction</msg_ref>
							<msg_ref type="sdp">Request.qos-des-remote.direction</msg_ref>
						</eq>
					</and>
					<then>
						<!--Step 1 NOTE: We are deleting SCSCF1 rather than deleting ICSCF1-->
						<send protocol="sip" msgtype="180-Invite">
							<mod modtype="delete" hdr="Record-Route" hdr_instance="2"/>
						</send>
					</then>
				</if>
			</response>
			<transition to="Alerting" event="DialDigitsComplete"/>
			<transition to="Alerting" event="PRACK"/>
			<transition to="Alerting" event="UPDATE"/>
			<transition to="Answer" event="ALERTING_UAS"/>
		</state>
		
		<state ID="Answer" timer="15000">
			<response>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>TimerExpired</expr>
					</eq>
					<then>
						<!--Step 2 -->
						<send protocol="sip" msgtype="200-INVITE">
							<mod modtype="add" hdr="Record-Route" hdr_instance="2">
								<expr>&lt;sip:8.8.8.8;lr&gt;</expr>
							</mod>
						</send>
					</then>
				</if>
				<!-- Now test for an UPDATE message -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!-- QoS required or supported sending 200 - 
							Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
			</response>
			<transition to="Answer" event="UPDATE"/>
			<transition to="Answer" event="TimerExpired"/>
			<transition to="Connected" event="ACK"/>
		</state>
		
		<state ID="Connected" timer="20000">
			<transition to="OnHook" event="TimerExpired"/>
		</state>
		
		<state ID="OnHook">
			<prelude>
				<send protocol="utility" msgtype="OnHook"/>
			</prelude>
			<transition to="Releasing" event="OnHookComplete"/>
		</state>
		
		<state ID="Releasing">
			<response>
				<verify step="4" requirements="RFC672">
					<eq>
						<msg_ref type="sip" hdr_instance="1">BYE.Route</msg_ref>
						<msg_ref type="sip" msg_instance="last" hdr_instance="4">200-Invite.Record-Route</msg_ref>
					</eq>
				</verify>
				<verify step="4" requirements="RFC672">
					<eq>
						<msg_ref type="sip" hdr_instance="2">BYE.Route</msg_ref>
						<msg_ref type="sip" msg_instance="last" hdr_instance="3">200-Invite.Record-Route</msg_ref>
					</eq>
				</verify>
				<verify step="4" requirements="RFC672">
					<eq>
						<msg_ref type="sip" hdr_instance="3">BYE.Route</msg_ref>
						<msg_ref type="sip" msg_instance="last" hdr_instance="2">200-Invite.Record-Route</msg_ref>
					</eq>
				</verify>
				<verify step="4" requirements="RFC672">
					<eq>
						<msg_ref type="sip" hdr_instance="4">BYE.Route</msg_ref>
						<msg_ref type="sip" msg_instance="last" hdr_instance="1">200-Invite.Record-Route</msg_ref>
					</eq>
				</verify>
			</response>
			<postlude>
				<send protocol="sip" msgtype="200-BYE"/>
			</postlude>
			<transition to="END" event="BYE"/>
		</state>
	</add_to>
</pc2xml>
