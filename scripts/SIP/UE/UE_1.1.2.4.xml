<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	PCPCII-123 DEPRICATED 10/30/2009 - Update the script to test for double quotes on the nonce and response parameters
	of response messages. (ghassler 3/26/2009)
	PCPCII-143 Update the script for the changes made to the D08 version of the ATP. (ghassler 08/26/2009)	
	PCPCII-145 : Change the "" test to empty string test as platform removes double-quotes. (ghassler 10/30/2009)	
	
	
-->
<pc2xml version="$Revision: 8188 $" name="SIP-UE 1.1.2.4"
	descrip="Re-Registration Action upon Receiving a 408/500/504 Response "
	number="SIP-UE 1.1.2.4">

	<template file="./templates/UERegAndSubTemp.xml" name="Registrar" />

	<remove_from fsm="Registrar">
		<state ID="Registered" />
	</remove_from>

	<add_to fsm="Registrar">
		<state ID="Registered">
			<prelude>
				<send protocol="sip" msgtype="200-Register">
					<!-- Step 2 of test case 1.1.2.4- Expires value is set to 60 sec-->
					<mod modtype="replace" hdr="Contact"
						param="expires">
						<expr>60</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>SUBSCRIBE</expr>
						</eq>
						<contains>
							<msg_ref type="sip">SUBSCRIBE.Event</msg_ref>
							<expr>reg</expr>
						</contains>
					</and>
					<then>
						<send protocol="sip" msgtype="200-SUBSCRIBE" />
						<sleep time="100" />
						<send protocol="sip" msgtype="NOTIFY" />
					</then>
				</if>
			</response>
			<transition to="Notification" event="SUBSCRIBE" />
		</state>
		<transition from="Notification" to="Send408" event="200-NOTIFY" />
		<!-- Send408 State -->
		<state ID="Send408">
			<response>
				<!-- Step 4 of test case 1.1.2.4-->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<then>
						<verify step="4" requirements="REQ16935">
							<and>
								<gte>
									<msg_ref type="sip">REGISTER.TIMESTAMP</msg_ref>
									<add_ref type="sip" msg_instance="last" value="29500">200-REGISTER.TIMESTAMP</add_ref>
								</gte>
								<lte>
									<msg_ref type="sip">REGISTER.TIMESTAMP</msg_ref>
									<add_ref type="sip" msg_instance="last" value="30500">200-REGISTER.TIMESTAMP</add_ref>
								</lte>
							</and>
						</verify>
						<send protocol="sip" msgtype="408-REGISTER">
							<mod modtype="delete"
								hdr="WWW-Authenticate" />
						</send>
					</then>
				</if>
			</response>
			<transition to="Re-PendingRegistration" event="REGISTER" />
		</state>

		<state ID="Re-PendingRegistration">
			<response>
				<!-- Step 4 of test case 1.1.2.4-->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<!-- Step 5 of test case 1.1.2.4- UE continues the initial registration 
						sequence by execution of steps 2-3 [UE Registration Case Flow].-->
					<then>
						<!-- PCPCII-143 Remove the test for the reg-id incrementing
						verify step="4" requirements="REQ16935">
							<eq>
								<msg_ref type="sip">REGISTER.Contact.reg-id</msg_ref>
								<add_ref type="sip" msg_instance="prev">REGISTER.Contact.reg-id</add_ref>
							</eq>
						</verify-->
						<verify step="4" requirements="REQ16935">
							<eq>
								<msg_ref type="sip">REGISTER.Authorization.nonce</msg_ref>
								<!-- PCPCII-145 Change from "" to empty string -->
								<expr></expr>
							</eq>
						</verify>
						<verify step="4" requirements="REQ16935">
							<eq>
								<msg_ref type="sip">REGISTER.Authorization.response</msg_ref>
								<!-- PCPCII-145 Change from "" to empty string -->
								<expr></expr>
							</eq>
						</verify>
						<send protocol="sip" msgtype="401-REGISTER" />
					</then>
				</if>
			</response>
			<transition to="Re-Authorization" event="REGISTER" />
		</state>

		<state ID="Re-Authorization">
			<response>
				<!-- Step 4 of test case 1.1.2.4-->
				<!-- Step-5 test case 1.1.2.4 - received REGISTER message - authorization-->
				<if>
					<or>
						<eq>
							<msg_ref type="event" />
							<expr>AuthenticateSucceed</expr>
						</eq>
						<eq>
							<msg_ref type="event" />
							<expr>AuthenticateFailed</expr>
						</eq>
					</or>
					<then>
						<!-- this is to prevent the AuthenticateFailed from being forwarded
							to the next state on the AuthenticateSucceed -->
					</then>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">Request</msg_ref>
								<expr>REGISTER</expr>
							</eq>
							<and>
								<contains>
									<msg_ref type="sip">REGISTER</msg_ref>
									<expr>Authorization</expr>
								</contains>
								<digest />
							</and>
						</and>
						<then>
							<generate event="AuthenticateSucceed" />
						</then>
						<else>
							<generate event="AuthenticateFailed" />
							<send protocol="sip" msgtype="503-Register" />
						</else>
					</elseif>
				</if>
			</response>
			<transition to="200-Register" event="AuthenticateSucceed" />
			<transition to="END" event="AuthenticateFailed" />
			<transition to="Re-Authorization" event="REGISTER" />
		</state>
		<state ID="200-Register">
			<prelude>
				<send protocol="sip" msgtype="200-Register">
					<!-- Step 6 of test case 1.1.2.4- Expires value is set to 60 sec-->
					<mod modtype="replace" hdr="Contact"
						param="expires">
						<expr>60</expr>
					</mod>
					<!-- Step 7 of test case 1.1.2.4-REGISTER request after 30 seconds  -->
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="sip">SUBSCRIBE.Event.event-type</msg_ref>
						<expr>reg</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="200-SUBSCRIBE" />
						<sleep time="100" />
						<send protocol="sip" msgtype="NOTIFY" />
					</then>
				</if>
			</response>
			<transition to="Notification2" event="SUBSCRIBE" />
		</state>
		<state ID="Notification2">
			<transition to="Send500" event="200-NOTIFY" />
		</state>
		<state ID="Send500">
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<then>
						<verify step="8" requirements="REQ16935">
							<and>
								<gte>
									<msg_ref type="sip">REGISTER.TIMESTAMP</msg_ref>
									<add_ref type="sip" msg_instance="last" value="29500">200-REGISTER.TIMESTAMP</add_ref>
								</gte>
								<lte>
									<msg_ref type="sip">REGISTER.TIMESTAMP</msg_ref>
									<add_ref type="sip" msg_instance="last" value="30500">200-REGISTER.TIMESTAMP</add_ref>
								</lte>
							</and>
						</verify>
						<send protocol="sip" msgtype="500-REGISTER">
							<mod modtype="delete"
								hdr="WWW-Authenticate" />
						</send>
					</then>
				</if>
			</response>
			<transition to="Re-Registration" event="REGISTER" />
		</state>

		<state ID="Re-Registration">
			<response>
				<!-- Step 8 of test case 1.1.2.4-->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<then>
						<!-- PCPCII-143 Remove the test for the reg-id incrementing
						verify step="8" requirements="REQ16935">
							<eq>
								<msg_ref type="sip">REGISTER.Contact.reg-id</msg_ref>
								<add_ref type="sip" msg_instance="prev">REGISTER.Contact.reg-id</add_ref>
							</eq>
						</verify-->
						<verify step="8" requirements="REQ16935">
							<eq>
								<msg_ref type="sip">REGISTER.Authorization.nonce</msg_ref>
								<!-- PCPCII-145 Change from "" to empty string -->
								<expr></expr>
							</eq>
						</verify>
						<verify step="8" requirements="REQ16935">
							<eq>
								<msg_ref type="sip">REGISTER.Authorization.response</msg_ref>
								<!-- PCPCII-145 Change from "" to empty string -->
								<expr></expr>
							</eq>
						</verify>
						<send protocol="sip" msgtype="401-REGISTER" />
					</then>
				</if>
			</response>
			<transition to="2nd Re-Authorization" event="REGISTER" />
		</state>
		<state ID="2nd Re-Authorization">
			<response>
				<!-- Step 8 of test case 1.1.2.4-->
				<!-- Step-9 test case 1.1.2.4 - received REGISTER message - authorization-->
				<if>
					<or>
						<eq>
							<msg_ref type="event" />
							<expr>AuthenticateSucceed</expr>
						</eq>
						<eq>
							<msg_ref type="event" />
							<expr>AuthenticateFailed</expr>
						</eq>
					</or>
					<then>
						<!-- this is to prevent the AuthenticateFailed from being forwarded
							to the next state on the AuthenticateSucceed -->
					</then>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">Request</msg_ref>
								<expr>REGISTER</expr>
							</eq>
							<and>
								<contains>
									<msg_ref type="sip">REGISTER</msg_ref>
									<expr>Authorization</expr>
								</contains>
								<digest />
							</and>
						</and>
						<then>
							<generate event="AuthenticateSucceed" />
						</then>
						<else>
							<generate event="AuthenticateFailed" />
							<send protocol="sip" msgtype="503-Register" />
						</else>
					</elseif>
				</if>
			</response>
			<transition to="2nd 200-Register"
				event="AuthenticateSucceed" />
			<transition to="END" event="AuthenticateFailed" />
			<transition to="2nd Re-Authorization" event="REGISTER" />
		</state>

		<state ID="2nd 200-Register">
			<prelude>
				<send protocol="sip" msgtype="200-Register">
					<!-- Step 10 of test case 1.1.2.4- Expires value is set to 60 sec-->
					<mod modtype="replace" hdr="Contact"
						param="expires">
						<expr>60</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="sip">SUBSCRIBE.Event.event-type</msg_ref>
						<expr>reg</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="200-SUBSCRIBE" />
						<sleep time="100" />
						<send protocol="sip" msgtype="NOTIFY" />
					</then>
				</if>
			</response>
			<transition to="Notification3" event="SUBSCRIBE" />
		</state>
		<state ID="Notification3">
			<transition to="Send504" event="200-NOTIFY" />
		</state>
		<state ID="Send504">
			<response>
				<!-- Step 12 of test case 1.1.2.4-->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<then>
						<verify step="11" requirements="REQ16935">
							<and>
								<gte>
									<msg_ref type="sip">REGISTER.TIMESTAMP</msg_ref>
									<add_ref type="sip" msg_instance="last" value="29500">200-REGISTER.TIMESTAMP</add_ref>
								</gte>
								<lte>
									<msg_ref type="sip">REGISTER.TIMESTAMP</msg_ref>
									<add_ref type="sip"	msg_instance="last" value="30500">200-REGISTER.TIMESTAMP</add_ref>
								</lte>
							</and>
						</verify>
						<send protocol="sip" msgtype="504-REGISTER">
							<mod modtype="delete" hdr="WWW-Authenticate" />
						</send>
					</then>
				</if>
			</response>
			<transition to="LastInitReg" event="REGISTER" />
		</state>
		<state ID="LastInitReg">
			<response>
				<verify step="12" requirements="REQ16935">
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
				</verify>
				<!-- PCPCII-143 Remove the test for the reg-id incrementing
				verify step="12" requirements="REQ16935">
					<eq>
						<msg_ref type="sip">REGISTER.Contact.reg-id</msg_ref>
						<add_ref type="sip" msg_instance="prev">REGISTER.Contact.reg-id</add_ref>
					</eq>
				</verify-->
				<verify step="12" requirements="REQ16935">
					<eq>
						<msg_ref type="sip">REGISTER.Authorization.nonce</msg_ref>
						<!-- PCPCII-145 Change from "" to empty string -->
						<expr></expr>
					</eq>
				</verify>
				<verify step="12" requirements="REQ16935">
					<eq>
						<msg_ref type="sip">REGISTER.Authorization.response</msg_ref>
						<!-- PCPCII-145 Change from "" to empty string -->
						<expr></expr>
					</eq>
				</verify>
			</response>
			<transition to="END" event="REGISTER" />
		</state>
	</add_to>
</pc2xml>
