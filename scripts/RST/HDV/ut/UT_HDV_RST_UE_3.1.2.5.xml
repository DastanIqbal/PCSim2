<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)





-->

<pc2xml version="$Revision: 6076 $" name="UT_HDV_RST_UE_3.1.2.5" descrip="This is a unit test for the RST_UE 3.1.2.5 test script" number="1">
	<fsm name="UE1">
		<models>
			<session/>
		</models>
		<NE sim_type="term" elements="DUT" targets="UE0 DUT"/>
		<states initialstate="Register">
			<!-- REGISTER State -->
			<state ID="Register">
				<prelude>
					<send protocol="sip" msgtype="Register" target="PCSCF1" originator="DUT"/>
				</prelude>
				<transition to="Digest" event="401-Register"/>
				<transition to="Setup" event="200-Register"/>
			</state>
			<state ID="Digest">
				<prelude>
					<send protocol="sip" msgtype="Register" target="PCSCF1" originator="DUT"/>
				</prelude>
				<transition to="Setup" event="200-Register"/>
			</state>
			
			<state ID="Setup">
				<prelude>
					<log expr="Start the test script if you haven't already."/>
					<sleep time="23000"/>
					<send protocol="sip" msgtype="Invite" target="UE1" originator="DUT"/>
						
				</prelude>
				<response>
					
					<if>
						<contains>
							<msg_ref type="sip" msg_instance="last" hdr_instance="any">18x-Invite.Require</msg_ref>
							<expr>100rel</expr>
						</contains>
						<then>
							<!--Reliablity required for test sending Prack message to peer.-->
							<send protocol="sip" msgtype="Prack" target="UE1" originator="DUT"/>
						</then>
					</if>
				</response>
				<!-- Transitions for Setup state -->
				<transition from="Setup" to="Proceeding" event="100-INVITE"/>
				<transition from="Setup" to="Alerting" event="180-INVITE"/>
				<transition from="Setup" to="Alerting" event="183-INVITE"/>
				<transition from="Setup" to="Connected" event="200-INVITE"/>
			</state>
			<state ID="Proceeding">
				<!-- Expected responses are 180, 183 or 200 -->
				<response>
					
					<if>
						<eq>
							<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
							<expr>180</expr>
						</eq>
						<then>
						<transition from="Proceeding" to="Alerting" event="180-INVITE"/>
						</then>
					</if>
				</response>
				<!-- Transitions for Proceeding state -->
				<transition from="Proceeding" to="Alerting" event="180-INVITE"/>
				<transition from="Proceeding" to="Alerting" event="183-INVITE"/>
				<transition from="Proceeding" to="Connected" event="200-INVITE"/>
			</state>
			
			<state ID="Alerting" timer="12000">
				
				<response>
					<if>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>UPDATE</expr>
						</eq>
						<then>
							
							<send protocol="sip" msgtype="200-Update" target="UE1" originator="DUT"/>
						</then>
						
						<elseif>
							<and>
								<eq>
									<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
									<expr>180</expr>
								</eq>
								<contains>
									<msg_ref type="sip" hdr_instance="any">180-INVITE.Require</msg_ref>
									<expr>100rel</expr>
								</contains>
							</and>
							<then>
								
								<send protocol="sip" msgtype="Prack" target="UE1" originator="DUT"/>
							</then>
						</elseif>
					</if>
				</response>
				
				<!-- Transitions for Alerting state -->
				<transition to="Answer" event="180-INVITE"/>
				<transition to="Answer" event="TimerExpired"/>
				<transition to="Connected" event="200-INVITE"/>
			</state>
			<state ID="Answer">
				<response>
					<if>
						<eq>
							<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
							<expr>200</expr>
						</eq>
								
						<then>
						<transition to="Connected" event="200-INVITE"/>
						</then>
						
					</if>
				</response>
				<!-- Transitions for Answer state -->
				<transition to="Answer" event="UPDATE"/>
				<transition to="Answer" event="200-PRACK"/>
				<transition to="Answer" event="18x-INVITE"/>
				<transition to="Answer" event="OffHookComplete"/>
				<transition to="Connected" event="200-INVITE"/>
			</state>
			<!-- CONNECTED State -->
			<state ID="Connected">
				<prelude>
					<send protocol="sip" msgtype="ACK" target="UE1" originator="DUT"/>
				</prelude>
				<postlude>
					<send protocol="sip" msgtype="200-BYE" target="UE1" originator="DUT"/>
				</postlude>
				<transition to="END" event="BYE"/>
			</state>
			
		</states>
	</fsm>
</pc2xml>
