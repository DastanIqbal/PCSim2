<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)



-->
<!-- First are the document type and the attributes for our document -->
<pc2xml version="$Revision: 7768 $" name="EUE Prov 1.1.4.21" 
		descrip="Verify Proper Post-Initialization Behavior for the eUE in DHCPv6" 
		number="EUE Prov 1.1.4.21">

	<!-- Next we define the each of state machines -->
	<template file="./templates/EUE_Prov_B_1_1_1.xml" name="RebootCM"/>
	
	<add_to fsm="RebootCM">
		<transition from="StartCapture_RebootWait" to="VerifyProvState" event="TimerExpired"/>
	
		<state ID="VerifyProvState" >
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP</msg_ref>
					</mod>
					<mod modtype="replace" hdr="version">
						<expr>2c</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="1">
					<eq>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr>
					</eq>
				</verify>
			</response>
			<transition to="ChangeAddress" event="SNMPResp"/>
			<transition to="ChangeAddress" event="SNMPRespFailure"/>
			
		</state>

		<state ID="ChangeAddress" timer="180000">
			<prelude once="true">
				<log promptUser="true" 
				    expr="Configure the DHCPv6 service to provide a different IPv6 address to the DUT and deploy."/>
			</prelude>

			<transition to="VerifyRenew" event="TimerExpired"/>
		</state>
		
		<state ID="VerifyRenew">
			<prelude once="true">
				<stop_capture/>
				<parse_capture name="eUE_DHCPv6">
					<parser_filter protocol="dhcpv6" clientMAC="DUT.MAC Address"/>
				</parse_capture>
				<generate event="Branch1Event"/>
			</prelude>
			<response>
				<verify step="3">
					<and>
						<notnull>
							<capture_ref type="dhcpv6" name="eUE_DHCPv6">Renew.num</capture_ref>
						</notnull>
						<gt>
							<capture_ref type="dhcpv6" name="eUE_DHCPv6" msg_instance="last">Solicit.num</capture_ref>
							<capture_ref type="dhcpv6" name="eUE_DHCPv6">Renew.num</capture_ref>
						</gt>
					</and>
				</verify>
				
				<verify step="3">
					<and>
						<lt>
							<capture_ref type="dhcpv6" name="eUE_DHCPv6" add="178.5">Reply.frame.time_relative.show</capture_ref>
							<capture_ref type="dhcpv6" name="eUE_DHCPv6" >Renew.frame.time_relative.show</capture_ref>
						</lt>
						<gt>
							<capture_ref type="dhcpv6" name="eUE_DHCPv6" add="181.5">Reply.frame.time_relative.show</capture_ref>
							<capture_ref type="dhcpv6" name="eUE_DHCPv6" msg_instance="last">Renew.frame.time_relative.show</capture_ref>
						</gt>
					</and>
				</verify>
			</response>
			<postlude>
				<log promptUser="true" 
				expr="Configure the DHCPv6 service to provide the original IPv6 address to the DUT"/>
			</postlude>
			<transition to="Reboot2" event="Branch1Event"/>
		</state>
		
		<state ID="Reboot2" timer="5000">
			<!-- First we need to power cycle the UE to conduct the test -->
			<prelude once="true" >
				<send protocol="utility" msgtype="SNMPSet">
					<mod modtype="add" hdr="array">
						<var_expr>
							<expr>varBind 1 1 3 \r\n ][ , </expr>
							<expr>DOCS-CABLE-DEVICE-MIB::docsDevResetNow.0,INTEGER,1][\r\n</expr>
						</var_expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.CM IP Address</msg_ref>
					</mod>
					<!-- Always use version 2 for a CM reset -->
					<mod modtype="replace" hdr="version">
						<expr>2c</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>SNMPRespFailure</expr>
					</eq>
					<then>
						<fail/>
					</then>
				</if>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
							<expr>0</expr>
						</eq>
						<eq>
							<msg_ref type="sip">REGISTER.Expires.value</msg_ref>
							<expr>0</expr>
						</eq>
					</or>
					<then>
						<send protocol="sip" msgtype="200-REGISTER"/>
					</then>
				</if>
			</response>
			<!-- Test cases deriving their functionality from this template
				should change the following transition to some local state -->
			<transition to="StartCapture_RebootWait2" event="SNMPResp"/>
			<transition to="StartCapture_RebootWait2" event="TimerExpired"/>
			<transition to="END" event="SNMPRespFailure"/>
			<transition to="Reboot2" event="REGISTER"/>
		</state>
					
		<state ID="StartCapture_RebootWait2" timer="150000">
			<prelude once="true" >
				<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">DUT.IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.DHCP Server IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.DNS Server IP</msg_ref>
						</var_expr>
					</filter>
				</start_capture>
			</prelude>
			<transition to="VerifyProvState2" event="TimerExpired"/>
		</state>
		
		<state ID="VerifyProvState2">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP</msg_ref>
					</mod>
					<mod modtype="replace" hdr="version">
						<expr>2c</expr>
					</mod>
				</send>

			</prelude>
			<response>
				<verify step="4">
					<eq>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr>
					</eq>
				</verify>
			</response>
			<transition to="ConfigureBasic2" event="SNMPResp"/>
			<transition to="ConfigureBasic2" event="SNMPRespFailure"/>
		</state>
		
		<state ID="ConfigureBasic2" provFile="v6.C.1.2.1_basic.bin"
		policyFile="X_eUEv6_basic_T1_2nd" nextState="VerifyDNSServer1"/>

		
		<state ID="VerifyDNSServer1" timer="210000">
			<prelude>
				<sleep time="180000"/>
				<send protocol="utility" msgtype="SNMPGet">
				    <mod modtype="add" hdr="oids">
					<expr>CL-PKTC-EUE-PROV-MGMT-MIB::pktcEUEDnsv6ServerAddress1.0</expr>
				    </mod>
				    <mod modtype="replace" hdr="agentip">
					<msg_ref type="platform">DUT.IP</msg_ref>
				    </mod>
				    <mod modtype="replace" hdr="version">
					<expr>2c</expr>
				    </mod>
				</send>
			</prelude>
			
			<response>
				<var name="DNS1">
					<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
				</var>
			</response>
				
			<transition to="VerifyDNSServer2" event="SNMPResp"/>
			<transition to="VerifyDNSServer2" event="SNMPRespFailure"/>
		</state>
		
		<state ID="VerifyDNSServer2" timer="30000">
			<prelude>
				<send protocol="utility" msgtype="SNMPGet">
				    <mod modtype="add" hdr="oids">
					<expr>CL-PKTC-EUE-PROV-MGMT-MIB::pktcEUEDnsv6ServerAddress2.0</expr>
				    </mod>
				    <mod modtype="replace" hdr="agentip">
					<msg_ref type="platform">DUT.IP</msg_ref>
				    </mod>
				    <mod modtype="replace" hdr="version">
					<expr>2c</expr>
				    </mod>
				</send>
			</prelude>
			<response>
				<var name="DNS2">
					<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
				</var>
			</response>
				
			<transition to="VerifySyslogServer" event="SNMPResp"/>
			<transition to="VerifySyslogServer" event="SNMPRespFailure"/>
		</state>
		
		<state ID="VerifySyslogServer" timer="30000">
			<prelude>
				<send protocol="utility" msgtype="SNMPGet">
				    <mod modtype="add" hdr="oids">
					<expr>PKTC-EVENT-MIB::pktcDevEvSyslogAddress.0</expr>
				    </mod>
				    <mod modtype="replace" hdr="agentip">
					<msg_ref type="platform">DUT.IP</msg_ref>
				    </mod>
				    <mod modtype="replace" hdr="version">
					<expr>2c</expr>
				    </mod>
				</send>
			</prelude>
			<response>
				<var name="SyslogServer">
					<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
				</var>
			</response>
			
			<transition to="VerifyConfigFile" event="SNMPResp"/>
			<transition to="VerifyConfigFile" event="SNMPRespFailure"/>
		</state>
		
		<state ID="VerifyConfigFile" timer="30000">
			<prelude>
				<send protocol="utility" msgtype="SNMPGet">
				    <mod modtype="add" hdr="oids">
					<expr>PKTC-IETF-MTA-MIB::pktcMtaDevConfigFile.0</expr>
				    </mod>
				    <mod modtype="replace" hdr="agentip">
					<msg_ref type="platform">DUT.IP</msg_ref>
				    </mod>
				    <mod modtype="replace" hdr="version">
					<expr>2c</expr>
				    </mod>
				</send>
			</prelude>
			<response>
				<var name="ConfigFileName">
					<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
				</var>
			</response>
				
			<transition to="StopCaptureVerify" event="SNMPResp"/>
			<transition to="StopCaptureVerify" event="SNMPRespFailure"/>
		</state>

		
		<state ID="StopCaptureVerify">
			<prelude>
				<sleep time="180000"/>
				<stop_capture/>
				<parse_capture name="eUE_DHCPv6_2">
					<parser_filter protocol="dhcpv6" clientMAC="DUT.MAC Address"/>
				</parse_capture>
				<generate event="Branch1Event"/>
			</prelude>
			<response>
				<verify step="6">
					<and>
						<null>
							<capture_ref type="dhcpv6" name="eUE_DHCPv6_2" msg_instance="2">Solicit.num</capture_ref>
						</null>
						<and>
							<lt>
								<capture_ref type="dhcpv6" name="eUE_DHCPv6_2" add="178.5">Reply.frame.time_relative.show</capture_ref>
								<capture_ref type="dhcpv6" name="eUE_DHCPv6_2">Renew.frame.time_relative.show</capture_ref>
							</lt>
							<gt>
								<capture_ref type="dhcpv6" name="eUE_DHCPv6_2" add="181.5">Reply.frame.time_relative.show</capture_ref>
								<capture_ref type="dhcpv6" name="eUE_DHCPv6_2">Renew.frame.time_relative.show</capture_ref>
							</gt>
						</and>
					</and>
				</verify>
				
				<verify step="7">
					<eq ignoreCase="true">
						<var_ref name="DNS1" />
						<capture_ref type="dhcpv6" name="eUE_DHCPv6_2" msg_instance="2" >Reply.Relay.Option23.DNS servers address.value</capture_ref>
						<!-- Waiting for fix on Wireshark--> 
						<!--capture_ref type="dhcpv6" name="eUE_DHCPv6_2" msg_instance="2" >Reply.Relay.Option23.DNS servers address1.value</capture_ref-->
					</eq>
				</verify>
								
				<verify step="7">
					<eq ignoreCase="true">
						<var_ref name="DNS2"/>
						<capture_ref type="dhcpv6" name="eUE_DHCPv6_2" msg_instance="2" >Reply.Relay.Option23.DNS servers address.value</capture_ref>
						<!-- Waiting for fix on Wireshark--> 
						<!--capture_ref type="dhcpv6" name="eUE_DHCPv6_2" msg_instance="2" >Reply.Relay.Option23.DNS servers address2.value</capture_ref-->
					</eq>
				</verify>
				
				<verify step="7">
					<eq ignoreCase="true">
						<var_ref name="SyslogServer"/>
						<capture_ref type="dhcpv6" name="eUE_DHCPv6_2" msg_instance="2" >Reply.Relay.Option17.Suboption 34.IPv6 address 1.value</capture_ref>
					</eq>
				</verify>
				
				<verify step="7">
					<and>
						<contains>
							<var_ref name="ConfigFileName"/>
							<expr>v6.C.1.2.2_basic.bin</expr>
						</contains>
						<dnc>
							<capture_ref type="dhcpv6" name="eUE_DHCPv6_2" msg_instance="2">Reply.Relay.Option17.Suboption 33.show</capture_ref>
							<expr>v6.C.1.2.2_basic.bin</expr>
						</dnc>
					</and>
				</verify>				
				
				<verify step="8">
					<and>
						<lt>
							<capture_ref type="dhcpv6" name="eUE_DHCPv6_2" add="178.5" msg_instance="2">Reply.frame.time_relative.show</capture_ref>
							<capture_ref type="dhcpv6" name="eUE_DHCPv6_2" msg_instance="2">Renew.frame.time_relative.show</capture_ref>
						</lt>
						<gt>
							<capture_ref type="dhcpv6" name="eUE_DHCPv6_2" add="181.5" msg_instance="2">Reply.frame.time_relative.show</capture_ref>
							<capture_ref type="dhcpv6" name="eUE_DHCPv6_2" msg_instance="2">Renew.frame.time_relative.show</capture_ref>
						</gt>
					</and>
				</verify>
				
				<verify step="8">
					<eq>
						<capture_ref type="dhcpv6" name="eUE_DHCPv6_2">Renew.ipv6.dst_host.show</capture_ref>
						<msg_ref type="platform">DUT.DHCP Server IP</msg_ref>
					</eq>
				</verify>
			
				<verify step="10">
					<eq>
						<capture_ref type="dhcpv6" name="eUE_DHCPv6_2" msg_instance="2">Renew.ipv6.dst_host.show</capture_ref>
						<msg_ref type="platform">DUT.DHCP Server IP</msg_ref>
					</eq>
				</verify>
			</response>
			<transition to="END" event="Branch1Event"/>
		</state>
	</add_to>
</pc2xml>
