<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)
	PCPCII-100 : The script is having an issue in the DUTRelease state. The logic for obtaining the
		INVITE for the second call was using the msg_instance of prev, but this would be the Reinvite
		for the initial call. Update the code to create a variable and store the value for the 
		correct INVITE message to be used in the release logic. (ghassler 1/9/09)




-->
<pc2xml version="$Revision: 8188 $" 
	name="RST-UE 1.5.5.12" 
	descrip="3 Way Conference â€“ when the third party is still ringing" 
	number="RST-UE 1.5.5.12" inspector="disable">
	
	<template file="./templates/Proxy_Transferor.xml" name="Core"/>
	
	<remove_from fsm="Core">
		<state ID="UE2Setup"/>
		<state ID="UE2Alerting"/>
	</remove_from>
	
	<add_to fsm="Core">
		<states initialstate="2CMTSReminder"/>
		<state ID="2CMTSReminder">
			<prelude>
				<log promptUser="true" 
					expr="Reminder: You will need to have the two UEs for this test on\ndifferent CMTSs in order to capture the RTP traffic between them."/>
				<generate event="Branch1Event"/>
				<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">UE0.IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">Platform.STUN IP Address</msg_ref>
						</var_expr>
					</filter>
				</start_capture>
			</prelude>
			<transition to="Register" event="Branch1Event"/>
		</state>
		
		<state ID="UE2Setup">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
				</if>
				<!-- Create a variable with the call id so that we can use
					it in the release logic later. This allows the system to
					use the correct INVITE message in case there are retransmissions
					of the INVITE message in a congested network. -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>INVITE</expr>
					</eq>
					<then>
						<var name="Dialog2CallId">
							<msg_ref type="sip">INVITE.Call-ID</msg_ref>
						</var>
					</then>
				</if>
			</response>
			<transition to="UE2Setup" event="DialDigitsComplete"/>
			<transition to="UE2Setup" event="INVITE"/>
			<!--  Add new transition for 100 for this test scenario -->
			<transition to="UE2Setup" event="100-INVITE"/>
			<transition to="UE2Alerting" event="xxx-INVITE"/>
		</state>
		
		<state ID="UE2Alerting" timer="3000">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="UE2Alerting" event="CANCEL"/>
			<transition to="UE2Alerting" event="OPTIONS"/>
			<transition to="UE2Alerting" event="200-OPTIONS"/>
			<transition to="UE2Alerting" event="PRACK"/>
			<transition to="UE2Alerting" event="200-PRACK"/>
			<transition to="UE2Alerting" event="UPDATE"/>
			<transition to="UE2Alerting" event="200-UPDATE"/>
			<transition to="UE2Alerting" event="xxx-INVITE"/>
			<transition to="UE2Alerting" event="xxx-CANCEL"/>
			<transition to="StreamMediaToUE1" event="TimerExpired"/>
		</state>
		
		<state ID="StreamMediaToUE1">
			<prelude once="true">
				<send protocol="utility" msgtype="HookFlash"/>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>ACK</expr>
					</eq>
					<then>
						<log promptUser="true" verify="true" 
							step="4" group="202" requirements="REQ16697" 
							expr="Verify that the both UE1 and the DUT play out ringback\nand the ringback tone is the same tone for both devices."/>
					</then>
				</if>
			</response>
			<transition to="StreamMediaToUE1" event="HookFlashComplete"/>
			<transition to="StreamMediaToUE1" event="REINVITE"/>
			<transition to="StreamMediaToUE1" event="xxx-INVITE"/>
			<transition to="AlertingUE2" event="ACK"/>
		</state>
		
		<state ID="AlertingUE2" timer="12000">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
				</if>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>TimerExpired</expr>
					</eq>
					<then>
						<send protocol="utility" msgtype="OffHook">
							<mod modtype="replace" hdr="voiceport">
								<msg_ref type="platform">Platform.voiceport2</msg_ref>
							</mod>
						</send>
					</then>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>ACK</expr>
					</eq>
					<then>
						<log promptUser="true" verify="true" 
							step="5" requirements="13863" 
							expr="Verify that there is a three way voice between all 3 devices."/>
					</then>
				</if>
			</response>
			<transition to="AlertingUE2" event="INVITE"/>
			<transition to="AlertingUE2" event="OPTIONS"/>
			<transition to="AlertingUE2" event="200-OPTIONS"/>
			<transition to="AlertingUE2" event="PRACK"/>
			<transition to="AlertingUE2" event="200-PRACK"/>
			<transition to="AlertingUE2" event="UPDATE"/>
			<transition to="AlertingUE2" event="200-UPDATE"/>
			<transition to="AlertingUE2" event="18x-INVITE"/>
			<transition to="AlertingUE2" event="2xx-INVITE"/>
			<transition to="AlertingUE2" event="OffHookComplete"/>
			<transition to="ConnectedUE2" event="ACK"/>
		</state>
		
		<state ID="ConnectedUE2" timer="10000">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="ConnectedUE2" event="xxx-INVITE"/>
			<transition to="ConnectedUE2" event="ACK"/>
			<transition to="OnHook" event="TimerExpired"/>
		</state>
		
		<state ID="OnHook">
			<prelude>
				<send protocol="utility" msgtype="OnHook">
					<mod modtype="replace" hdr="voiceport">
						<msg_ref type="platform">Platform.voiceport1</msg_ref>
					</mod>
				</send>
			</prelude>
			<transition to="UE1Release" event="OnHookComplete"/>
		</state>
		
		<state ID="UE1Release">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<!-- Using the IP address for messages from UE1 and UE2 works.
					 	For traffic from the DUT we need to use the INVITE.Call-ID to
					 	determine whom the message is intended. -->
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="UE1Release" event="Bye"/>
			<transition to="DUTRelease" event="200-Bye"/>
			<transition to="UE1Release" event="OnHookComplete"/>
		</state>
		
		<state ID="DUTRelease">
			<prelude once="true">
				<send protocol="utility" msgtype="OnHook"/>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<or>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
							<or>
								<eq>
									<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
									<msg_ref type="platform">UE1.IP</msg_ref>
								</eq>
								<eq>
									<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
									<msg_ref type="platform">UE1.IP</msg_ref>
								</eq>
							</or>
						</or>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<!-- Next for retransmission purposes, we need to use the Call-ID to
						determine whom the target should be for the message -->
					<elseif>
						<!--  PCPCPII-100 Change the msg_instance setting from prev to use a variable
							that contains the correct value regardless of retransmissions. -->
						<or>
							<eq>
								<msg_ref type="sip">BYE.Call-ID</msg_ref>
								<var_ref name="Dialog2CallId"/>
							</eq>
							<eq>
								<msg_ref type="sip">200-BYE.Call-ID</msg_ref>
								<var_ref name="Dialog2CallId"/>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">BYE.Call-ID</msg_ref>
								<msg_ref type="sip" msg_instance="first">INVITE.Call-ID</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">200-BYE.Call-ID</msg_ref>
								<msg_ref type="sip" msg_instance="first">INVITE.Call-ID</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="DUTRelease" event="Bye"/>
			<transition to="OnHookUE2" event="200-Bye"/>
			<transition to="DUTRelease" event="OnHookComplete"/>
		</state>
		
		<state ID="OnHookUE2">
			<prelude once="true">
				<send protocol="utility" msgtype="OnHook">
					<mod modtype="replace" hdr="voiceport">
						<msg_ref type="platform">Platform.voiceport2</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<or>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
							<or>
								<eq>
									<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
									<msg_ref type="platform">UE1.IP</msg_ref>
								</eq>
								<eq>
									<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
									<msg_ref type="platform">UE1.IP</msg_ref>
								</eq>
							</or>
						</or>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<!-- Next for retransmission purposes, we need to use the Call-ID to
						determine whom the target should be for the message -->
					<elseif>
						<!--  PCPCPII-100 Change the msg_instance setting from prev to use a variable
							that contains the correct value regardless of retransmissions. -->
						<or>
							<eq>
								<msg_ref type="sip">BYE.Call-ID</msg_ref>
								<var_ref name="Dialog2CallId"/>
							</eq>
							<eq>
								<msg_ref type="sip">200-BYE.Call-ID</msg_ref>
								<var_ref name="Dialog2CallId"/>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">BYE.Call-ID</msg_ref>
								<msg_ref type="sip" msg_instance="first">INVITE.Call-ID</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">200-BYE.Call-ID</msg_ref>
								<msg_ref type="sip" msg_instance="first">INVITE.Call-ID</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="OnHookUE2" event="Bye"/>
			<transition to="END" event="200-Bye"/>
			<transition to="END" event="OnHookComplete"/>
		</state>
	</add_to>
</pc2xml>
