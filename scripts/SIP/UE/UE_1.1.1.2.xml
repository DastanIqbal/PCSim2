<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)





-->
<pc2xml version="$Revision: 8188 $" 
	name="SIP-UE 1.1.1.2" 
	descrip="UE Ignores Record-Route Header in a REGISTER Response" 
	number="SIP-UE 1.1.1.2" inspector="disable">
	
	<template file="./templates/UERegAndSubTemp.xml" name="Registrar"/>
	<template file="./templates/CallOrigAtUETemp.xml" name="UE1"/>
	
	<add_to fsm="UE1">
		<states initialstate="WaitRegistered"/>
		<!-- Transitioning from one fsm  to other on SucceedEvent-->
		<state ID="WaitRegistered">
			<transition to="OffHook" event="Registered"/>
		</state>
	</add_to>
	
	<remove_from fsm="Registrar">
		<state ID="PendingRegistration"/>
		<state ID="Authorization"/>
		<state ID="Registered"/>
		<state ID="NotificationComplete"/>
	</remove_from>
	
	<remove_from fsm="UE1">
		<state ID="Setup"/>
	</remove_from>
	
	<add_to fsm="Registrar">
		<state ID="PendingRegistration">
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="401-REGISTER">
							<!-- Step-2, Message Flow for test case 1.1.1.2 - 
							Add the following header field: Record-Route: 
                            <sip:hello-world-cscf.pclab.com;lr;keepalive=stun> -->
							<mod modtype="add" hdr="Record-Route">
								<expr>&lt;sip:hello-world-cscf.pclab.com;lr;keepalive=stun&gt;</expr>
							</mod>
						</send>
					</then>
				</if>
			</response>
			<transition to="Authorization" event="REGISTER"/>
		</state>
		
		<state ID="Authorization">
			<response>
				<if>
					<neq>
						<msg_ref type="event"/>
						<expr>AuthenticateSucceed</expr>
					</neq>
					<then>
						<verify step="3" requirements="RFC442">
							<eq>
								<msg_ref type="sip">REGISTER.CSeq.value</msg_ref>
								<add_ref type="sip" msg_instance="prev">REGISTER.CSeq.value</add_ref>
							</eq>
						</verify>
					</then>
				</if>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>AuthenticateSucceed</expr>
					</eq>
					<then>
						<!-- this is to prevent the AuthenticateFailed from being forwarded
										 to the next state on the AuthenticateSucceed -->
					</then>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">Request</msg_ref>
								<expr>REGISTER</expr>
							</eq>
							<and>
								<contains>
									<msg_ref type="sip">REGISTER</msg_ref>
									<expr>Authorization</expr>
								</contains>
								<digest/>
							</and>
						</and>
						<then>
							<generate event="AuthenticateSucceed"/>
						</then>
						<else>
							<generate event="AuthenticateFailed"/>
							<send protocol="sip" msgtype="503-Register"/>
						</else>
					</elseif>
				</if>
			</response>
			<transition to="Registered" event="AuthenticateSucceed"/>
			<transition to="END" event="AuthenticateFailed"/>
			<transition to="Authorization" event="REGISTER"/>
		</state>
		
		<state ID="Registered">
			<prelude once="true">
				<send protocol="sip" msgtype="200-REGISTER">
					<!-- Step-4, Message Flow for test case 1.1.1.2 - 
					Record-Route Header in Response Message to a REGISTER Request -->
					<mod modtype="add" hdr="Record-Route">
						<expr>&lt;sip:hello-world-cscf.pclab.com;lr;keepalive=stun&gt;</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>SUBSCRIBE</expr>
						</eq>
						<contains>
							<msg_ref type="sip">SUBSCRIBE.Event</msg_ref>
							<expr>reg</expr>
						</contains>
					</and>
					<then>
						<send protocol="sip" msgtype="200-SUBSCRIBE"/>
						<sleep time="100"/>
						<send protocol="sip" msgtype="NOTIFY"/>
					</then>
				</if>
			</response>
			<!-- Transitions for Registered state -->
			<transition to="Registered" event="REGISTER"/>
			<transition to="Notification" event="SUBSCRIBE"/>
		</state>
		
		<state ID="NotificationComplete" ES="True">
			<prelude>
				<generate event="Registered" fsm="UE1"/>
			</prelude>
		</state>
	</add_to>
	
	<add_to fsm="UE1">
		<state ID="Setup">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>INVITE</expr>
					</eq>
					<then>
						<verify step="6" requirements="RFC443">
							<dnc>
								<msg_ref type="sip" hdr_instance="any">INVITE.Route</msg_ref>
								<expr>&lt;sip:hello-world-cscf.pclab.com;lr;keepalive=stun&gt;</expr>
							</dnc>
						</verify>
					</then>
				</if>
			</response>
			<transition to="Setup" event="DialDigitsComplete"/>
			<transition to="END" event="INVITE"/>
		</state>
	</add_to>
</pc2xml>
