<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)





-->
<pc2xml version="$Revision: 8188 $" 
	name="SIP-UE 1.8.3" 
	descrip="Verification of incrementing Cseq numbers" 
	number="SIP-UE 1.8.3">
	
	<template file="./templates/CallOrigAtUETemp.xml" name="UE1"/>
	
	<remove_from fsm="UE1">
		<state ID="Answer"/>
		<state ID="Connected"/>
		<state ID="Releasing"/>
		<state ID="OnHook"/>
	</remove_from>
	
	<add_to fsm="UE1">
		<!--  We need to create a variable to hold the Last CSeq number -->
		<state ID="Register" sub="response">
			<var name="Last_CSeq">
				<expr>0</expr>
			</var>
		</state>
		
		<state ID="Answer" timer="15000">
			<response>
				<var name="Last_CSeq">
					<msg_ref type="sip" msg_instance="last">Request.CSeq.value</msg_ref>
				</var>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>TimerExpired</expr>
					</eq>
					<then>
						<!--Sending 200-Invite-->
						<send protocol="sip" msgtype="200-INVITE"/>
					</then>
				</if>
				<!-- Now test for an UPDATE message -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required or supported sending 200-Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>ACK</expr>
					</eq>
					<then>
						<assign name="Last_CSeq">
							<add_ref type="sip" msg_instance="prev">Request.CSeq.value</add_ref>
						</assign>
						<!--Step 2 test case SIP 1.8.3 - 
						Verify ACK.CSeq.value = INVITE.CSeq.value -->
						<verify step="2" requirements="RFC631, RFC632">
							<eq>
								<msg_ref type="sip">ACK.CSeq.value</msg_ref>
								<msg_ref type="sip" msg_instance="last">INVITE.CSeq.value</msg_ref>
							</eq>
						</verify>
					</then>
				</if>
			</response>
			<transition to="Answer" event="UPDATE"/>
			<transition to="Answer" event="TimerExpired"/>
			<transition to="Connected" event="ACK"/>
		</state>
		
		<state ID="Connected" timer="20000">
			<transition to="OnHook" event="TimerExpired"/>
		</state>
		
		<state ID="OnHook">
			<!--Step 2 test case SIP 1.8.3 - Terminate the session at the UE -->
			<prelude>
				<send protocol="utility" msgtype="OnHook"/>
			</prelude>
			<transition to="Releasing" event="OnHookComplete"/>
		</state>
		
		<state ID="Releasing">
			<response>
				<!--Step 3 test case SIP 1.8.3 - 
				Verify BYE.CSeq.value = Last-Request (except ACK).CSeq.value +1-->
				<verify step="3" requirements="RFC631, RFC632">
					<eq>
						<msg_ref type="sip">BYE.CSeq.value</msg_ref>
						<var_ref name="Last_CSeq"/>
					</eq>
				</verify>
			</response>
			<postlude>
				<!--Sending 200-BYE to peer to terminate call.-->
				<send protocol="sip" msgtype="200-BYE"/>
			</postlude>
			<transition to="END" event="BYE"/>
		</state>
	</add_to>
</pc2xml>
