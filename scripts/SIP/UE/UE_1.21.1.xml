<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	PCPCII-139 : Update the Voicetronix modifiers to use the new values. (ghassler 07/10/2009)




-->
<pc2xml version="$Revision: 8188 $" 
	name="SIP-UE 1.21.1" 
	descrip="PUBLISH Format Verification and UE Ignores Record-route in PUBLISH Response " 
	number="SIP-UE 1.21.1" inspector="disable">

	<template file="./templates/Proxy.xml" name="Core"/>
	<!-- This script assumes UE1 is the DUT and UE2 is defined by UE1 in 
		the configuration file. -->

	<remove_from fsm="Core">
		<state ID="OnHook"/>
		<state ID="OnHookUE1"/>
	</remove_from>

	<add_to fsm="Core">
		<!-- OnHook State -->
		<state ID="OnHook">
			<prelude once="true">
				<var name="publish">
					<expr>false</expr>
				</var>
				<var name="bye200">
					<expr>false</expr>
				</var>
				<send protocol="utility" msgtype="OnHook"/>
			</prelude>
			<response>
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PUBLISH</expr>
						</eq>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE0.IP</msg_ref>
						</eq>
					</and>
					<then>
						<verify step="3" requirements="RFC2128">
							<contains>
								<msg_ref type="sip" msgtype="PUBLISH">PUBLISH</msg_ref>
								<expr>Event: </expr>
							</contains>
						</verify>
						<verify step="4" requirements="RFC2130">
							<dnc>
								<msg_ref type="sip">PUBLISH</msg_ref>
								<expr>Sip-If-Match: </expr>
							</dnc>
						</verify>
						<verify step="5" requirements="RFC2131">
							<gt>
								<msg_ref type="sip">PUBLISH.Content-Length.value</msg_ref>
								<expr>0</expr>
							</gt>
						</verify>
						<send protocol="sip" msgtype="200-PUBLISH">
							<!-- Step-6, Message Flow for test case SIP 1.21.1 -
							Verify following message header field:PUBLISHâ†’Sip-If-Match is not present.-->
							<mod modtype="add" hdr="Record-Route">
								<expr>sip:dummy.pclab.com;lr;keepalive=stun</expr>
							</mod>
						</send>
						<assign name="publish">
							<expr>true</expr>
						</assign>
					</then>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">Request</msg_ref>
								<expr>PUBLISH</expr>
							</eq>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
						</and>
						<then>
							<send protocol="sip" msgtype="200-PUBLISH" target="UE1"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE0"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Response</msg_ref>
						<expr>200-BYE</expr>
					</eq>
					<then>
						<assign name="bye200">
							<expr>true</expr>
						</assign>
					</then>
				</if>
				<if>
					<and>
						<eq>
							<var_ref name="publish"/>
							<expr>true</expr>
						</eq>
						<eq>
							<var_ref name="bye200"/>
							<expr>true</expr>
						</eq>
					</and>
					<then>
						<generate event="Branch1Event"/>
					</then>
				</if>
			</response>
			<transition to="OnHook" event="OnHookComplete"/>
			<transition to="OnHook" event="Bye"/>
			<transition to="OnHook" event="PUBLISH"/>
			<transition to="OnHook" event="200-Bye"/>
			<transition to="OnHookUE1" event="Branch1Event"/>
		</state>
		
		<state ID="OnHookUE1" timer="4000">
			<prelude once="true">
				<send protocol="utility" msgtype="OnHook">
					<mod modtype="replace" hdr="voiceport">
						<msg_ref type="platform">Platform.voiceport1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PUBLISH</expr>
						</eq>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</and>
					<then>
						<send protocol="sip" msgtype="200-PUBLISH" target="UE1"/>
					</then>
				</if>
			</response>
			<transition to="OnHookUE1" event="OnHookComplete"/>
			<transition to="CallComplete1" event="PUBLISH"/>
			<transition to="CallComplete1" event="TimerExpired"/>
		</state>
		
		<state ID="CallComplete1" ES="true">
			<transition to="OffHook2" event="SessionTerminated"/>
		</state>
		
		<state ID="OffHook2">
			<prelude>
				<send protocol="utility" msgtype="OffHook"/>
			</prelude>
			<transition to="Setup2" event="OffHookComplete"/>
		</state>
		
		<state ID="Setup2">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Setup2" event="DialDigitsComplete"/>
			<transition to="Setup2" event="INVITE"/>
			<transition to="Alerting2" event="CANCEL"/>
			<transition to="Alerting2" event="xxx-INVITE"/>
			<transition to="Setup2" event="OffHookComplete"/>
		</state>
		
		<state ID="Alerting2" timer="6000">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>TimerExpired</expr>
					</eq>
					<then>
						<send protocol="utility" msgtype="OffHook">
							<mod modtype="replace" hdr="voiceport">
								<msg_ref type="platform">Platform.voiceport1</msg_ref>
							</mod>
						</send>
					</then>
				</if>
			</response>
			<transition to="Alerting2" event="DialDigitsComplete"/>
			<transition to="Alerting2" event="INVITE"/>
			<transition to="Alerting2" event="OPTIONS"/>
			<transition to="Alerting2" event="200-OPTIONS"/>
			<transition to="Alerting2" event="PRACK"/>
			<transition to="Alerting2" event="200-PRACK"/>
			<transition to="Alerting2" event="UPDATE"/>
			<transition to="Alerting2" event="200-UPDATE"/>
			<transition to="Alerting2" event="xxx-INVITE"/>
			<transition to="Alerting2" event="OffHookComplete"/>
			<transition to="Connected2" event="ACK"/>
		</state>
		
		<state ID="Connected2" timer="10000">
			<transition to="OnHook2" event="TimerExpired"/>
		</state>
		
		<state ID="OnHook2">
			<prelude once="true">
				<var name="publish">
					<expr>false</expr>
				</var>
				<var name="bye200">
					<expr>false</expr>
				</var>
				<send protocol="utility" msgtype="OnHook"/>
			</prelude>
			<response>
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PUBLISH</expr>
						</eq>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE0.IP</msg_ref>
						</eq>
					</and>
					<then>
						<verify step="12" requirements="RFC2126, RFC2198">
							<dnc>
								<msg_ref type="sip">PUBLISH</msg_ref>
								<expr>dummy.pclab.com</expr>
							</dnc>
						</verify>
						<send protocol="sip" msgtype="200-PUBLISH"/>
						<assign name="publish">
							<expr>true</expr>
						</assign>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE0"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Response</msg_ref>
						<expr>200-BYE</expr>
					</eq>
					<then>
						<assign name="bye200">
							<expr>true</expr>
						</assign>
					</then>
				</if>
				<if>
					<and>
						<eq>
							<var_ref name="publish"/>
							<expr>true</expr>
						</eq>
						<eq>
							<var_ref name="bye200"/>
							<expr>true</expr>
						</eq>
					</and>
					<then>
						<generate event="Branch1Event"/>
					</then>
				</if>
			</response>
			<transition to="OnHook2" event="OnHookComplete"/>
			<transition to="OnHook2" event="Bye"/>
			<transition to="OnHook2" event="PUBLISH"/>
			<transition to="OnHook2" event="200-Bye"/>
			<transition to="OnHookUE1_2" event="Branch1Event"/>
		</state>
		
		<state ID="OnHookUE1_2" timer="5000">
			<prelude once="true">
				<send protocol="utility" msgtype="OnHook">
					<mod modtype="replace" hdr="voiceport">
						<msg_ref type="platform">Platform.voiceport1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PUBLISH</expr>
						</eq>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</and>
					<then>
						<send protocol="sip" msgtype="200-PUBLISH" target="UE1"/>
					</then>
				</if>
			</response>
			<transition to="OnHookUE1_2" event="OnHookComplete"/>
			<transition to="CallComplete1_2" event="PUBLISH"/>
			<transition to="CallComplete1_2" event="TimerExpired"/>
		</state>
		
		<state ID="CallComplete1_2" ES="true">
			<transition to="END" event="SessionTerminated"/>
		</state>
	</add_to>
</pc2xml>
