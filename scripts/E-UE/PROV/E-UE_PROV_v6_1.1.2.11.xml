<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)



-->
<!-- Document type and attributes. -->
<pc2xml version="$Revision: 6076 $"
        name="E-UE_PROV_1.1.2.11"
        descrip="eUE to utilize the values provided in sub-option 5 of the DHCP configuration."
        number="E-UE_PROV_1.1.2.11">


    <!-- Reset UE; start capture. -->
    <template file="./templates/EUE_Prov_B_1_1_1.xml" name="SubOption5"/>


    <add_to fsm="SubOption5">
        <transition from="StartCapture_RebootWait" to="EUEProvisions" event="TimerExpired"/>

        <state ID="EUEProvisions">
            <prelude once="true">
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
		    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
		<verify step="3">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="SubOption5_1" event="SNMPResp"/>
	    <transition to="END" event="SNMPRespFailure"/>
            <!--transition to="END" event="SNMPRespFailure"/-->
        </state>

        <!--  Verify first ATP table of SubOption5 values. -->
        <state ID="SubOption5_1">
            <prelude once="true">
		<send protocol="utility" msgtype="SNMPGetTable">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevRealmTable</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <if>
                    <eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPResp</expr>
                    </eq>
                <then>
                    <verify step="4">
                        <and>
                            <neq>
                                <!-- pktcMtaDevProvUnsolicitedKeyMaxTimeout -->
                                <msg_ref type="utility" index="0 4 2">SNMPResp.varBind</msg_ref>
                                <expr>60</expr>
                            </neq>
                        <and>
                            <neq>
                                <!-- pktcMtaDevProvUnsolicitedKeyNomTimeout -->
                                <msg_ref type="utility" index="0 5 2">SNMPResp.varBind</msg_ref>
                                <expr>20</expr>
                            </neq>
                            <neq>
                                <!-- pktcMtaDevProvUnsolicitedKeyMaxRetries -->
                                <msg_ref type="utility" index="0 6 2">SNMPResp.varBind</msg_ref>
                                <expr>5</expr>
                            </neq>
                        </and>
                        </and>
                    </verify>
                </then>
                </if>
            </response>
            <transition to="ConfigurePolicy2" event="SNMPResp"/>
        </state>

			   
	<state ID="ConfigurePolicy2">
		<prelude>
			<log promptUser="true" expr="Set the DUT to use a new policy, X_eUE_sub5 and depoly."/>
			<generate event="Branch1Event"/>
		</prelude>
		<transition to="Reset2" event="Branch1Event"/>
	</state>

        <!--  Second UE reset. -->
        <state ID="Reset2" timer="120000">
            <prelude once="true">
                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetNow.0,INTEGER,1][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP Address</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <if>
                    <eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPRespFailure</expr>
                    </eq>
                <then>
                    <fail/>
                </then>
                </if>
                <if>
                    <or>
                        <eq>
                            <msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
                            <expr>0</expr>
                        </eq>
                        <eq>
                            <msg_ref type="sip">REGISTER.Expires.value</msg_ref>
                            <expr>0</expr>
                        </eq>
                    </or>
                <then>
                    <send protocol="sip" msgtype="200-REGISTER"/>
                </then>
                </if>
            </response>
            <transition to="Reset2" event="SNMPResp"/>
            <transition to="Reset2" event="REGISTER"/>
            <transition to="EUEProvisions_2" event="TimerExpired"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>

	<state ID="EUEProvisions_2">
            <prelude once="true">
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
		    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
		<verify step="8">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="SubOption5_2" event="SNMPResp"/>
	    <transition to="END" event="SNMPRespFailure"/>
            <!--transition to="END" event="SNMPRespFailure"/-->
        </state>

        <!--  Verify second ATP table of SubOption5 values. -->
        <state ID="SubOption5_2">
            <prelude once="true">
                <send protocol="utility" msgtype="SNMPGetTable">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevRealmTable</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP Address</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <if>
                    <eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPResp</expr>
                    </eq>
                <then>
                    <verify step="9">
                        <and>
                            <eq>
                                <!-- pktcMtaDevProvUnsolicitedKeyMaxTimeout -->
                                <msg_ref type="utility" index="0 4 2">SNMPResp.varBind</msg_ref>
                                <expr>60</expr>
                            </eq>
				<and>
				    <eq>
					<!-- pktcMtaDevProvUnsolicitedKeyNomTimeout -->
					<msg_ref type="utility" index="0 5 2">SNMPResp.varBind</msg_ref>
					<expr>20</expr>
				    </eq>
				    <eq>
					<!-- pktcMtaDevProvUnsolicitedKeyMaxRetries -->
					<msg_ref type="utility" index="0 6 2">SNMPResp.varBind</msg_ref>
					<expr>5</expr>
				    </eq>
				</and>
                        </and>
                    </verify>
                </then>
                </if>
            </response>
		<transition to="END" event="SNMPRespFailure"/>
		<transition to="END" event="SNMPResp"/>
        </state>
    </add_to>
</pc2xml>
