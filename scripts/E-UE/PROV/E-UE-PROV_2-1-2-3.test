#//****************************************************************************
#// Filename: E-UE-PROV_2-1-2-3.test
#// Author:   Matt Forbes
#// Creation Date: 30-October-2008
#// Modified by:
#//     
#//     
#//     
#//     
#//****************************************************************************
#// Description:
#//     TC2831 TEST CASE E-UE-PROV 2.1.2.3 Verify that the MTA can recognize TLV43 
#// Vendor ID in the MTA config file as not its own
#//
#// Objective:
#//     To verify that the MTA will accept the MTA config file and ignore the
#// varbind when the MTA recognizes TLV 43 with a vendor ID not its own.
#//
#// PacketCable DUT:
#//     MTA
#//
#// Test Steps:
#//     - Initial configuration
#//     - Start sniffer
#//     - TFTP GET MTA config File
#//     - TFTP PUT and SNMP RESET
#//     - Check Provisioning state
#//     - Stop sniffer
#//     - Delete MTA config file
#// 
#// Notes: 
#//     - Requires provPrimitives.tcl & tftp_primitives.tcl.
#//     - Requires the specific config file in $BASE_CFG_FILE_PATH in Provisioning Server.
#//****************************************************************************
global SCRIPT_VERSION
set SCRIPT_VERSION { # $Id: E-UE-PROV_2-1-2-3.test 7406 2010-07-20 17:17:37Z dthakore $ }

DoStep "PRESTEP_E-UE-PROV_2-1-2-3_1" "Initial configuration" {
    LogMsg "--- Initial PROV module ---"
    Init_PROV
    # ProvCreateConfig 1074 $MTA_MAC
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 cfg-2831.bin
    PROV_DEPLOY_DHCP
} {PASS_STEP}


DoStep "PRESTEP_E-UE-PROV_2-1-2-3_2" "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP"
    StartCaptureControllerLan 
} {PASS_STEP}


DoStep "E-UE-PROV_2-1-2-3_3" "SNMP RESET" {
    SNMP_SET $oid_pktcMtaDevResetNow INTEGER 1 $MTA_IP
    actionWait "Wait for MTA to reboot" 60
} {PASS_STEP}


DoStep "E-UE-PROV_2-1-2-3_4" "pktcMtaDevProvisioningState Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_GET $oid_pktcMtaDevProvisioningState $MTA_IP 20]
    LogMsg "The Value of MTA Provisioning State is: $val"
} {
    IsEqual $val 4
}


DoStep "E-UE-PROV_2-1-2-3_5" "pktcMtaDevProvSolicitedKeyTimeout Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_GET $oid_pktcMtaDevProvSolicitedKeyTimeout $MTA_IP 20]
    LogMsg "The Value of MTA Provisioning State is: $val"
} {
    IsEqual $val 3
}


DoStep "POSTSTEP_E-UE-PROV_2-1-2-3_1" "Stop sniffer" {
    LogMsg "--- Stop sniffer ---"
    StopCaptureControllerLan
    SaveToFileControllerLan 
} {PASS_STEP}


Cleanup
