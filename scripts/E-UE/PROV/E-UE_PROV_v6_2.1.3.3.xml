<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

Change History: (Author & Date)


-->
<!-- Document type and attributes. -->
<pc2xml version="$Revision: 6076 $"
        name="E-UE_PROV_2.1.3.3"
        descrip="eUE sends SNMP traps to notified receivers when configured
                 TLV 38.8 but doesn't send SNMP-traps when filter in 38.6 is a mismatch."
        number="E-UE_PROV_2.1.3.3">


    <!-- Reset UE; start capture. -->
    <template file="./templates/EUE_Prov_B_1_1_1.xml" name="SNMPVersions"/>

    <add_to fsm="SNMPVersions">
        <transition from="StartCapture_RebootWait" to="EUEProvisioned" event="TimerExpired"/>

        <state ID="EUEProvisioned">
            <prelude>
		<stop_capture/>
		<!-- platform config file should have the correct SNMP Server2 IP, matching the addresses in config file -->
                <parse_capture name="receiver1">
                    <parser_filter protocol="snmp" ip="Platform.SNMP Server2 IP"/>
                </parse_capture>
                <generate event="SucceedEvent"/>
            </prelude>
            <transition to="EDVAProvisions" event="SucceedEvent"/>
        </state>

        <!-- E/MTA DUT reports provisioning pass code (1) to the provisioning service (SNMP Entity). -->
        <state ID="EDVAProvisions">
            <prelude once="true">
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">UE0.IP</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="PC-1.5, Step 5">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="ReceiverIP1_TRAP" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>


        <state ID="ReceiverIP1_TRAP">
            <!-- E/MTA DUT sends PktcMTADevProvisioning Status Trap reporting provisioning PASS (1)
                 to Notification Receiver at the IP1 and port 162 -->
            <prelude>
                <verify step="PC-1.5, Step 6">
                    <and>
                        <eq>
                            <capture_ref type="snmp" name="receiver1">Trap.udp.dstport.show</capture_ref>
                            <expr>162</expr>
                        </eq>
                        <eq>
			    <capture_ref type="snmp" name="receiver1">Trap.data.snmpV2_trap.variable_bindings.1-3-6-1-2-1-140-1-1-8-0.int.show</capture_ref>
                            <expr>1</expr>
                        </eq>
                    </and>
                </verify>
		<generate event="SucceedEvent"/>
            </prelude>
	    <transition to="Configure2" event="SucceedEvent"/>
        </state>
	
	<state ID="Configure2">
		<prelude>
			<log promptUser="true" expr="Set the DUT to use a new config file, v6.cfg-2840b.cfg and depoly."/>
			<generate event="Branch1Event"/>
		</prelude>
		<transition to="Reboot2" event="Branch1Event"/>
	</state>
				
	<state ID="Reboot2" timer="5000">
		<!-- First we need to power cycle the UE to conduct the test -->
		<prelude once="true" >
			<send protocol="utility" msgtype="SNMPSet">
				<mod modtype="add" hdr="array">
					<var_expr>
						<expr>varBind 1 1 3 \r\n ][ , </expr>
						<expr>DOCS-CABLE-DEVICE-MIB::docsDevResetNow.0,INTEGER,1][\r\n</expr>
					</var_expr>
				</mod>
				<mod modtype="replace" hdr="agentip">
					<msg_ref type="platform">DUT.CM IP Address</msg_ref>
				</mod>
				<!-- Always use version 2 for a CM reset -->
				<mod modtype="replace" hdr="version">
					<expr>2c</expr>
				</mod>
			</send>
		</prelude>
		<response>
			<verify step="PC-1.5, Step 7">
			    <contains>
				<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
				<expr>1</expr>
			    </contains>
			</verify>
			<if>
				<eq>
					<msg_ref type="utility">Response</msg_ref>
					<expr>SNMPRespFailure</expr>
				</eq>
				<then>
					<fail/>
				</then>
			</if>
			<if>
				<or>
					<eq>
						<msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
						<expr>0</expr>
					</eq>
					<eq>
						<msg_ref type="sip">REGISTER.Expires.value</msg_ref>
						<expr>0</expr>
					</eq>
				</or>
				<then>
					<send protocol="sip" msgtype="200-REGISTER"/>
				</then>
			</if>
		</response>
		<!-- Test cases deriving their functionality from this template
			should change the following transition to some local state -->
		<transition to="StartCapture_RebootWait2" event="SNMPResp"/>
		<transition to="StartCapture_RebootWait2" event="TimerExpired"/>
		<transition to="END" event="SNMPRespFailure"/>
		<transition to="Reboot2" event="REGISTER"/>
	</state>
					
	<state ID="StartCapture_RebootWait2" timer="120000">
		<prelude once="true" >
			<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">DUT.IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.CM IP Address</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.DHCP Server IP</msg_ref>
						</var_expr>
					</filter>
			</start_capture>
		</prelude>
		<transition to="EUEProvisioned2" event="TimerExpired"/>
	</state>
	
	<state ID="EUEProvisioned2">
		<prelude>
			<stop_capture/>
			<!-- platform config file should have the correct SNMP Server2 IP, matching the addresses in config file -->
			<parse_capture name="receiver1_2">
			    <parser_filter protocol="snmp" ip="Platform.SNMP Server2 IP"/>
			</parse_capture>
			<generate event="SucceedEvent"/>
		</prelude>
		<transition to="EDVAProvisions2" event="SucceedEvent"/>
        </state>	

        <!-- E/MTA DUT reports provisioning pass code (1) to the provisioning service (SNMP Entity). -->
        <state ID="EDVAProvisions2">
		<prelude once="true">
			<send protocol="utility" msgtype="SNMPGet">
			    <mod modtype="add" hdr="oids">
				<expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
			    </mod>
			    <mod modtype="replace" hdr="agentip">
				<msg_ref type="platform">UE0.IP</msg_ref>
			    </mod>
			</send>
		</prelude>
		<response>
			<verify step="PC-1.5, Step 8">
			    <contains>
				<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
				<expr>1</expr>
			    </contains>
			</verify>
		</response>
		<transition to="ReceiverIP1_TRAP2" event="SNMPResp"/>
		<transition to="END" event="SNMPRespFailure"/>
        </state>


        <state ID="ReceiverIP1_TRAP2">
            <prelude>
                <verify step="PC-1.5, Step 9">
                        <null>
                            <capture_ref type="snmp" name="receiver1_2">Trap.ipv6.dst.show</capture_ref>
                        </null>
                </verify>
		<generate event="SucceedEvent"/>
            </prelude>
	    <transition to="END" event="SucceedEvent"/>
        </state>
		
    </add_to>
</pc2xml>
