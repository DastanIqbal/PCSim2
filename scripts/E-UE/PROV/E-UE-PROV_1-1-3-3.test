#//****************************************************************************
#//    Filename: E-UE-PROV_1-1-3-3.test
#//    Author:   Matthew Forbes
#//    Creation Date: 28-Oct-2008
#//****************************************************************************
#// Description:
#//     TC2800 TEST CASE E-UE-PROV 1.1.3.3 Ability of eUE to Interpret DHCP Option 7
#//     Value for Syslog Server when set to 0.0.0.0
#//
#// Objective:
#//     To verify the correct eUE behavior when sub-option 7 contains 0.0.0.0
#//
#//
#// PacketCable DUT:
#//     eUE
#//
#// Test Steps:
#//     - Initial configuration
#//     - Change MTA policy in server to set option 7 to 0.0.0.0
#//     - Start sniffer
#//     - Reset DUT
#//     - Check Provisioning state
#//     - Stop sniffer
#//     - Restore configuration and policy
#//     
#//
#// Notes:
#//     - Requires provPrimitives .tcl & tftp_primitives.tcl.
#//     - Requires the specific config file in $BASE_CFG_FILE_PATH in Provisioning Server.
#//     - Requires parT.tcl parsing tool to parse data from capture file.
##########################################################################################

global SCRIPT_VERSION
set SCRIPT_VERSION { # $Id: E-UE-PROV_1-1-3-3.test 7406 2010-07-20 17:17:37Z dthakore $ }

Init_PROV

set testCaseID E-UE-PROV_1-1-3-3
set testCaseNumber TC-2800

DoStep "${testCaseID}_1-1" "$testCaseNumber ->Initial configuration" {
    LogMsg "--- Initial PROV module ---"
    Init_PROV
    # ProvCreateConfig 291 $MTA_MAC
    verify_signal "Change option 7 in policy to 0.0.0.0 (Go to Global Policy & delete option 7, add option 7 with 0.0.0.0, click add & save)"
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 Device_Level_Secure.cfg
    PROV_DEPLOY_DHCP
} { PASS_STEP }


DoStep "${testCaseID}_2-1" "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP || udp port 67 || host $CM_IP"
    StartCaptureControllerLan
} {PASS_STEP}



################ Reset CM and MTA and Verify Provisioning ################

DoStep "${testCaseID}_3-1" " Reboot CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "Hard reboot of CM and MTA has passed"
} {
    IsEqual $val 0
}
DoStep "${testCaseID}_4-1" "$testCaseNumber -> Wait for device to provision" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
    # Get the OID from the MTA and check it using our previously defined
    set val [GetProvState 1 600]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 1"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 1
}


DoStep "${testCaseID}_5-1" "Obtain value of pktcDevEventDescrReporting" {
    set val [SNMP_GET $oid_pktcDevEventDescrReporting.4000951500.4491 $MTA_IP]
} {
    IsEqual $val "C0 0 1"
}

DoStep "${testCaseID}_9-1" "Obtain value of pktcDevEvSyslogAddress" {
    set val [SNMP_GET $oid_pktcDevEvSyslogAddress $MTA_IP]
} {
    IsEqual $val "00 00 00 00"
}


DoStep "${testCaseID}" "Stop sniffer" {
    LogMsg "--- Stop sniffer ---"
    StopCaptureControllerLan
    SaveToFileControllerLan
} {PASS_STEP}

############################## INVOKE PARSING TOOL ############################

DoStep "${testCaseID}_7-1" "Analyze flow data" {
    # Initial PARSER TOOL
    Init_PART
    
    # Set up parser file
    set PARSERFILE    $ETH_DEFAULT_TXT_FILE
} { PASS_STEP }

DoStep "${testCaseID}_7-2" "Parse all data into database" {
    # Parse data
    
    set PARAMS_MTA_SRC_DHCP "{DHCP {} {} {} {} {} {} {} {}}"
    set PARAMS_MTA_DST_DHCP "{DHCP {} {} {} {} {} {} {} {}}"
    set PARAMS_MTA_SRC      "{{} {} {} {} $MTA_IP {} {} {} {}}"
    set PARAMS_MTA_DST      "{{} {} {} {} {} {} {} $MTA_IP {}}"
    set msgID_MTA           [ParseFile $PARSERFILE "$PARAMS_MTA_SRC_DHCP $PARAMS_MTA_DST_DHCP $PARAMS_MTA_SRC $PARAMS_MTA_DST"]
} {
    if { $::PART_RETURN == 0 } {
        PASS_STEP
    } else {
        FAIL_STEP "Cannot find data"
    }
}


DoStep "${testCaseID}_8-1" "DHCP OFFER: OPTION 7: IS 0.0.0.0" {
    LogMsg "Verify DHCP OFFER: OPTIONS 7: IS 0.0.0.0"
} {
    # Verify OPTION 7
    VerifyValue $msgID_MTA "INANY DHCP OFFER OPTION7" "IS" "0.0.0.0"
}


DoStep "${testCaseID}_10-1" "Verify SYSLOG Event Message" {
    LogMsg "Verify No SYSLOG"
} {
    VerifyNotValue $msgID_MTA "INANY SYSLOG SYSLOG_MSG SYSLOG_EVENT" "EXISTS" ""
}



DoStep "${testCaseID}_11-1" "$testCaseNumber ->Restore configuration" {
    LogMsg "--- Restore Configuration ---"
    verify_signal "Change option 7 in policy (Go to Global Policy & delete option 7, add option 7 with $PROV_SYSLOG_IP, click add & save)"
    PROV_DEPLOY_DHCP
} { PASS_STEP }

Cleanup