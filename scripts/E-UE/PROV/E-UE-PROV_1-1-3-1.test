################################################################################
#// Filename: E-UE-PROV_1-1-3-1.test
#// Author:   Rachapong Pornwiriyangkura
#//           Matthew Forbes
#//
#//
#// Creation Date: August 02, 2004
#// Modified by:
################################################################################
#// Description:
#//     TC614 TEST CASE PROV 5.8 Ability of MTA to reject DHCP Offer That Does Not
#//     Contain Options 12 and 15
#//
#// Objective:
#//     Test the ability of the E-MTA DUT to reject the DHCP OFFER that does not contain
#//     DHCP options 12 and 15.
#//
#// PacketCable DUT:
#//     MTA
#//
#// Test Steps:
#//     - Initial configuration
#//     - Reset DUT
#//     - Check Provisioning state
#//     - Change MTA policy in server to remove option 12 and 15 from DHCP OFFER 
#//     - Start sniffer
#//     - Reset DUT
#//     - Allow time for provisioning process, device should not complete provisioning
#//     - Stop sniffer
#//     - Invoke parsing tool and validate using Pass/Fail scripts
#//     - Restore values for options 12 and 15 
#//     - Delete MTA config file
#//
#// Notes:
#//     - Requires provPrimitives.tcl & tftp_primitives.tcl.
#//     - Requires the specific config file in $BASE_CFG_FILE_PATH in Provisioning Server.
#//     - Requires parT.tcl parsing tool to parse data from capture file.
##########################################################################################

global SCRIPT_VERSION
set SCRIPT_VERSION { # $Id: E-UE-PROV_1-1-3-1.test 7406 2010-07-20 17:17:37Z dthakore $ }

###################### INITIAL CONFIGURATION OF DUT ########################

DoStep "E-UE-PROV_1-1-3-1_1-1" "Initial configuration" {
    LogMsg "--- Initial PROV module ---"
    Init_PROV
    # ProvCreateConfig 291 $MTA_MAC
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 Device_Level_Secure.cfg
    PROV_DEPLOY_DHCP
} { PASS_STEP }


################ Reset CM and MTA and Verify Provisioning ################
 
# DoStep "E-UE-PROV_1-1-3-1_2-3" "Reset MTA" {
# set val [SNMPvN_RESET $CM_IP]
# LogMsg "Reset of CM and MTA has passed"
# } {
# IsEqual $val 0
# }
# 
# DoStep "E-UE-PROV_1-1-3-1_2-4" "pktcMTADevProvisioningState Content Verification" {
# # Wait for a minute to let CM/MTA starting to reboot
# actionWait "Wait for CM/MTA to reboot" 60
# # Get the OID from the MTA and check it using our previously defined
# set val [GetProvState 1 600]
# LogMsg "MTA Provisioning State"
# LogMsg "             - Expected : 1"
# LogMsg "             - Received : $val"
# } {
# IsEqual $val 1
# }
# 
##################### REMOVE OPTIONS 12 AND 15 IN MTA POLICY ##########################

DoStep "E-UE-PROV_1-1-3-1_3-1" "Remove options 12 and 15 from MTA policy" {
    LogMsg "--- Modify MTA Policy and Save ---"
    # verify_signal "Remove options 12 and 15 from MTA policy (delete from 'default' settings in
                    # config.org template for 12 & 15 and restart ACTS and CTPS, then MODIFY and SAVE on CTPS)"
    verify_signal "Remove options 12 and 15 from MTA policy (Go to Global Policy & delete option 15, go to device list and to modify
    device and check omit host name and save both.)"
    PROV_DEPLOY_DHCP
    LogMsg "--- Options 12 and 15 have been removed ---"
} {PASS_STEP}


DoStep "E-UE-PROV_1-1-3-1_4-1" "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP || udp port 67 || host $CM_IP"
    StartCaptureControllerLan
} {PASS_STEP}

################## RESET CM and MTA and ALLOW TIME TO PROVISION ####################

DoStep "E-UE-PROV_1-1-3-1_5-1" "Reset MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "Reset of CM and MTA has passed"
} {
    IsEqual $val 0
}

DoStep "E-UE-PROV_1-1-3-1_6-1" "Allow 90 seconds for MTA to attempt reboot" {
    # Wait for 2 minutes to let CM/MTA start to reboot
    LogMsg "MTA is attempting to reprovision, please wait"
    actionWait "Allow 90 seconds for MTA to attempt reboot" 90
} {PASS_STEP}

DoStep "E-UE-PROV_1-1-3-1_7-1" "Stop sniffer" {
    LogMsg "--- Stop sniffer ---"
    StopCaptureControllerLan
    SaveToFileControllerLan
} { PASS_STEP }

########################## INVOKE PARSING TOOL ##################################

DoStep "E-UE-PROV_1-1-3-1_9-1" "Analyze flow data" {
    # Initial PARSER TOOL
    Init_PART
    
    # Set up parser file
    set PARSERFILE    $ETH_DEFAULT_TXT_FILE
} { PASS_STEP }

DoStep "E-UE-PROV_1-1-3-1_9-2" "Parse data into database" {
    
    # Find MTA gateway IP
    set MTA_GATEWAY_IP [regsub -- {[^.]+$} $MTA_IP 1]
    
    # Parse data
    
    set PARAMS_MTA_SRC_DHCP "{DHCP {} {} {} {} {} {} {} {}}"
    set PARAMS_MTA_DST_DHCP "{DHCP {} {} {} {} {} {} {} {}}"
    set PARAMS_MTA_SRC      "{{} {} {} {} $MTA_IP {} {} {} {}}"
    set PARAMS_MTA_DST      "{{} {} {} {} {} {} {} $MTA_IP {}}"
    set msgID_MTA           [ParseFile $PARSERFILE "$PARAMS_MTA_SRC_DHCP $PARAMS_MTA_DST_DHCP $PARAMS_MTA_SRC $PARAMS_MTA_DST"]
} {
    if { $::PART_RETURN == 0 } {
        PASS_STEP
    } else {
        FAIL_STEP "Cannot find data"
    }
}

######################### VERIFY THERE IS NO DHCP REQUEST FROM the MTA  ##########################

DoStep "E-UE-PROV_1-1-3-1_9-3" "DHCP REQUEST: DOES NOT EXIST" {
    LogMsg "Verify DHCP REQUEST: DOES NOT EXIST"
} {
    # Verify DHCP REQUEST from MTA does NOT esist
    set MTA_MAC_COL [AddColMac $MTA_MAC]
    VerifyNotValue $msgID_MTA "INANY DHCP REQUEST OPTION55" "EXISTS" "" AND \
            "OPTIONCLIENTHWADDRESS" "IS" "$MTA_MAC_COL"
}

##################### RESTORE VALUE FOR SUBOPTION IN MTA ##########################

DoStep "E-UE-PROV_1-1-3-1_10-1" "Restore value for options 12 and 15 in MTA policy" {
    LogMsg "--- Modify MTA Policy and Save ---"
    verify_signal "Restore values for option 12 and 15 in MTA policy
                    (restore option-15 in the Global policy,Domain Name: opcode value=redlab.com,add & save.)"
    set HOST_NAME [lindex [regsub {\.} $MTA_NAME { }] 0]
    set HOST_NAME [string toupper $HOST_NAME]
    PROV_MODIFY_DEVICE $MTA_MAC {} {} {} $HOST_NAME
    PROV_DEPLOY_DHCP
    LogMsg "--- Options 12 and 15 have been restored ---"
} {PASS_STEP}

################################################################################
# Cleanup
################################################################################
Cleanup
return 0



