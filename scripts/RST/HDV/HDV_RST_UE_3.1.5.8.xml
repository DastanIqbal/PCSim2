<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 


-->
<pc2xml version="$Revision: 7318 $" 
	name="HDV-RST-UE 3.1.5.8" 
	descrip="Auto Recall with Early Media" 
	number="HDV-RST-UE 3.1.5.8">
	
	<fsm name="UE1">
		<models>
			<session/>
		</models>
		<NE sim_type="term" elements="UE1 PCSCF2 SCSCF1 PCSCF1" targets="UE1 *69 "/>
		
		<states initialstate="Register">
			<state ID="Register">
				<transition to="OffHook" event="Registered"/>
			</state>
			
			<state ID="OffHook">
				<prelude>
					<log promptUser="True" expr="Enable Caller ID display"/>
					<send protocol="utility" msgtype="OffHook"/>
				</prelude>
				<transition to="Setup1" event="OffHookComplete"/>
			</state>
			
			<state ID="Setup1">
				<prelude once="true">
					<send protocol="utility" msgtype="DialDigits">
						<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
					</then>
				</if>
				<if>
					<and>
						<eq>
							<msg_ref type="extensions">precondition</msg_ref>
							<expr>require</expr>
						</eq>
						<or>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Require</msg_ref>
								<expr>precondition</expr>
							</contains>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Supported</msg_ref>
								<expr>precondition</expr>
							</contains>
						</or>
					</and>
					<then>
						<!--Sending 183-Invite with answer-->
						<sleep time="200"/>
						<send protocol="sip" msgtype="183-Invite"/>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>Invite</expr>
						</eq>
						<then>
							<!--Sending 180-Invite with SS not supporting precondition.-->
							<sleep time="200"/>
							<send protocol="sip" msgtype="180-Invite"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Setup1" event="DialDigitsComplete"/>
			<transition to="Alerting1" event="INVITE"/>
		</state>
			
		<state ID="Alerting1">
			<response>
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PRACK</expr>
						</eq>
						<contains>
							<msg_ref type="sip" msg_instance="last" hdr_instance="any">18x-Invite.Require</msg_ref>
							<expr>100rel</expr>
						</contains>
					</and>
					<then>
						<!--Reliability required for test sending 200-Prack message to peer.-->
						<send protocol="sip" msgtype="200-PRACK"/>
					</then>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required or supported sending 200-Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
				<if>
					<and>
						<contains>
							<msg_ref type="sip" msg_instance="last">18x-Invite.Status-Line.status-code</msg_ref>
							<expr>183</expr>
						</contains>
						<eq>
							<msg_ref type="sdp">Request.qos-curr-remote.direction</msg_ref>
							<msg_ref type="sdp">Request.qos-des-remote.direction</msg_ref>
						</eq>
					</and>
					<then>
						<!--Sending 180 for required preconditions.-->
						<send protocol="sip" msgtype="180-Invite"/>
					</then>
				</if>
			</response>
			<transition to="Alerting1" event="DialDigitsComplete"/>
			<transition to="Alerting1" event="PRACK"/>
			<transition to="Alerting1" event="UPDATE"/>
			<transition to="Answer1" event="ALERTING_UAS"/>
		</state>
			
		<state ID="Answer1" timer="15000">
			<response>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>TimerExpired</expr>
					</eq>
					<then>
						<!--Sending 200-Invite-->
						<send protocol="sip" msgtype="200-INVITE"/>
					</then>
				</if>
				<!-- Now test for an UPDATE message -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required or supported sending 200-Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
			</response>
			<transition to="Answer1" event="UPDATE"/>
			<transition to="Answer1" event="TimerExpired"/>
			<transition to="Connected1" event="ACK"/>
		</state>
			
		<state ID="Connected1" timer="15000">
			<transition to="Releasing1" event="TimerExpired"/>
		</state>
		<state ID="Releasing1">
			<prelude>
				<!--Sending BYE to peer to terminate call.-->
				<send protocol="sip" msgtype="BYE"/>
			</prelude>
			<transition to="Setup2" event="200-BYE"/>
		</state>
		<state ID="Setup2">
			<prelude once="true">
				<!--send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<expr>*69</expr>
					</mod>
				</send-->
				<sleep time="1000"/>
				<send protocol="sip" msgtype="INVITE">
					<mod modtype="replace" hdr="Request-Line" param="Request-URI">
					<var_expr>
						<expr>sip:*69@</expr> 
						<msg_ref type="platform">UE1.domain</msg_ref> 
						<expr>;user=dialstring</expr> 
					 </var_expr>
					</mod>
				    </send>
			</prelude>
			
				<response>
					<verify step="5" requirements="REQ23395">
					<if>
						<eq>
							<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
							<expr>180</expr>
						</eq>
						<then>
						<log promptUser="True" expr="Verify the PP plays local ring back tone"/>
						<transition to="EndSession1" event="180-Invite"/>
						</then>
					</if>
					</verify>
				</response>
					
			<!--transition to="Setup2" event="DialDigitsComplete"/-->
			<transition to="EndSession1" event="180-Invite"/>
		</state>
		
		<state ID="EndSession1">
			<prelude>
				<!--Sending BYE to peer to terminate call.-->
				<send protocol="sip" msgtype="CANCEL"/>
			</prelude>
			<transition to="EndCall1" event="200-CANCEL"/>
		</state>
		<state ID="EndCall1">
			<response>
					<if>
						<eq>
							<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
							<expr>487</expr>
						</eq>
						<then>
						<send protocol="sip" msgtype="ACK"/>
						</then>
					</if>	
				</response>
			<transition to="Setup3" event="487-INVITE"/>
		</state>
		<state ID="Setup3">
			<prelude once="true">
				<!--send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<expr>*69</expr>
					</mod>
				</send-->
				<sleep time="1000"/>				
				<send protocol="sip" msgtype="INVITE">
					<mod modtype="replace" hdr="Request-Line" param="Request-URI">
					<var_expr>
						<expr>sip:*69@</expr> 
						<msg_ref type="platform">UE1.domain</msg_ref> 
						<expr>;user=dialstring</expr> 
					 </var_expr>
					</mod>
				    </send>
			</prelude>
			
				<response>
					<verify step="8" requirements="REQ23396 REQ23398">
					<if>
						<eq>
							<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
							<expr>180</expr>
						</eq>
						<then>
						<log promptUser="True" expr="Verify the PP plays the media from the network "/>
						<transition to="EndSession2" event="180-Invite"/>
						</then>
					</if>
					</verify>
				</response>
					
			<transition to="Setup3" event="DialDigitsComplete"/>
			<transition to="EndSession2" event="180-Invite"/>
		</state>
		
		<state ID="EndSession2">
			<prelude>
				<!--Sending BYE to peer to terminate call.-->
				<send protocol="sip" msgtype="CANCEL"/>
			</prelude>
			<transition to="EndCall2" event="200-CANCEL"/>
		</state>
		<state ID="EndCall2">
			<response>
					<if>
						<eq>
							<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
							<expr>487</expr>
						</eq>
						<then>
						<send protocol="sip" msgtype="ACK"/>
						</then>
					</if>	
				</response>
			<transition to="END" event="487-INVITE"/>
		</state>
			
		</states>
	</fsm>
</pc2xml>
