<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)



-->

<pc2xml version="$Revision: 7768 $" 
		name="E-UE_Data_1.2.4.2-07" 
		descrip="pktcDevEvThrottleInterval Content Verification"
		number="E-UE_Data_1.2.4.2-07">

	<template file="./templates/EUE_Prov_B_1_1_1.xml" name="AddressType"/>

	<add_to fsm="AddressType">
		
		<!--transition from="IP4 Provision" to="VerifyPktcDevEvThrottleInterval" event="SNMPResp" />
		<transition from="IP6 Provision" to="VerifyPktcDevEvThrottleInterval" event="SNMPResp" /-->
		<transition from="StartCapture_RebootWait" to="EUEProvision" event="TimerExpired"/>		

        <state ID="EUEProvision" timer="10000">
            <prelude once="true">				
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="5">
                    <eq>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </eq>
                </verify>
            </response>
            <transition to="VerifyAddressType" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>
		
		<state ID="VerifyAddressType" timer="10000">
			<prelude once="true" >
			 	<send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-EVENT-MIB::pktcDevEvThrottleInterval.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
			</prelude>
			<response>
				<if>
                    <neq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPResp</expr>
                    </neq>
                <then>
                	<fail />
                </then>
                <else>
	                <verify step="6">
	                    <eq>
	                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
	                        <expr>1</expr>
	                    </eq>
	                </verify>
                </else>
            	</if>
            </response>
            <transition to="SetAddressType" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
		</state>
		
		
		<state ID="SetAddressType" timer="10000">
			<prelude once="true">
				<!-- Set pktcDevEvThrottleInterval to ipv6(2)  -->
                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>PKTC-EVENT-MIB::pktcDevEvThrottleInterval.0,Unsigned32,2][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
			<response>
				<if>
                    <neq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPResp</expr>
                    </neq>
                <then>
                	<fail />
                </then>
                <else>
	                <verify step="7">
	                    <eq>
	                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
	                        <expr>2</expr>
	                    </eq>
	                </verify>
                </else>
            	</if>
            </response>
            <transition to="VerifyAddressType2" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
		</state>
		
		<state ID="VerifyAddressType2" timer="10000">
			<prelude once="true" >
			 	<send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-EVENT-MIB::pktcDevEvThrottleInterval.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
			</prelude>
			<response>
				<if>
                    <neq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPResp</expr>
                    </neq>
                <then>
                	<fail />
                </then>
                <else>
	                <verify step="8">
	                    <eq>
	                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
	                        <expr>2</expr>
	                    </eq>
	                </verify>
                </else>
            	</if>
            </response>
            <postlude>
            	<stop_capture />
            </postlude>
            <transition to="END" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
		</state>
	
	</add_to>
</pc2xml>
