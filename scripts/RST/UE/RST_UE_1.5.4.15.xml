<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)





-->
<pc2xml version="$Revision: 8188 $" 
	name="RST-UE 1.5.4.15" 
	descrip="Ringback in Consultative Call Transfer - Transferor" 
	number="RST-UE 1.5.4.15" inspector="disable">
	
	<template file="./templates/Proxy_Transferor.xml" name="Core"/>
	
	<remove_from fsm="Core">
		<state ID="DUTOffHook"/>
		<state ID="UE1Setup"/>
		<state ID="UE1Alerting"/>
		<state ID="UE2Alerting"/>
		<state ID="UE2Release"/>
		<state ID="UE2Connected"/>
		<state ID="UE1OnHook"/>
		<state ID="TransferConnected"/>
	</remove_from>
	
	<add_to fsm="Core">
		<states initialstate="2CMTSReminder"/>
		
		<state ID="2CMTSReminder">
			<prelude>
				<log promptUser="true" 
					expr="Reminder: You will need to have the DUT on one CMTS and the other UEs on\na different CMTS in order to capture the RTP traffic between them."/>
				<generate event="Branch1Event"/>
				<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">UE0.IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">Platform.STUN IP Address</msg_ref>
						</var_expr>
					</filter>
				</start_capture>
			</prelude>
			<transition to="Register" event="Branch1Event"/>
		</state>
		
		<state ID="DUTOffHook">
			<prelude>
				<send protocol="utility" msgtype="OffHook">
					<mod modtype="replace" hdr="voiceport">
						<msg_ref type="platform">Platform.voiceport0</msg_ref>
					</mod>
				</send>
			</prelude>
			<transition to="UE1Setup" event="OffHookComplete"/>
		</state>
		
		<state ID="UE1Setup">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
					<mod modtype="replace" hdr="voiceport">
						<msg_ref type="platform">Platform.voiceport0</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="UE1Setup" event="DialDigitsComplete"/>
			<transition to="UE1Setup" event="INVITE"/>
			<transition to="UE1Alerting" event="CANCEL"/>
			<transition to="UE1Alerting" event="xxx-INVITE"/>
			<transition to="UE1Setup" event="OffHookComplete"/>
		</state>
			
		<state ID="UE1Alerting" timer="12000">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>TimerExpired</expr>
					</eq>
					<then>
						<send protocol="utility" msgtype="OffHook">
							<mod modtype="replace" hdr="voiceport">
								<msg_ref type="platform">Platform.voiceport1</msg_ref>
							</mod>
						</send>
					</then>
				</if>
			</response>
			<transition to="UE1Alerting" event="OPTIONS"/>
			<transition to="UE1Alerting" event="200-OPTIONS"/>
			<transition to="UE1Alerting" event="PRACK"/>
			<transition to="UE1Alerting" event="200-PRACK"/>
			<transition to="UE1Alerting" event="UPDATE"/>
			<transition to="UE1Alerting" event="200-UPDATE"/>
			<transition to="UE1Alerting" event="xxx-INVITE"/>
			<transition to="UE1Alerting" event="OffHookComplete"/>
			<transition to="UE1Connected" event="ACK"/>
		</state>
			
		<transition from="UE2Setup" to="UE2Setup" event="100-INVITE"/>
		
		<state ID="UE2Alerting" timer="3000">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="UE2Alerting" event="CANCEL"/>
			<transition to="UE2Alerting" event="OPTIONS"/>
			<transition to="UE2Alerting" event="200-OPTIONS"/>
			<transition to="UE2Alerting" event="PRACK"/>
			<transition to="UE2Alerting" event="200-PRACK"/>
			<transition to="UE2Alerting" event="UPDATE"/>
			<transition to="UE2Alerting" event="200-UPDATE"/>
			<transition to="UE2Alerting" event="xxx-INVITE"/>
			<transition to="UE2Alerting" event="xxx-CANCEL"/>
			<transition to="StreamMediaToUE1" event="TimerExpired"/>
		</state>
		
		<state ID="StreamMediaToUE1">
			<prelude once="true">
				<send protocol="utility" msgtype="HookFlash"/>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Response</msg_ref>
						<expr>200-INVITE</expr>
					</eq>
					<then>
						<verify step="4" requirements="REQ19791">
							<eq>
								<msg_ref type="sip">Response</msg_ref>
								<expr>200-INVITE</expr>
							</eq>
						</verify>
						<var name="cseq">
							<msg_ref type="sip">200-INVITE.CSeq.value</msg_ref>
						</var>
					</then>
				</if>
			</response>
			<transition to="StreamMediaToUE1" event="HookFlashComplete"/>
			<transition to="StreamMediaToUE1" event="REINVITE"/>
			<transition to="StreamMediaToUE1" event="xxx-INVITE"/>
			<transition to="UE2Connected" event="ACK"/>
		</state>
		
		<state ID="UE2Connected">
			<prelude once="true">
				<sleep time="5000"/>
				<!-- Hang up on DUT.-->
				<send protocol="utility" msgtype="OnHook"/>
			</prelude>
			<response>
				<!-- There is a chance that the INVITE from the transferree to the
					transferred-to device may arrive before the 200-NOTIFY, so
					check for this first and pass it to UE2 if it arrives. -->
				<if>
					<and>
						<or>
							<eq>
								<msg_ref type="sip">INVITE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">ACK.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
						</or>
						<or>
							<eq>
								<msg_ref type="sip">ACK.Request-Line.username</msg_ref>
								<msg_ref type="platform">UE2.username</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">INVITE.Request-Line.username</msg_ref>
								<msg_ref type="platform">UE2.username</msg_ref>
							</eq>
						</or>
					</and>
					<then>
						<proxy target="UE2"/>
					</then>
					<elseif>
						<and>
							<gt>
								<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
								<expr>100</expr>
							</gt>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
						</and>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE0"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
				
			</response>
			<transition to="UE2Connected" event="xxx-INVITE"/>
			<transition to="UE2Connected" event="INVITE"/>
			<transition to="UE2Connected" event="ACK"/>
			<transition to="UE2Connected" event="REFER"/>
			<transition to="UE2Connected" event="20x-REFER"/>
			<transition to="UE2Connected" event="NOTIFY"/>
			<transition to="UE2Release" event="200-NOTIFY"/>
			<transition to="UE2Connected" event="OnHookComplete"/>
		</state>
		
		<state ID="UE2Release" timer="5000">
			<prelude once="true">
				<var name="ack">
					<expr>false</expr>
				</var>
				<var name="ue2release">
					<expr>false</expr>
				</var>
				<var name="ue1release">
					<expr>false</expr>
				</var>
				<var name="ue2Answer">
					<expr>false</expr>
				</var>
				
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="sip">CANCEL.SourceAddress.IP</msg_ref>
						<msg_ref type="platform">UE0.IP</msg_ref>
					</eq>
					<then>
						<proxy target="UE2"/>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">487-INVITE.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<then>
							<proxy target="UE0"/>
						</then>
					</elseif>
					<elseif>
							<eq>
								<msg_ref type="sip">200-INVITE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
							
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="sip">ACK.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<then>
							<proxy target="UE2"/>
							<!-- log promptUser="true" verify="true" 
								step="6" yesExpected="true" 
								expr="Verify voice path between UE1 and UE2"/-->
							<assign name="ue2Answer">
								<expr>true</expr>
							</assign>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="sip">ACK.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE0.IP</msg_ref>
						</eq>
						<then>
							<proxy target="UE2"/>
							<!-- send protocol="utility" msgtype="OffHook">
								<mod modtype="replace" hdr="voiceport">
									<msg_ref type="platform">Platform.voiceport2</msg_ref>
								</mod>
							</send-->
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">200-CANCEL.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">200-CANCEL.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE0"/>
						</then>
					</elseif>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">BYE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">BYE.Request-Line.username</msg_ref>
								<msg_ref type="platform">UE1.username</msg_ref>
							</eq>
						</and>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">BYE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">BYE.Request-Line.username</msg_ref>
								<msg_ref type="platform">UE2.username</msg_ref>
							</eq>
						</and>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">BYE.Request-Line.username</msg_ref>
								<msg_ref type="platform">UE0.username</msg_ref>
							</eq>
							<or>
								<eq>
									<msg_ref type="sip">BYE.SourceAddress.IP</msg_ref>
									<msg_ref type="platform">UE1.IP</msg_ref>
								</eq>
								<eq>
									<msg_ref type="sip">BYE.SourceAddress.IP</msg_ref>
									<msg_ref type="platform">UE2.IP</msg_ref>
								</eq>
							</or>
						</and>
						<then>
							<proxy target="UE0"/>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="sip">200-BYE.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<then>
							<proxy target="UE0"/>
							<assign name="ue1release">
								<expr>true</expr>
							</assign>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="sip">200-BYE.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<then>
							<proxy target="UE0"/>
						</then>
					</elseif>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">200-BYE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<contains>
								<msg_ref type="sip" msg_instance="last">BYE.From.addr-spec</msg_ref>
								<msg_ref type="platform">UE2.username</msg_ref>
							</contains>
						</and>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">200-BYE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<contains>
								<msg_ref type="sip" msg_instance="last">BYE.From.addr-spec</msg_ref>
								<msg_ref type="platform">UE1.username</msg_ref>
							</contains>
						</and>
						<then>
							<proxy target="UE1"/>
							<assign name="ue1release">
								<expr>true</expr>
							</assign>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>NOTIFY</expr>
						</eq>
						<then>
							<proxy target="UE0"/>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="sip">Response.CSeq.method</msg_ref>
							<expr>NOTIFY</expr>
						</eq>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="event"/>
							<expr>TimerExpired</expr>
						</eq>
						<then>
							<send protocol="utility" msgtype="OffHook">
								<mod modtype="replace" hdr="voiceport">
									<msg_ref type="platform">Platform.voiceport2</msg_ref>
								</mod>
							</send>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>ACK</expr>
					</eq>
					<then>
						<assign name="ack">
							<expr>true</expr>
						</assign>
					</then>
				</if>
				<if>
					<and>
						<eq>
							<var_ref name="ack"/>
							<expr>true</expr>
						</eq>
						<and>
							<eq>
								<var_ref name="ue1release"/>
								<expr>true</expr>
							</eq>
							<eq>
								<var_ref name="ue2Answer"/>
								<expr>true</expr>
							</eq>
						</and>
					</and>
					<then>
						<generate event="Branch1Event"/>
					</then>
				</if>
			</response>
			<transition to="UE2Release" event="OPTIONS"/>
			<transition to="UE2Release" event="200-OPTIONS"/>
			<transition to="UE2Release" event="PRACK"/>
			<transition to="UE2Release" event="200-PRACK"/>
			<transition to="UE2Release" event="UPDATE"/>
			<transition to="UE2Release" event="OffHookComplete"/>
			<transition to="UE2Release" event="200-UPDATE"/>
			<transition to="UE2Release" event="xxx-INVITE"/>
			<transition to="UE2Release" event="INVITE"/>
			<transition to="UE2Release" event="BYE"/>
			<transition to="UE2Release" event="200-BYE"/>
			<transition to="UE2Release" event="NOTIFY"/>
			<transition to="UE2Release" event="200-NOTIFY"/>
			<transition to="UE2Release" event="ACK"/>
			<transition to="UE2Release" event="OffHookComplete"/>
			<transition to="TransferConnected" event="Branch1Event"/>
			<transition to="UE2Release" event="CANCEL"/>
			<transition to="UE2Release" event="200-CANCEL"/>
		</state>
		
		<state ID="TransferConnected" timer="20000">
			<response>
				<!-- There is a chance that the last NOTIFY from the transferree to the
						transferor device may arrive after the ACK, so
						check for this first and pass it to UE1 if it arrives. -->
				<if>
					<eq>
						<msg_ref type="sip">NOTIFY.SourceAddress.IP</msg_ref>
						<msg_ref type="platform">UE1.IP</msg_ref>
					</eq>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">Response.CSeq.method</msg_ref>
							<expr>NOTIFY</expr>
						</eq>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="event"/>
							<expr>TimerExpired</expr>
						</eq>
						<then>
							<!-- Hang up on DUT.-->
							<send protocol="utility" msgtype="OnHook">
								<mod modtype="replace" hdr="voiceport">
									<msg_ref type="platform">Platform.voiceport2</msg_ref>
								</mod>
							</send>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="TransferConnected" event="NOTIFY"/>
			<transition to="TransferConnected" event="xxx-NOTIFY"/>
			<transition to="TransferConnected" event="OnHookComplete"/>
			<transition to="TransferConnected" event="BYE"/>
			<transition to="UE1OnHook" event="200-BYE"/>
		</state>
		
		<state ID="UE1OnHook">
			<prelude>
				<stop_capture/>
				<send protocol="utility" msgtype="OnHook">
					<mod modtype="replace" hdr="voiceport">
						<msg_ref type="platform">Platform.voiceport1</msg_ref>
					</mod>
				</send>
			</prelude>
			<transition to="END" event="OnHookComplete"/>
		</state>
	</add_to>
</pc2xml>
