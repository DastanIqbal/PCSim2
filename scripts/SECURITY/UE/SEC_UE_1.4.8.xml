<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)





-->
<pc2xml version="$Revision: 8188 $" 
	name="SECURITY 1.4.8" 
	descrip="UE Correctly responds to “stale�? parameter over exiting TLS connection" 
	number="SECURITY 1.4.8">
	
	<template file="./templates/UERegAndSubTemp.xml" name="Registrar"/>
	
	<remove_from fsm="Registrar">
		<state ID="Registered"/>
		<state ID="PendingRegistration"/>
	</remove_from>
	<add_to fsm="Registrar">
		<state ID="PendingRegistration">
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="401-REGISTER">
							<mod modtype="replace" hdr="Security-Server">
								<expr> tls; q=0.1</expr>
							</mod>
							<mod modtype="add" hdr="Require">
								<expr>sec-agree</expr>
							</mod>
							<mod modtype="add" hdr="Proxy-Require">
								<expr>sec-agree</expr>
							</mod>
						</send>
					</then>
				</if>
			</response>
			<transition to="Authorization" event="REGISTER"/>
		</state>
		
		<state ID="Registered">
			<prelude>
				<send protocol="sip" msgtype="200-Register"/>
			</prelude>
			<response>
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>SUBSCRIBE</expr>
						</eq>
						<contains>
							<msg_ref type="sip">SUBSCRIBE.Event</msg_ref>
							<expr>reg</expr>
						</contains>
					</and>
					<then>
						<send protocol="sip" msgtype="200-SUBSCRIBE"/>
						<send protocol="sip" msgtype="NOTIFY">
							<mod modtype="replace" hdr="reginfo" param="state" body="reginfo+xml">
								<expr>full</expr>
							</mod>
							<mod modtype="replace" hdr="registration" param="state" body="reginfo+xml">
								<expr>active</expr>
							</mod>
							<mod modtype="replace" hdr="contact" param="state" body="reginfo+xml">
								<expr>active</expr>
							</mod>
							<mod modtype="replace" hdr="contact" param="event" body="reginfo+xml">
								<expr>shortened</expr>
							</mod>
							<mod modtype="replace" hdr="contact" param="uri" body="reginfo+xml">
								<var_expr>
									<expr>sip:[</expr>
									<msg_ref type="platform">DUT.IP</msg_ref>
									<expr>]</expr>
								</var_expr>
							</mod>
							<mod modtype="replace" hdr="contact" param="expires" body="reginfo+xml">
								<expr>60</expr>
							</mod>
						</send>
					</then>
				</if>
			</response>
			<transition to="Wait200Notify" event="Subscribe"/>
		</state>
		
		<state ID="Wait200Notify">
			<transition to="PendingRegistration1" event="200-NOTIFY"/>
		</state>
		
		<state ID="PendingRegistration1">
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<then>
						<verify step="7" requirements="REQ20295, REQ20294">
							<eq>
								<msg_ref type="sip">Request</msg_ref>
								<expr>REGISTER</expr>
							</eq>
						</verify>
						<send protocol="sip" msgtype="401-REGISTER"/>
					</then>
				</if>
			</response>
			<transition to="Re-Authorization" event="REGISTER"/>
		</state>
		
		<state ID="Re-Authorization" timer="60000">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="event"/>
							<expr>AuthenticateSucceed</expr>
						</eq>
						<eq>
							<msg_ref type="event"/>
							<expr>AuthenticateFailed</expr>
						</eq>
					</or>
					<then>
						<!-- this is to prevent the AuthenticateFailed from being forwarded
									to the next state on the AuthenticateSucceed -->
					</then>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">Request</msg_ref>
								<expr>REGISTER</expr>
							</eq>
							<and>
								<contains>
									<msg_ref type="sip">REGISTER</msg_ref>
									<expr>Authorization</expr>
								</contains>
								<digest/>
							</and>
						</and>
						<then>
							<generate event="AuthenticateSucceed"/>
							<verify step="9" requirements="REQ20295, REQ20294">
								<neq>
									<msg_ref type="sip">REGISTER.Authorization.response</msg_ref>
									<msg_ref type="sip" msg_instance="prev">REGISTER.Authorization.response</msg_ref>
								</neq>
							</verify>
						</then>
						<else>
							<generate event="AuthenticateFailed"/>
							<send protocol="sip" msgtype="503-Register"/>
						</else>
					</elseif>
				</if>
			</response>
			<transition to="Re-Registered" event="AuthenticateSucceed"/>
			<transition to="END" event="AuthenticateFailed"/>
			<transition to="END" event="TimerExpired"/>
			<transition to="Authorization" event="REGISTER"/>
		</state>
		
		<state ID="Re-Registered">
			<prelude>
				<send protocol="sip" msgtype="200-Register"/>
			</prelude>
			<transition to="END" event="Registered"/>
		</state>
	</add_to>
</pc2xml>
