################################################################################
#// Filename: E-UE-DATA_1-2-5-4.test (PACT)
#// Author:   Matthew Forbes
#//
#//
#//
#// Creation Date: March 4, 2009
#// Modified by:
################################################################################
#// Description:
#//     TC2759 TEST CASE E-UE-DATA 1.2.5.4 - Ability of eUE to Implement the VACM
#//     Requirements
#//
#// Objective:
#//     This test verifies the eUE ability to properly implement the VACM requirements as 
#//     per RFC 3415 and as applicable to SNMPv3 for the secure provisioning flow.
#//
#//
#// PacketCable DUT:
#//     EDVA
#//
#// Test Steps:
#//     - Initial configuration
#//     - Start sniffer
#//     - Reset DUT
#//     - Check Provisioning state
#//     - Invoke SNMPv3 API and query MIB objects and validate values
#//     - Stop sniffer
#//
#//
#//
#// Notes:
#//     - Requires provPrimitives.tcl
#//
#//
################################################################################
global SCRIPT_VERSION
set SCRIPT_VERSION { # $Id: E-UE-DATA_1-2-5-4.test 7406 2010-07-20 17:17:37Z dthakore $ }


set test_case E-UE-DATA_1-2-5-4-
set step_num 1

Init_PROV
Init_PART
set mtamac [ string toupper [AddColMac $MTA_MAC]]

DoStep ${test_case}${step_num} "Initial Configuration" {
    LogMsg "--- Init PROV module ---"
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 Device_Level_Secure.cfg
    PROV_SNMP_PRIV_PROTO DES
    PROV_DEPLOY_DHCP
} {PASS_STEP}

DoStep ${test_case}[incr step_num]_1 "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP || udp port 67"
    StartCaptureControllerLan
} {PASS_STEP}

DoStep ${test_case}${step_num}_2 "Reset CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "--- Reset of CM and MTA has passed ---"
} {
    IsEqual $val 0
}

DoStep ${test_case}${step_num}_3 "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
    # Get the OID from the MTA and check it using our previously defined
    set val [GetProvState 1 600]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 1"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 1
}

DoStep ${test_case}[incr step_num]_1 "vacmSecurityToGroupTable Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $oid_vacmSecurityToGroupTable $MTA_IP 1]
    LogMsg "The Value vacmSecurityToGroupTable is: $val"
} {
    verify_signal " Monitor TclSim console: vacmSecurityToGroupTable should contain the following values
    vacmSecurityModel = USM(3)(in index)
    vacmSecurityName = eUE-Prov-$mtamac (in index)
    vacmGroupName = PacketCable Full Access
    vacmSecurityToGroupStorageType = 2
    volatilevacmSecurityToGroupStatus = active (1)"
}

DoStep ${test_case}[incr step_num]_1 "vacmAccessTable Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $oid_vacmAccessTable $MTA_IP 1]
    LogMsg "The Value vacmAccessTable is: $val"
} {
    verify_signal "Monitor TclSim console:  vacmAccessTable should contain the following values
    vacmGroupName = PacketCableFullAccess (in index)
    vacmAccessContextPrefix = \"\" (in index)
    vacmAccessSecurityModel = USM(3) (in index)
    vacmAccessSecurityLevel = authPriv (in index)
    vacmAccessContextMatch = exact(1)
    vacmAccessReadViewName = ReadOnlyView
    vacmAccessWriteViewName = FullAccessView
    vacmAccessNotifyViewName = NotifyView
    vacmAccessStorageType = volatile(2)
    vacmAccessStatus = active(1)
    "   
}

DoStep ${test_case}[incr step_num] "Stop Sniffer" {
    LogMsg "--- Stop Sniffer ---"
    StopCaptureControllerLan
    SaveToFileControllerLan
} { PASS_STEP }


DoStep ${test_case}[incr step_num] "Configure Provisioning Server" {
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 Device_Level_Secure.cfg
    PROV_SNMP_PRIV_PROTO NULL
    PROV_DEPLOY_DHCP
} { PASS_STEP }


############### Reset CM and MTA and Verify Provisioning ################

DoStep ${test_case}[incr step_num] "Reset CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "--- Reset of CM and MTA has passed ---"
} {
    IsEqual $val 0
}

DoStep ${test_case}[incr step_num] "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
    # Get the OID from the MTA and check it using our previously defined
    set val [GetProvState 1 600]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 1"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 1
}


################################################################################
# Cleanup
################################################################################
set CONTINUE_PAST_STEP_ERROR 0
Cleanup















