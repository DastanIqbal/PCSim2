<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	PCPCII-135 : UPdate the script to accommodate a de-register message during the reboot. (ghassler 06/24/2009)




-->

<!-- First are the document type and the attributes for our document -->
<pc2xml version="$Revision: 8188 $" 
	name="NAT_UE_1.1.2.6" 
	descrip="SIP OUTBOUND Data Persistence over Reset" 
	number="NAT_UE_1.1.2.6">
 
  <!-- Next we define the each of state machines -->
  <fsm name="SCSCF1">
    <models>
      <registrar />
    </models>
    <!-- Next we define all of the network elements-->
    <NE sim_type="term" elements="SCSCF1 PCSCF1" targets="SCSCF1 PCSCF1" />
    <!-- All of the states for the test. References to "Step x" from the
     Default Message Flow - UE Registration (DUT) Sequence Diagram -->
    <states initialstate="Reboot">
		<state ID="Reboot" timer="5000">
			<!-- First we need to power cycle the UE to conduct the test -->
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPSet">
					<mod modtype="add" hdr="array">
						<var_expr>
							<expr>varBind 1 1 3 \r\n ][ , </expr>
							<expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetNow.0,INTEGER,1][\r\n</expr>
						</var_expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>SNMPRespFailure</expr>
					</eq>
					<then>
						<fail />
					</then>
				</if>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
							<expr>0</expr>
						</eq>
						<eq>
							<msg_ref type="sip">REGISTER.Expires.value</msg_ref>
							<expr>0</expr>
						</eq>
					</or>
					<then>
						<send protocol="sip" msgtype="200-REGISTER"/>
					</then>
				</if>
			</response>
			<!-- Transitions for PendingRegistration state -->
			<transition to="Reboot" event="SNMPResp" />
			<transition to="PendingRegistration" event="TimerExpired" />
			<transition to="END" event="SNMPRespFailure" />
			<transition to="Reboot" event="REGISTER" />
		</state>
		<!-- PENDINGREGISTRATION State -->
		<state ID="PendingRegistration">
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<then>
						<send protocol="utility" msgtype="SNMPSet">
							<mod modtype="add" hdr="array">
								<var_expr>
									<expr>varBind 1 1 3 \r\n ][ , </expr>
									<expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetNow.0,INTEGER,1][\r\n</expr>
								</var_expr>
							</mod>
						</send>
					</then>
				</if>
			</response>
			<!-- Transitions for PendingRegistration state -->
			<transition to="PendingRegistration2" event="SNMPResp" />
			<transition to="END" event="SNMPRespFailure" />
			<transition to="PendingRegistration" event="REGISTER" />
		</state>

		<state ID="PendingRegistration2">
			<response>
				<verify step="3" requirements="RFC4289, RFC4296">
					<eq>
						<msg_ref type="sip">REGISTER.Contact.sip-instance</msg_ref>
						<msg_ref type="sip" msg_instance="first">REGISTER.Contact.sip-instance</msg_ref>
					</eq>
				</verify>
				<verify step="3" requirements="RFC4289, RFC4296">
					<eq>
						<msg_ref type="sip">REGISTER.Contact.reg-id</msg_ref>
						<msg_ref type="sip" msg_instance="first">REGISTER.Contact.reg-id</msg_ref>
					</eq>
				</verify>
			</response>
			<!-- Transitions for Re-PendingRegistration state -->
			<transition to="END" event="REGISTER" />
		</state>
    </states>
  </fsm>
</pc2xml>
