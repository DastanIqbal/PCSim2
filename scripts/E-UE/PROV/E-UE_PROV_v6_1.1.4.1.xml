<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)



-->
<!-- First are the document type and the attributes for our document -->
<pc2xml version="$Revision: 7768 $" 
	name="EUE Prov 1.1.4.1" 
	descrip="Ability of eUE to Use the Proper Order of Priority When Multiple Valid DHCPv6 Advertises are Present" 
	number="EUE Prov 1.1.4.1">

	<!-- Next we define the each of state machines -->
	<template file="./templates/EUE_Prov_B_1_1_1.xml" name="RebootCM"/>
	
	<add_to fsm="RebootCM">
		<transition from="StartCapture_RebootWait" to="VerifyBootState" event="TimerExpired"/>

		<state ID="VerifyBootState">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP</msg_ref>
					</mod>
					<mod modtype="replace" hdr="version">
					    <expr>3</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="2">
					<contains>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr>
					</contains>
				</verify>
			</response>
			<postlude>
				<stop_capture/>
				<parse_capture name="eUE_DHCPv6">
					<parser_filter protocol="dhcpv6" clientMAC="DUT.MAC Address"/>
				</parse_capture>
				<verify step="3">
					<eq>
						<capture_ref type="dhcpv6" name="eUE_DHCPv6">Request.ipv6.dst_host.show</capture_ref>
						<msg_ref type="platform">DUT.DHCP Server IP</msg_ref>
					</eq>
				</verify>
				
			</postlude>
			<transition to="ConfigureBasic2" event="SNMPResp"/>
			<transition to="END" event="SNMPRespFailure"/>
		</state>

		<state ID="ConfigureBasic2" provFile="v6.C.1.2.1_basic.bin" 
				policyFile="X_eUEv6_Basic" nextState="Reboot2"/>	

		<state ID="Reboot2" timer="5000">
			<!-- First we need to power cycle the UE to conduct the test -->
			<prelude once="true" >
				<send protocol="utility" msgtype="SNMPSet">
					<mod modtype="add" hdr="array">
						<var_expr>
							<expr>varBind 1 1 3 \r\n ][ , </expr>
							<expr>DOCS-CABLE-DEVICE-MIB::docsDevResetNow.0,INTEGER,1][\r\n</expr>
						</var_expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.CM IP Address</msg_ref>
					</mod>
					<!-- Always use version 2 for a CM reset -->
					<mod modtype="replace" hdr="version">
						<expr>2c</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>SNMPRespFailure</expr>
					</eq>
					<then>
						<fail/>
					</then>
				</if>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
							<expr>0</expr>
						</eq>
						<eq>
							<msg_ref type="sip">REGISTER.Expires.value</msg_ref>
							<expr>0</expr>
						</eq>
					</or>
					<then>
						<send protocol="sip" msgtype="200-REGISTER"/>
					</then>
				</if>
			</response>
			<!-- Test cases deriving their functionality from this template
				should change the following transition to some local state -->
			<transition to="Reboot2" event="SNMPResp"/>
			<transition to="StartCapture_RebootWait2" event="TimerExpired"/>
			<transition to="END" event="SNMPRespFailure"/>
			<transition to="Reboot2" event="REGISTER"/>
		</state>
					
		<state ID="StartCapture_RebootWait2" timer="120000">
			<prelude once="true" >
				<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">DUT.DHCP Server IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.mib1</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.mib2</msg_ref>
						</var_expr>
					</filter>
				</start_capture>
			</prelude>
			<transition to="VerifyBootState2" event="TimerExpired"/>
		</state>
			
		<state ID="VerifyBootState2">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP</msg_ref>
					</mod>
					<mod modtype="replace" hdr="version">
					    <expr>2c</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="5">
					<contains>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr>
					</contains>
				</verify>
			</response>
			<postlude>
				<stop_capture/>
				<parse_capture name="eUE_DHCPv6_2">
					<parser_filter protocol="dhcpv6" clientMAC="DUT.MAC Address"/>
				</parse_capture>
				<verify step="6">
					<eq>
						<capture_ref type="dhcpv6" name="eUE_DHCPv6_2">Request.ipv6.dst_host.show</capture_ref>
						<msg_ref type="platform">DUT.mib2</msg_ref>
					</eq>
				</verify>
				<log promptUser="true"
				expr="Change the policy at the 3rd provisioning server to X_eUEv6_Hybrid_sub3_00 and deploy"/>
			</postlude>
			<transition to="Reboot3" event="SNMPResp"/>
			<transition to="Reboot3" event="SNMPRespFailure"/>
		</state>	
			
		<state ID="Reboot3" timer="5000">
			<!-- First we need to power cycle the UE to conduct the test -->
			<prelude once="true" >
				<send protocol="utility" msgtype="SNMPSet">
					<mod modtype="add" hdr="array">
						<var_expr>
							<expr>varBind 1 1 3 \r\n ][ , </expr>
							<expr>DOCS-CABLE-DEVICE-MIB::docsDevResetNow.0,INTEGER,1][\r\n</expr>
						</var_expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.CM IP Address</msg_ref>
					</mod>
					<!-- Always use version 2 for a CM reset -->
					<mod modtype="replace" hdr="version">
						<expr>2c</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>SNMPRespFailure</expr>
					</eq>
					<then>
						<fail/>
					</then>
				</if>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
							<expr>0</expr>
						</eq>
						<eq>
							<msg_ref type="sip">REGISTER.Expires.value</msg_ref>
							<expr>0</expr>
						</eq>
					</or>
					<then>
						<send protocol="sip" msgtype="200-REGISTER"/>
					</then>
				</if>
			</response>
			<!-- Test cases deriving their functionality from this template
				should change the following transition to some local state -->
			<transition to="Reboot3" event="SNMPResp"/>
			<transition to="StartCapture_RebootWait3" event="TimerExpired"/>
			<transition to="END" event="SNMPRespFailure"/>
			<transition to="Reboot3" event="REGISTER"/>
		</state>
					
		<state ID="StartCapture_RebootWait3" timer="120000">
			<prelude once="true" >
				<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">DUT.DHCP Server IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.mib1</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.mib2</msg_ref>
						</var_expr>
					</filter>
				</start_capture>
			</prelude>
			<transition to="VerifyBootState3" event="TimerExpired"/>
		</state>
			
		<state ID="VerifyBootState3">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP</msg_ref>
					</mod>
					<mod modtype="replace" hdr="version">
					    <expr>2c</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="8">
					<contains>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr>
					</contains>
				</verify>
			</response>
			<postlude>
				<stop_capture/>
				<parse_capture name="eUE_DHCPv6_3">
					<parser_filter protocol="dhcpv6" clientMAC="DUT.MAC Address"/>
				</parse_capture>
				<verify step="9">
					<eq>
						<capture_ref type="dhcpv6" name="eUE_DHCPv6_3">Request.ipv6.dst_host.show</capture_ref>
						<msg_ref type="platform">DUT.DHCP Server IP</msg_ref>
					</eq>
				</verify>
			</postlude>
			<transition to="END" event="SNMPResp"/>
			<transition to="END" event="SNMPRespFailure"/>
		</state>				
	</add_to>
</pc2xml>
