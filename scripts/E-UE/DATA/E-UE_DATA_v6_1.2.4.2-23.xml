<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)



-->

<pc2xml version="$Revision: 7768 $" 
		name="E-UE_Data_1.2.4.2-23" 
		descrip="Functionality Verification of the MIB table pktcDevEvControl"
		number="E-UE_Data_1.2.4.2-23">

	<template file="./templates/EUE_Prov_B_1_1_1.xml" name="MIBTest"/>

	<add_to fsm="MIBTest">
		
		<!--transition from="IP4 Provision" to="VerifyPktcDevEventDescrReporting" event="SNMPResp" />
		<transition from="IP6 Provision" to="VerifyPktcDevEventDescrReporting" event="SNMPResp" /-->
		<transition from="StartCapture_RebootWait" to="EUEProvision" event="TimerExpired"/>		

        <state ID="EUEProvision" timer="30000">
            <prelude once="true">
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="5">
                    <eq>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </eq>
                </verify>
            </response>
            <transition to="checkMIBTable" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>
		
		
		<state ID="checkMIBTable" timer="30000">
			<prelude once="true" >
			 	<send protocol="utility" msgtype="SNMPGetTable">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-EVENT-MIB::pktcDevEvLogTime</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
			</prelude>
			<response>
				<var name="Time1">
					<msg_ref type="utility" index="1 0 2">SNMPResp.varBind</msg_ref>
				</var>
			</response>

            <transition to="END" event="SNMPRespFailure"/>
            <transition to="resetMIB" event="SNMPResp"/>			
		</state>
		
		<state ID="resetMIB" timer="30000">
			<prelude once="true">
				<!-- Set pktcDevEventDescrReporting to ipv6(2)  -->
                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>PKTC-EVENT-MIB::pktcDevEvControl.0,OCTET-STRING,80][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
			<response>
				<verify step="8">
					<contains>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>80</expr>
					</contains>
				</verify>
            </response>
			<postlude>
				<stop_capture/>
			</postlude>
            <transition to="VerifyMIB" event="SNMPRespFailure"/>
            <transition to="VerifyMIB" event="SNMPResp"/>
		</state>		
		
		<state ID="VerifyMIB" timer="30000">
			<prelude once="true" >
			 	<send protocol="utility" msgtype="SNMPGetTable">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-EVENT-MIB::pktcDevEvControl.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
			</prelude>
			<response>
				<verify step="8">
					<eq>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>00</expr>
					</eq>
				</verify>
			</response>

            <transition to="checkMIBTable2" event="SNMPRespFailure"/>
            <transition to="checkMIBTable2" event="SNMPResp"/>
		</state>

		<state ID="checkMIBTable2" timer="30000">
			<prelude once="true" >
			 	<send protocol="utility" msgtype="SNMPGetTable">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-EVENT-MIB::pktcDevEvLogTime</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
			</prelude>
			<response>
				<verify step="9" >
					<or>
						<eq ignoreCase="true">
							<msg_ref type="utility" index="0 0 1">SNMPResp.varBind</msg_ref>
							<expr>No</expr>
						</eq>
						<gt>
							<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
							<var_ref name="Time1"/>
						</gt>
					</or>
				</verify>
			</response>

            <transition to="END" event="SNMPRespFailure"/>
            <transition to="checkMIB" event="SNMPResp"/>			
		</state>
		
		<state ID="checkMIB" timer="30000">
			<prelude once="true" >
			 	<send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-EVENT-MIB::pktcDevEventDescrText.4000951500.4491</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
			</prelude>
			<response>
				<verify step="10">
						<eq ignoreCase="true" >
							<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
							<expr>provisioning complete</expr>
						</eq>
				</verify>
			</response>

            <transition to="SetMIB" event="SNMPRespFailure"/>
            <transition to="SetMIB" event="SNMPResp"/>
		</state>

		<state ID="SetMIB" timer="30000">
			<prelude once="true">
				<!-- Set pktcDevEventDescrReporting to ipv6(2)  -->
                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>PKTC-EVENT-MIB::pktcDevEventDescrText.4000951500.4491,STRING,CHANGEDTEXT][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
			<response>
				<verify step="10">
					<eq>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>CHANGEDTEXT</expr>
					</eq>
				</verify>
            </response>
			<postlude>
				<stop_capture/>
			</postlude>
            <transition to="accessMIB" event="SNMPRespFailure"/>
            <transition to="accessMIB" event="SNMPResp"/>
		</state>
		
		<state ID="accessMIB" timer="30000">
			<prelude once="true" >
			 	<send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-EVENT-MIB::pktcDevEventDescrText.4000951500.4491</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
			</prelude>
			<response>
				<verify step="10">
					<eq>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>CHANGEDTEXT</expr>
					</eq>
				</verify>
			</response>

            <transition to="resetMIB_2" event="SNMPRespFailure"/>
            <transition to="resetMIB_2" event="SNMPResp"/>
		</state>
		
		<state ID="resetMIB_2" timer="30000">
			<prelude once="true">
				<!-- Set pktcDevEventDescrReporting to ipv6(2)  -->
                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>PKTC-EVENT-MIB::pktcDevEvControl.0,OCTET-STRING,40][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
			<response>
				<verify step="11">
					<contains>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>40</expr>
					</contains>
				</verify>
            </response>
			<postlude>
				<stop_capture/>
			</postlude>
            <transition to="VerifyMIB_2" event="SNMPRespFailure"/>
            <transition to="VerifyMIB_2" event="SNMPResp"/>
		</state>
		
		<state ID="VerifyMIB_2" timer="30000">
			<prelude once="true" >
			 	<send protocol="utility" msgtype="SNMPGetTable">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-EVENT-MIB::pktcDevEvControl.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
			</prelude>
			<response>
				<verify step="11">
					<eq>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>00</expr>
					</eq>
				</verify>
			</response>

            <transition to="checkMIB_2" event="SNMPRespFailure"/>
            <transition to="checkMIB_2" event="SNMPResp"/>
		</state>
		
		<state ID="checkMIB_2" timer="30000">
			<prelude once="true" >
			 	<send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-EVENT-MIB::pktcDevEventDescrText.4000951500.4491</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
			</prelude>
			<response>
				<verify step="12">
						<eq ignoreCase="true" >
							<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
							<expr>provisioning complete</expr>
						</eq>
				</verify>
			</response>

            <transition to="checkSyslog" event="SNMPRespFailure"/>
            <transition to="checkSyslog" event="SNMPResp"/>
		</state>
		
		<state ID="checkSyslog">
			<prelude once="true" >
				<stop_capture/>
				<parse_capture name="eUE_Syslog">
					<parser_filter protocol="syslog" ip="DUT.IP"/>
				</parse_capture>
				<generate event="Branch1Event"/>
			</prelude>
			<response>
				<verify step="6">
						<contains ignoreCase="true" >
							<capture_ref type="syslog" name="eUE_Syslog" msg_instance="last">syslog.msg.show</capture_ref>
							<expr>provisioning complete</expr>
						</contains>
				</verify>

			</response>
			
            <transition to="END" event="Branch1Event"/>
		</state>
	 
	</add_to>
</pc2xml>
