<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)





-->
<pc2xml version="$Revision: 8188 $" 
	name="SIP-UE 1.6.1.4" 
	descrip="Error Response in the Proceeding State" 
	number="SIP-UE 1.6.1.4">
	
	<template file="./templates/CallOrigAtUETemp.xml" name="UE1"/>
	
	<remove_from fsm="UE1">
		<state ID="Setup"/>
	</remove_from>
	
	<add_to fsm="UE1">
		<state ID="Setup">
		<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
				<response>
				<!-- Step 2 from test case SIP 1.6.1.4 - The SS transmits an error 
				response of 404 to the INVITE Not Found to the UE. -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
						<send protocol="sip" msgtype="404-INVITE"/>
					</then>
				</if>
			</response>
			<transition to="Setup" event="DialDigitsComplete"/>
			<transition to="ACK" event="Invite"/>
		</state>
		
		<state ID="ACK">
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>ACK</expr>
					</eq>
					<then>
						<verify step="2, 3" requirements="RFC964, RFC965">
							<and>
								<!-- Step 3 from test case SIP 1.6.1.3 - UE sends an ACK. 
								Verify that the ACK is sent to the same ip and port as the INVITE was sent.
								Verify that the ACK is sent to the same port as the INVITE was sent.
								Also verify the ACK was sent using the same transport as for INVITE. -->
								<eq>
									<msg_ref type="sip">Request</msg_ref>
									<expr>ACK</expr>
								</eq>
								<and>
									<eq>
										<msg_ref type="sip" msg_instance="last">INVITE.DestinationAddress.IP</msg_ref>
										<msg_ref type="sip">ACK.DestinationAddress.IP</msg_ref>
									</eq>
									<and>
										<eq>
											<msg_ref type="sip" msg_instance="last">INVITE.DestinationAddress.Port</msg_ref>
											<msg_ref type="sip">ACK.DestinationAddress.Port</msg_ref>
										</eq>
										<eq>
											<msg_ref type="sip" msg_instance="last">INVITE.Via.sent-protocol</msg_ref>
											<msg_ref type="sip">ACK.Via.sent-protocol</msg_ref>
										</eq>
									</and>
								</and>
							</and>
						</verify>
					</then>
				</if>
			</response>
			<postlude>
				<send protocol="sip" msgtype="200-INVITE"/>
			</postlude>
			<transition to="ACK" event="DialDigitsComplete"/>
			<transition to="Verify" event="ACK"/>
		</state>
		
		<state ID="Verify" timer="10000">
			<response>
				<if>
					<neq>
						<msg_ref type="event"/>
						<expr>DIALOG_CONFIRMED_UAS</expr>
					</neq>
					<then>
						<verify step="4" requirements="RFC962">
							<and>
								<eq>
									<msg_ref type="event"/>
									<expr>TimerExpired</expr>
								</eq>
								<neq>
									<msg_ref type="sip">Request</msg_ref>
									<expr>ACK</expr>
								</neq>
							</and>
						</verify>
					</then>
				</if>
			</response>
			<transition to="END" event="ACK"/>
			<transition to="END" event="TimerExpired"/>
		</state>
	</add_to>
</pc2xml>
