<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)



-->

<!-- First are the document type and the attributes for our document -->
<pc2xml version="$Revision: 7768 $" 
		name="E-UE_DATA_1.2.5.2" 	
		descrip="Ability of eUE to Implement the IPNetToPhysicalTable."
		number="E-UE_DATA_1.2.5.2">

	<!-- Step 1 -->
	<template file="./templates/EUE_Prov_B_1_1_1.xml" name="IPNetToPhysicalTable"/>

	<add_to fsm="IPNetToPhysicalTable">
		<transition from="StartCapture_RebootWait" to="EUEProvision" event="TimerExpired"/>

		<states initialstate="Note">
		
		<state ID="Note">
			<prelude>
				<log promptUser="true" expr="To verify MAC address of eCM, make sure the mac address of eCM with colons is included in DUT.mib2 in config file."/>
				<generate event="Branch1Event"/>
			</prelude>
			<transition to="Reboot" event="Branch1Event"/>
		</state>
		
		<!-- Step 9 The E-UE DUT provisions successfully and becomes operational. -->
        <state ID="EUEProvision" timer="10000">
            <prelude once="true">				
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="9">
                    <eq>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </eq>
                </verify>
            </response>
            <transition to="VerifyIPNetToPhysicalTable" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>

		<!-- 10 Perform an SNMP query on the ipNetToPhysicalTable using the eUE interface. -->
		<state ID="VerifyIPNetToPhysicalTable" timer="10000">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGetTable">
					<mod modtype="add" hdr="oids">
						<expr>IP-MIB::ipNetToPhysicalTable</expr>
					</mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
						<expr>3</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<!-- ipNetToPhysicalIfIndex - not accessible -->
				<!-- verify step="10-ipNetToPhysicalIfIndex">
					<eq ignoreCase="true">
						<msg_ref type="utility" index="0 x 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr>
					</eq>
				</verify-->
				<verify step="10-ipNetToPhysicalPhysAddress">
					<eq ignoreCase="true">
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<msg_ref type="platform">DUT.mib2</msg_ref>
					</eq>
				</verify>
				<!-- ipNetToPhysicalNetAddressType - not accessible -->
				<!--verify step="10-ipNetToPhysicalNetAddressType">
					<eq>
						<msg_ref type="utility" index="0 x 2">SNMPResp.varBind</msg_ref>
						<expr>2</expr>
					</eq>	
				</verify-->
				<!-- ipNetToPhysicalNetAddress - not accessible -->				
				<!--verify step="10-ipNetToPhysicalNetAddress">
					<eq>
						<msg_ref type="utility" index="0 x 2">SNMPResp.varBind</msg_ref>
						<msg_ref type="platform">DUT.CM IP Address</msg_ref>
					</eq>
				</verify-->
				<verify step="10-ipNetToPhysicalLastUpdated">
					<and>
						<notnull>
							<msg_ref type="utility" index="0 1 2">SNMPResp.varBind</msg_ref>
						</notnull>
						<neq ignoreCase="true">
							<msg_ref type="utility" index="0 1 2">SNMPResp.varBind</msg_ref>
							<expr>ERROR</expr>
						</neq>
					</and>
				</verify>
				<verify step="10-ipNetToPhysicalType">
					<eq>
						<msg_ref type="utility" index="0 2 2">SNMPResp.varBind</msg_ref>
						<expr>4</expr>
					</eq>
				</verify>
				<verify step="10-ipNetToPhysicalState">
					<eq>
						<msg_ref type="utility" index="0 3 2">SNMPResp.varBind</msg_ref>
						<expr>6</expr>
					</eq>		
				</verify>
				<verify step="10-ipNetToPhysicalRowStatus">
					<eq>
						<msg_ref type="utility" index="0 4 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr>
					</eq>
				</verify>
			</response>
			<postlude>
				<stop_capture />
			</postlude>
			<transition to="Reconfigure" event="SNMPResp" />
			<transition to="END" event="SNMPRespFailure" />
		</state>

		<!-- vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv -->
        <!-- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ -->
		<!-- Hybrid Mode -->
        <!-- Step 12 -->
        <state ID="Reconfigure"
			   provFile="v6.C.1.2.3_Hybrid.bin"
               policyFile="X_eUEv6_Hybrid"
               nextState="Reset2"/>

        <state ID="Reset2" timer="120000">
            <prelude once="true">
			    <start_capture>
                    <filter>
                        <var_expr>
							<expr>host </expr>
							<msg_ref type="platform">DUT.IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.CM IP Address</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.DHCP Server IP</msg_ref>
						</var_expr>
                    </filter>
                </start_capture>
				
                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>DOCS-CABLE-DEVICE-MIB::docsDevResetNow.0,INTEGER,1][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.CM IP Address</msg_ref>
                    </mod>
                    <!-- Always use version 2c for a CM reset -->
					<mod modtype="replace" hdr="version">
						<expr>2c</expr>
					</mod>
                </send>
            </prelude>
            <response>
                <if>
                    <eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPRespFailure</expr>
                    </eq>
                    <then>
                        <fail/>
                    </then>
                </if>
                <if>
                    <or>
                        <eq>
                            <msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
                            <expr>0</expr>
                        </eq>
                        <eq>
                            <msg_ref type="sip">REGISTER.Expires.value</msg_ref>
                            <expr>0</expr>
                        </eq>
                    </or>
                    <then>
                        <send protocol="sip" msgtype="200-REGISTER"/>
                    </then>
                </if>
            </response>
            <transition to="EUEProvision2" event="TimerExpired"/>
            <transition to="Reset2" event="SNMPResp"/>
            <transition to="Reset2" event="REGISTER"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>

        <!-- Step 12 The E-UE DUT provisions successfully and becomes operational. -->
        <state ID="EUEProvision2" timer="10000">
            <prelude once="true">				
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>2c</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="12">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="VerifyIPNetToPhysicalTable2" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>
	
		
		<!-- 6 Perform an SNMP query on the ipNetToPhysicalTable using the eUE interface. -->
		<state ID="VerifyIPNetToPhysicalTable2" timer="10000">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGetTable">
					<mod modtype="add" hdr="oids">
						<expr>IP-MIB::ipNetToPhysicalTable</expr>
					</mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>2c</expr>
                    </mod>
				</send>
			</prelude>
			<response>
				<!-- ipNetToPhysicalIfIndex - not accessible -->
				<!-- verify step="13-ipNetToPhysicalIfIndex">
					<eq ignoreCase="true">
						<msg_ref type="utility" index="0 x 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr>
					</eq>
				</verify-->
				<verify step="13-ipNetToPhysicalPhysAddress">
					<eq ignoreCase="true">
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<msg_ref type="platform">DUT.mib2</msg_ref>
					</eq>
				</verify>
				<!-- ipNetToPhysicalNetAddressType - not accessible -->
				<!--verify step="13-ipNetToPhysicalNetAddressType">
					<eq>
						<msg_ref type="utility" index="0 x 2">SNMPResp.varBind</msg_ref>
						<expr>2</expr>
					</eq>	
				</verify-->
				<!-- ipNetToPhysicalNetAddress - not accessible -->				
				<!--verify step="13-ipNetToPhysicalNetAddress">
					<eq>
						<msg_ref type="utility" index="0 x 2">SNMPResp.varBind</msg_ref>
						<msg_ref type="platform">DUT.CM IP Address</msg_ref>
					</eq>
				</verify-->
				<verify step="13-ipNetToPhysicalLastUpdated">
					<and>
						<notnull>
							<msg_ref type="utility" index="0 1 2">SNMPResp.varBind</msg_ref>
						</notnull>
						<neq ignoreCase="true">
							<msg_ref type="utility" index="0 1 2">SNMPResp.varBind</msg_ref>
							<expr>ERROR</expr>
						</neq>
					</and>
				</verify>
				<verify step="13-ipNetToPhysicalType">
					<eq>
						<msg_ref type="utility" index="0 2 2">SNMPResp.varBind</msg_ref>
						<expr>4</expr>
					</eq>
				</verify>
				<verify step="13-ipNetToPhysicalState">
					<eq>
						<msg_ref type="utility" index="0 3 2">SNMPResp.varBind</msg_ref>
						<expr>6</expr>
					</eq>		
				</verify>
				<verify step="13-ipNetToPhysicalRowStatus">
					<eq>
						<msg_ref type="utility" index="0 4 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr>
					</eq>
				</verify>
			</response>
			<postlude>
				<stop_capture />
			</postlude>
			<transition to="END" event="SNMPResp" />
			<transition to="END" event="SNMPRespFailure" />
		</state>		
		</states>
	</add_to>
</pc2xml>
