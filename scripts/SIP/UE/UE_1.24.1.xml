<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)





-->
<pc2xml version="$Revision: 8188 $" 
	name="SIP-UE 1.24.1" 
	descrip="Registration in Dual Stack mode" 
	number="SIP-UE 1.24.1">
	
	<template file="./templates/UERegTemp.xml" name="Registrar"/>
	
	<remove_from fsm="Registrar">
		<state ID="Reboot"/>
		<state ID="PendingRegistration"/>
		<state ID="Registered"/>
	</remove_from>
	
	
	
	<add_to fsm="Registrar">
	    <state ID="Reboot" timer="5000">
			<!-- First we need to power cycle the UE to conduct the test -->
			<prelude once="true" >
				<send protocol="utility" msgtype="SNMPSet">
					<mod modtype="add" hdr="array">
						<var_expr>
							<expr>varBind 1 1 3 \r\n ][ , </expr>
							<expr>DOCS-CABLE-DEVICE-MIB::docsDevResetNow.0,INTEGER,1][\r\n</expr>
						</var_expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.CM IP Address</msg_ref>
					</mod>
					<!-- Always use version 2 for a CM reset -->
					<mod modtype="replace" hdr="version">
						<expr>2c</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>SNMPRespFailure</expr>
					</eq>
					<then>
						<fail/>
					</then>
				</if>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
							<expr>0</expr>
						</eq>
						<eq>
							<msg_ref type="sip">REGISTER.Expires.value</msg_ref>
							<expr>0</expr>
						</eq>
					</or>
					<then>
						<send protocol="sip" msgtype="200-REGISTER"/>
					</then>
				</if>
			</response>
			<!-- Test cases deriving their functionality from this template
				should change the following transition to some local state -->
			<transition to="Reboot" event="SNMPResp"/>
			<transition to="PendingRegistration" event="TimerExpired"/>
			<transition to="END" event="SNMPRespFailure"/>
			<transition to="Reboot" event="REGISTER"/>
		</state>
		<state ID="PendingRegistration">
			<response>
					<if>
						<and>
							<eq>
								<msg_ref type="sip">Request</msg_ref>
								<expr>REGISTER</expr>
							</eq>
							<ipv4>
								<msg_ref type="platform">DUT.IP</msg_ref>
							</ipv4>
						</and>
						<then>
						<verify step="2" requirements="RFC444" group="initURI">
								<neq>
									<msg_ref type="sip">REGISTER.Request-Line.Request-URI</msg_ref>
									<expr></expr>
								</neq>
							</verify>
							<verify step="3" requirements="REQ23424, REQ24182, REQ24183" group="initFrom">
								<ipv4>
									<msg_ref type="sip">REGISTER.From.domain</msg_ref>
								</ipv4>
							</verify>
							<verify step="3" requirements="REQ23424, REQ24182, REQ24183" group="initTo">
								<ipv4>
									<msg_ref type="sip">REGISTER.To.domain</msg_ref>
								</ipv4>
							</verify>
						</then>
						<elseif>
						    <and>
								<eq>
									<msg_ref type="sip">Request</msg_ref>
									<expr>REGISTER</expr>
								</eq>
								<ipv6>
									<msg_ref type="platform">DUT.IP</msg_ref>
								</ipv6>
							</and>
							<then>
							<verify step="2" requirements="RFC444" group="initURI">
								<neq>
									<msg_ref type="sip">REGISTER.Request-Line.Request-URI</msg_ref>
									<expr></expr>
								</neq>
							</verify>
							<verify step="3" requirements="REQ23424, REQ24182, REQ24183" group="initFrom">
								<ipv6>
									<msg_ref type="sip">REGISTER.From.domain</msg_ref>
								</ipv6>
							</verify>
							<verify step="3" requirements="REQ23424, REQ24182, REQ24183" group="initTo">
								<ipv6>
									<msg_ref type="sip">REGISTER.To.domain</msg_ref>
								</ipv6>
							</verify>
							</then>
						</elseif>
					</if>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="401-REGISTER"/>
					</then>
				</if>
			</response>
			<transition to="Authorization" event="REGISTER"/>
		</state>
		
		<state ID="Registered" timer="30000">
			<prelude once="true">
				<send protocol="sip" msgtype="200-Register"/>
				
			</prelude>
			<response>
					<if>
						<and>
							<eq>
								<msg_ref type="sip">Request</msg_ref>
								<expr>SUBSCRIBE</expr>
							</eq>
							<or>
								<contains>
									<msg_ref type="sip">SUBSCRIBE.Event</msg_ref>
									<expr>reg</expr>
								</contains>
								<or>
									<contains>
										<msg_ref type="sip">SUBSCRIBE.Event</msg_ref>
										<expr>dialog</expr>
									</contains>
									<contains>
										<msg_ref type="sip">SUBSCRIBE.Event</msg_ref>
										<expr>message-summary</expr>
									</contains>
								</or>
							</or>
						</and>
						<then>
							<send protocol="sip" msgtype="200-SUBSCRIBE"/>
							<sleep time="100"/>
							<send protocol="sip" msgtype="NOTIFY"/>
						</then>
					</if>
					<if>
						<and>
							<eq>
								<msg_ref type="sip">Request</msg_ref>
								<expr>REGISTER</expr>
							</eq>
							<ipv4>
								<msg_ref type="platform">DUT.IP</msg_ref>
							</ipv4>
						</and>
						<then>
							<verify step="3" requirements="REQ23424, REQ24182, REQ24183" group="finalFrom">
								<ipv4>
									<msg_ref type="sip" msg_instance="last">REGISTER.From.domain</msg_ref>
								</ipv4>
							</verify>
							<verify step="3" requirements="REQ23424, REQ24182, REQ24183" group="finalTo">
								<ipv4>
									<msg_ref type="sip"  msg_instance="last">REGISTER.To.domain</msg_ref>
								</ipv4>
							</verify>
						</then>
						<elseif>
							<and>
								<eq>
									<msg_ref type="sip">Request</msg_ref>
									<expr>REGISTER</expr>
								</eq>
								<ipv6>
									<msg_ref type="platform">DUT.IP</msg_ref>
								</ipv6>
							</and>
							<then>
								<verify step="3" requirements="REQ23424, REQ24182, REQ24183" group="finalFrom">
									<ipv6>
										<msg_ref type="sip" msg_instance="last">REGISTER.From.domain</msg_ref>
									</ipv6>
								</verify>
								<verify step="3" requirements="REQ23424, REQ24182, REQ24183" group="finalTo">
									<ipv6>
										<msg_ref type="sip"  msg_instance="last">REGISTER.To.domain</msg_ref>
									</ipv6>
								</verify>
							</then>
						</elseif>
					</if>
				</response>
			<transition to="Notification" event="TimerExpired"/>
			<transition to="Notification" event="SUBSCRIBE"/>
		</state>
		
		<state ID="Notification" timer="5000">
			<response>
				<if>
					<ipv4>
						<msg_ref type="platform">DUT.IP</msg_ref>
					</ipv4>
					<then>
						<log promptUser="true" expr="Configure the DUT to provision in IPv6."/>
					</then>
				</if>
			</response>
			<transition to="END" event="TimerExpired"/>
			<transition to="END" event="200-NOTIFY"/>
		</state>
	</add_to>
</pc2xml>
