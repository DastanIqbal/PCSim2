<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)
	PCPCII-108 : Update the script to reflect the changes made for D09 or D08.1 release of the ATP.
		(ghassler 4/29/2009).
	PCPCII-139 : Update the Voicetronix modifiers to use the new values. (ghassler 07/10/2009)
	PCPCII-174 : Update the script to the D11 version of the ATP (ghassler 01/26/2010)
	PCPCII-204 : Correct parsing error, change the state that SpecialHold3 state goes to and 
		modified the logic for the last verify in state SpecialHold2. (ghassler 03/11/2010)

-->
<pc2xml version="$Revision: 8188 $" 
	name="RST-UE 1.5.3.6" 
	descrip="Call Hold â€“ DUT is controller " 
	number="RST-UE 1.5.3.6" inspector="disable">
	
	<template file="./templates/Proxy_with_HF.xml" name="UE1"/>

	<remove_from fsm="UE1">
		<state ID="OffHook"/>
		<state ID="Setup" sub="prelude"/> 
		<state ID="Alerting"/>
		<state ID="Unmute"/>
		<state ID="MediaResumed"/>
		<state ID="OnHook"/>
		<state ID="OnHookUE1"/>
	</remove_from>

	<add_to fsm="UE1">
		<transition from="Muted" to="SpecialHold" event="TimerExpired"/>
		
		<state ID="OffHook">
			<prelude>
				<send protocol="utility" msgtype="OffHook">
					<mod modtype="replace" hdr="voiceport">
						<msg_ref type="platform">Platform.voiceport1</msg_ref>
					</mod>
				</send>
			</prelude>
			<transition to="Setup" event="OffHookComplete"/>
		</state>
		
		<state ID="Setup" sub="prelude" once="true">
			<send protocol="utility" msgtype="DialDigits">
				<mod modtype="add" hdr="number">
					<msg_ref type="platform">UE0.phone number 1</msg_ref>
				</mod>
			</send>
		</state>
		
		<state ID="Alerting" timer="6000">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>TimerExpired</expr>
					</eq>
					<then>
						<send protocol="utility" msgtype="OffHook">
							<mod modtype="replace" hdr="voiceport">
								<msg_ref type="platform">Platform.voiceport0</msg_ref>
							</mod>
						</send>
					</then>
				</if>
			</response>
			<transition to="Alerting" event="INVITE"/>
			<transition to="Alerting" event="OPTIONS"/>
			<transition to="Alerting" event="200-OPTIONS"/>
			<transition to="Alerting" event="PRACK"/>
			<transition to="Alerting" event="200-PRACK"/>
			<transition to="Alerting" event="UPDATE"/>
			<transition to="Alerting" event="200-UPDATE"/>
			<transition to="Alerting" event="xxx-INVITE"/>
			<transition to="Alerting" event="OffHookComplete"/>
			<transition to="Connected" event="ACK"/>
		</state>
			
		<state ID="SpecialHold" timer="10000">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<expr>*52</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>DialDigitsComplete</expr>
					</eq>
					<then>
						<sleep time="5000"/>
						<send protocol="utility" msgtype="VerifyDialTone"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="utility">Response</msg_ref>
								<expr>VerifyDialToneComplete</expr>
							</eq>
							<eq>
								<msg_ref type="utility">Response</msg_ref>
								<expr>VerifyDialToneError</expr>
							</eq>
						</or>
						<then>
							<verify step="3" requirements="REQ13797, REQ13799, REQ13800">
								<eq>
									<msg_ref type="utility">Response</msg_ref>
									<expr>VerifyDialToneComplete</expr>
								</eq>
							</verify>
						</then>
					</elseif>
				</if>
				<if>
					<or>
						<eq>
							<msg_ref type="event"/>
							<expr>TimerExpired</expr>
						</eq>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>REINVITE</expr>
						</eq>
					</or>
					<then>
						<verify step="3" requirements="REQ13797, REQ13799, REQ13800">
							<and>
								<eq>
									<msg_ref type="event"/>
									<expr>TimerExpired</expr>
								</eq>
								<neq>
									<msg_ref type="sip">Request</msg_ref>
									<expr>REINVITE</expr>
								</neq>
							</and>
						</verify>
					</then>
				</if>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="SpecialHold" event="DialDigitsComplete"/>
			<transition to="SpecialHold" event="VerifyDialToneComplete"/>
			<transition to="SpecialHold" event="VerifyDialToneError"/>
			<transition to="Unmute" event="TimerExpired"/>
		</state>
		
		<state ID="Unmute">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<expr>*52</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Unmute" event="DialDigitsComplete"/>
			<transition to="Unmute" event="REINVITE"/>
			<transition to="Unmute" event="xxx-INVITE"/>
			<transition to="MediaResumed" event="ACK"/>
		</state>
		
		<state ID="MediaResumed">
			<prelude once="true">
				<verify step="4" requirements="REQ13797, REQ13798">
					<and>
						<eq>
							<msg_ref type="sip" msg_instance="last">Response.Status-Line.status-code</msg_ref>
							<expr>200</expr>
						</eq>
						<eq>
							<msg_ref type="sip" msg_instance="last">Response.CSeq.method</msg_ref>
							<expr>INVITE</expr>
						</eq>
					</and>
				</verify>
				<sleep time="5000"/>
				<send protocol="utility" msgtype="HookFlash"/>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="MediaResumed" event="HookFlashComplete"/>
			<transition to="MediaResumed" event="REINVITE"/>
			<transition to="MediaResumed" event="xxx-INVITE"/>
			<transition to="SpecialHold2" event="ACK"/>
		</state>
		
		<state ID="SpecialHold2" timer="10000">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<expr>*52</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>DialDigitsComplete</expr>
					</eq>
					<then>
						<sleep time="5000"/>
						<send protocol="utility" msgtype="VerifyDialTone"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="utility">Response</msg_ref>
								<expr>VerifyDialToneComplete</expr>
							</eq>
							<eq>
								<msg_ref type="utility">Response</msg_ref>
								<expr>VerifyDialToneError</expr>
							</eq>
						</or>
						<then>
							<verify step="6" requirements="REQ13797, REQ13799, REQ13800">
								<eq>
									<msg_ref type="utility">Response</msg_ref>
									<expr>VerifyDialToneComplete</expr>
								</eq>
							</verify>
						</then>
						
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="event"/>
								<expr>TimerExpired</expr>
							</eq>
							<eq>
								<msg_ref type="sip">Request</msg_ref>
								<expr>REINVITE</expr>
							</eq>
						</or>
						<then>
							<verify step="6" requirements="REQ13797, REQ13799, REQ13800">
								<and>
									<eq>
										<msg_ref type="event"/>
										<expr>TimerExpired</expr>
									</eq>
									<neq>
										<msg_ref type="sip">Request</msg_ref>
										<expr>REINVITE</expr>
									</neq>
								</and>
							</verify>
						</then>
					</elseif>
				</if>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="SpecialHold2" event="DialDigitsComplete"/>
			<transition to="SpecialHold2" event="VerifyDialToneError"/>
			<transition to="SpecialHold2" event="VerifyDialToneComplete"/>
			<transition to="Silence" event="TimerExpired"/>
		</state>
		
		<!--  Wait 16 seconds for step 7 (Note 10 seconds are in the SpecialHold2 state
			making sure no REINVITE is sent. -->
		<state ID="Silence" timer="6000">
			<transition to="RecvrOffHook" event="TimerExpired"/>
		</state>
		
		<state ID="RecvrOffHook">
			<prelude once="true">
				<log promptUser="true" verify="true" step="7" requirements="REQ23128"
					expr="Verify that he DUT plays permanent sequence tone?"/>
				<send protocol="utility" msgtype="HookFlash"/>
				<sleep time="5000"/>
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<expr>*52</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="RecvrOffHook" event="HookFlashComplete"/>
			<transition to="RecvrOffHook" event="DialDigitsComplete"/>
			<transition to="RecvrOffHook" event="REINVITE"/>
			<transition to="RecvrOffHook" event="xxx-INVITE"/>
			<transition to="MediaResumed2" event="ACK"/>
		</state>
				
		<state ID="MediaResumed2">
			<prelude once="true">
				<verify step="9" requirements="REQ13803, REQ13816, REQ13817">
					<and>
						<eq>
							<msg_ref type="sip" msg_instance="last">Response.Status-Line.status-code</msg_ref>
							<expr>200</expr>
						</eq>
						<eq>
							<msg_ref type="sip" msg_instance="last">Response.CSeq.method</msg_ref>
							<expr>INVITE</expr>
						</eq>
					</and>
				</verify>
				<sleep time="5000"/>
				<send protocol="utility" msgtype="HookFlash"/>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="MediaResumed2" event="HookFlashComplete"/>
			<transition to="MediaResumed2" event="DialDigitsComplete"/>
			<transition to="MediaResumed2" event="REINVITE"/>
			<transition to="MediaResumed2" event="xxx-INVITE"/>
			<transition to="VerifyDialTone3" event="ACK"/>
		</state>
		
		<state ID="VerifyDialTone3">
			<prelude>
				<sleep time="5000"/>
				<verify step="10" requirements="REQ13797, REQ13799, REQ13800">
					<and>
						<eq>
							<msg_ref type="sip" msg_instance="last">Response.Status-Line.status-code</msg_ref>
							<expr>200</expr>
						</eq>
						<eq>
							<msg_ref type="sip" msg_instance="last">Response.CSeq.method</msg_ref>
							<expr>INVITE</expr>
						</eq>
					</and>
				</verify>
				<send protocol="utility" msgtype="VerifyDialTone"/>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>VerifyDialToneComplete</expr>
					</eq>
					<then>
						<verify step="10" requirements="REQ13797, REQ13799, REQ13800">
							<eq>
								<msg_ref type="utility">Response</msg_ref>
								<expr>VerifyDialToneComplete</expr>
							</eq>
						</verify>
					</then>
				</if>
			</response>
			<transition to="SpecialHold3" event="VerifyDialToneComplete"/>
		</state>
		
		<state ID="SpecialHold3">
			<prelude once="true">
				
				<generate event="Branch1Event"/>
			</prelude>
			<transition to="OnHookUE1" event="Branch1Event"/>
		</state>
		
		<state ID="OnHookUE1">
				<prelude once="true">
					<send protocol="utility" msgtype="OnHook">
						<mod modtype="replace" hdr="voiceport">
							<msg_ref type="platform">Platform.voiceport1</msg_ref>
						</mod>
					</send>
				</prelude>
				<response>
					<if>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE0"/>
						</then>
						<elseif>
							<or>
								<eq>
									<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
									<msg_ref type="platform">UE0.IP</msg_ref>
								</eq>
								<eq>
									<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
									<msg_ref type="platform">UE0.IP</msg_ref>
								</eq>
							</or>
							<then>
								<proxy target="UE1"/>
							</then>
						</elseif>
					</if>
				</response>
				<transition to="OnHookUE1" event="OnHookComplete"/>
				<transition to="OnHookUE1" event="Bye"/>
				<transition to="OnHook" event="200-Bye"/>
			</state>
			<!-- OnHook State -->
			<state ID="OnHook">
				<prelude>
					<send protocol="utility" msgtype="OnHook">
						<mod modtype="replace" hdr="voiceport">
							<msg_ref type="platform">Platform.voiceport1</msg_ref>
						</mod>
					</send>
				</prelude>
				<transition to="END" event="OnHookComplete"/>
			</state>
			
	</add_to>
</pc2xml>
