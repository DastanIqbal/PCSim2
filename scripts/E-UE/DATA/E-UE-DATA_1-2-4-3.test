#//****************************************************************************
#// Filename: E-UE-DATA_1-2-4-3.test
#// Author:   Matthew Forbes
#// Creation Date: 03/13/2009
#// Modified by:
#//           Matthew Forbes 2/10/10 - Changed MIB table checks form EventDescrTable to
#//           EventLogTable
#//
#//****************************************************************************
#// Description:
#//     TC2755 TEST CASE E-UE-DATA 1.2.4.3 Ability of eUE to Support Reporting of Provisioning Events
#//
#//
#// Objective:
#//     This test verifies the ability of the eUE to support the reporting of provisioning events,
#//     including event IDs and severity levels required for PacketCable. This capability applies 
#//     to both IPv4 and IPv6.
#//
#// PacketCable DUT:
#//     EDVA
#//
#// Test Steps:
#//     - Initial configuration, config file with bad hash
#//     - Start sniffer
#//     - Reset EDVA
#//     - Check Provisioning state
#//     - Check values MIB values
#//     - Stop Sniffer
#//     - Secondary configuration, config file with missing element
#//     - Start sniffer
#//     - Reset EDVA
#//     - Check Provisioning state
#//     - Check values MIB values
#//     - Stop Sniffer
#//
#// Notes:
#//     - Requires provPrimitives.tcl & tftp_primitives.tcl.
#//     - Requires the specific config file in $BASE_CFG_FILE_PATH in Provisioning Server.
#//****************************************************************************
global SCRIPT_VERSION
set SCRIPT_VERSION { # $Id: E-UE-DATA_1-2-4-3.test 7470 2010-08-06 17:41:44Z ghassler $ }

set test_case E-UE-DATA_1-2-4-3-
set step_num 1

DoStep ${test_case}${step_num} "Initial Configuration" {
    LogMsg "--- Init PROV module ---"
    Init_PROV
    
    Init_CONTROLLER_LAN
    # Initial PARSER TOOL
    # Init_PART
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 cfg-2755-1.bin
    PROV_DEPLOY_DHCP
} {PASS_STEP}

DoStep ${test_case}[incr step_num]_1 "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP || udp port 67"
    StartCaptureControllerLan
} {PASS_STEP}

DoStep ${test_case}${step_num}_2 "Reset CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "--- Reset of CM and MTA has passed ---"
} {
    IsEqual $val 0
}

DoStep ${test_case}${step_num}_3 "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
    # Get the OID from the MTA and check it using our previously defined
    set val [GetProvState 3 600]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 3"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 3
}

DoStep ${test_case}[incr step_num]_1 "pktcDevEvLogIndex Content Verification" {
    set index 0
    set pc_event_text [list "Configuration File Error - Bad Authentication"]
    set text_list [SNMP_TABLE_GET $oid_pktcDevEvLogText $MTA_IP LIST 20]
    foreach pctext $pc_event_text {
        set search_index [lsearch $text_list $pctext]
        if {$search_index == -1} {
            LogMsg "ERROR: Unable to locate Provisioning Complete Log index value = $search_index"
            set command FAIL_STEP
        } else {set index [expr $search_index +1]}
    }
} {PASS_STEP}

DoStep ${test_case}${step_num}_2 "Content verification pktcDevEvLogTime" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogTime $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogTime = $val ---"
} {
    # IsEqual $val
    set clockval [clock format [clock seconds]]
    verify_signal "The pktcDevEvLogTime is $val, should match $clockval"
}

DoStep ${test_case}${step_num}_3 "Content verification pktcDevEvLogEnterprise" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogEnterprise $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogEnterprise = $val ---"
} {
    IsEqual $val 4491
}

DoStep ${test_case}${step_num}_4 "Content verification pktcDevEvLogId" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogId = $val ---"
} {
    IsEqual $val 4000950901
}

DoStep ${test_case}${step_num}_5 "Content verification pktcDevEvLogText" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogText $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogText = $val ---"
} {
    IsEqual $val "Configuration File Error - Bad Authentication"
}

DoStep ${test_case}${step_num}_6 "Content verification pktcDevEvLogEndpointName" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogEndpointName $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogEndpointName = $val ---"
    set temp_val [string toupper $val]
    set temp_MTA_NAME [string toupper $MTA_NAME]
} {
    # IsEqual $temp_val "\<${temp_MTA_NAME}\>\/\<${MTA_IP}\>"
    IsEqual $temp_val "${temp_MTA_NAME}\/${MTA_IP}"
}

DoStep ${test_case}${step_num}_7 "Content verification pktcDevEvLogType" {
    # set val [SNMP_TABLE_GET $oid_pktcDevEvLogType $MTA_IP $index]
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogType.$index $MTA_IP all]
    LogMsg "--- Content verification pktcDevEvLogType = $val ---"
} {
    # Local
    # IsEqual $val 0
    #Syslog
    # IsEqual $val 1
    IsEqual $val "{D0 0 1 3 }"
    #Inform
    # IsEqual $val 3
}

DoStep ${test_case}${step_num}_8 "Content verification pktcDevEvLogTargetInfo" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogTargetInfo $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogTargetInfo = $val ---"
} {
    verify_signal "The pktcDevEvLogTargetInfo is $val, should be a list of actions taken"
}

DoStep ${test_case}${step_num}_9 "Content verification pktcDevEvLogCorrelationId" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogCorrelationId $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogCorrelationId = $val ---"
} {
    verify_signal "The pktcDevEvLogCorrelationId is $val, is this correct?"
}

DoStep ${test_case}${step_num}_10 "Content verification pktcDevEvLogAdditionalInfo" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogAdditionalInfo $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogAdditionalInfo = $val ---"
} {
    verify_signal "The pktcDevEvLogAdditionalInfo is $val, vendor specific info or blank"
}

# DoStep ${test_case}${step_num} "pktcDevEvLogIndex Content Verification" {
    # set command PASS_STEP
    # set index 0
    # set pc_event_text [list "Configuration File Error - Bad Authentication"]
    # set text_list [SNMP_TABLE_GET $oid_pktcDevEventDescrText $MTA_IP LIST 20]
    # foreach pctext $pc_event_text {
        # set search_index [lsearch $text_list $pctext]
        # if {$search_index == -1} {
            # LogMsg "ERROR: Unable to locate Provisioning Complete Log index value = $search_index"
            # set command FAIL_STEP
        # } else {set index [expr $search_index +1]}
    # }
# } {eval $command}
# 
# DoStep ${test_case}${step_num}_3 "Content verification oid_pktcDevEventDescrFacility " {
    # set val [SNMP_TABLE_GET $oid_pktcDevEventDescrFacility  $MTA_IP $index]
    # LogMsg "--- Content verification oid_pktcDevEventDescrFacility  = $val ---"
# } {
    # IsEqual $val 16
# }
# 
# DoStep ${test_case}${step_num}_3 "Content verification oid_pktcDevEventDescrLevel " {
    # set val [SNMP_TABLE_GET $oid_pktcDevEventDescrLevel  $MTA_IP $index]
    # LogMsg "--- Content verification oid_pktcDevEventDescrLevel  = $val ---"
# } {
    # IsEqual $val 2
# }
# 
# DoStep ${test_case}${step_num}_3 "Content verification oid_pktcDevEventDescrReporting " {
    # set val [SNMP_TABLE_GET $oid_pktcDevEventDescrReporting.4000950901.4491  $MTA_IP all]
    # LogMsg "--- Content verification oid_pktcDevEventDescrReporting  = $val ---"
# } {
    # IsEqual $val "{D0 0 1 3 }"
# }
# 
# DoStep ${test_case}${step_num}_3 "Content verification oid_pktcDevEventDescrText " {
    # set val [SNMP_TABLE_GET $oid_pktcDevEventDescrText  $MTA_IP $index]
    # LogMsg "--- Content verification oid_pktcDevEventDescrText  = $val ---"
# } {
    # IsEqual $val "Configuration File Error - Bad Authentication"
# }
# 
DoStep ${test_case}[incr step_num] "Stop sniffer" {
    LogMsg "--- Stop sniffer ---"
    StopCaptureControllerLan
    SaveToFileControllerLan "_Part_1"
} {PASS_STEP}

DoStep ${test_case}${step_num} "Initial Configuration" {
    LogMsg "--- Init PROV module ---"
    # Init_PROV
    
    Init_CONTROLLER_LAN
    # Initial PARSER TOOL
    # Init_PART
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 cfg-2755-2.bin
    PROV_DEPLOY_DHCP
} {PASS_STEP}

DoStep ${test_case}[incr step_num]_1 "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP || udp port 67"
    StartCaptureControllerLan
} {PASS_STEP}

DoStep ${test_case}${step_num}_2 "Reset CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "--- Reset of CM and MTA has passed ---"
} {
    IsEqual $val 0
}

DoStep ${test_case}${step_num}_3 "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
    # Get the OID from the MTA and check it using our previously defined
    set val [GetProvState 3 600]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 3"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 3
}

DoStep ${test_case}[incr step_num]_1 "pktcDevEvLogIndex Content Verification" {
    set index 0
    set pc_event_text [list "Configuration File Error - Missing Parameter"]
    set text_list [SNMP_TABLE_GET $oid_pktcDevEvLogText $MTA_IP LIST 20]
    foreach pctext $pc_event_text {
        set search_index [lsearch $text_list $pctext]
        if {$search_index == -1} {
            LogMsg "ERROR: Unable to locate Provisioning Complete Log index value = $search_index"
            set command FAIL_STEP
        } else {set index [expr $search_index +1]}
    }
} {PASS_STEP}


DoStep ${test_case}${step_num}_2 "Content verification pktcDevEvLogTime" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogTime $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogTime = $val ---"
} {
    # IsEqual $val
    set clockval [clock format [clock seconds]]
    verify_signal "The pktcDevEvLogTime is $val, should match $clockval"
}

DoStep ${test_case}${step_num}_3 "Content verification pktcDevEvLogEnterprise" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogEnterprise $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogEnterprise = $val ---"
} {
    IsEqual $val 4491
}

DoStep ${test_case}${step_num}_4 "Content verification pktcDevEvLogId" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogId = $val ---"
} {
    IsEqual $val 4000950904
}

DoStep ${test_case}${step_num}_5 "Content verification pktcDevEvLogText" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogText $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogText = $val ---"
} {
    IsEqual $val "Configuration File Error - Missing Parameter"
}

DoStep ${test_case}${step_num}_6 "Content verification pktcDevEvLogEndpointName" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogEndpointName $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogEndpointName = $val ---"
    set temp_val [string toupper $val]
    set temp_MTA_NAME [string toupper $MTA_NAME]
} {
    # IsEqual $temp_val "\<${temp_MTA_NAME}\>\/\<${MTA_IP}\>"
    IsEqual $temp_val "${temp_MTA_NAME}\/${MTA_IP}"
}

DoStep ${test_case}${step_num}_7 "Content verification pktcDevEvLogType" {
    # set val [SNMP_TABLE_GET $oid_pktcDevEvLogType $MTA_IP $index]
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogType.$index $MTA_IP all]
    LogMsg "--- Content verification pktcDevEvLogType = $val ---"
} {
    # Local
    # IsEqual $val 0
    #Syslog
    # IsEqual $val 1
    IsEqual $val "{D0 0 1 3 }"
    #Inform
    # IsEqual $val 3
}

DoStep ${test_case}${step_num}_8 "Content verification pktcDevEvLogTargetInfo" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogTargetInfo $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogTargetInfo = $val ---"
} {
    verify_signal "The pktcDevEvLogTargetInfo is $val, should be a list of actions taken"
}

DoStep ${test_case}${step_num}_9 "Content verification pktcDevEvLogCorrelationId" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogCorrelationId $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogCorrelationId = $val ---"
} {
    verify_signal "The pktcDevEvLogCorrelationId is $val, is this correct?"
}

DoStep ${test_case}${step_num}_10 "Content verification pktcDevEvLogAdditionalInfo" {
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogAdditionalInfo $MTA_IP $index]
    LogMsg "--- Content verification pktcDevEvLogAdditionalInfo = $val ---"
} {
    verify_signal "The pktcDevEvLogAdditionalInfo is $val, vendor specific info or blank"
}

# DoStep ${test_case}${step_num} "pktcDevEvLogIndex Content Verification" {
    # set index 0
    # set pc_event_text [list "Configuration File Error - Missing Parameter"]
    # set text_list [SNMP_TABLE_GET $oid_pktcDevEventDescrText $MTA_IP LIST 20]
    # foreach pctext $pc_event_text {
        # set search_index [lsearch $text_list $pctext]
        # if {$search_index == -1} {
            # LogMsg "ERROR: Unable to locate Provisioning Complete Log index value = $search_index"
            # set command FAIL_STEP
        # } else {set index [expr $search_index +1]}
    # }
# } {PASS_STEP}
# 
# DoStep ${test_case}${step_num}_4 "Content verification oid_pktcDevEventDescrFacility " {
    # set val [SNMP_TABLE_GET $oid_pktcDevEventDescrFacility  $MTA_IP $index]
    # LogMsg "--- Content verification oid_pktcDevEventDescrFacility  = $val ---"
# } {
    # IsEqual $val 16
# }
# 
# DoStep ${test_case}${step_num}_5 "Content verification oid_pktcDevEventDescrLevel " {
    # set val [SNMP_TABLE_GET $oid_pktcDevEventDescrLevel  $MTA_IP $index]
    # LogMsg "--- Content verification oid_pktcDevEventDescrLevel  = $val ---"
# } {
    # IsEqual $val 2
# }
# 
# DoStep ${test_case}${step_num}_6 "Content verification oid_pktcDevEventDescrReporting " {
    # set val [SNMP_TABLE_GET $oid_pktcDevEventDescrReporting.4000950904.4491  $MTA_IP all]
    # LogMsg "--- Content verification oid_pktcDevEventDescrReporting  = $val ---"
# } {
    # IsEqual $val "{D0 0 1 3 }"
# }
# 
# DoStep ${test_case}${step_num}_7 "Content verification oid_pktcDevEventDescrText " {
    # set val [SNMP_TABLE_GET $oid_pktcDevEventDescrText  $MTA_IP $index]
    # LogMsg "--- Content verification oid_pktcDevEventDescrText  = $val ---"
# } {
    # IsEqual $val "Configuration File Error - Missing Parameter"
# }

DoStep ${test_case}[incr step_num] "Stop sniffer" {
    LogMsg "--- Stop sniffer ---"
    StopCaptureControllerLan
    SaveToFileControllerLan "_Part_2"
} {PASS_STEP}

DoStep ${test_case}[incr step_num] "Configure Provisioning Server" {
    # PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 Secure_Flow_BasicCall_DigitMap.cfg
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 Device_Level_Secure.cfg
    PROV_DEPLOY_DHCP
} { PASS_STEP }


############### Reset CM and MTA and Verify Provisioning ################

DoStep ${test_case}[incr step_num] "Reset CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "--- Reset of CM and MTA has passed ---"
} {
    IsEqual $val 0
}

DoStep ${test_case}[incr step_num] "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
    # Get the OID from the MTA and check it using our previously defined
    set val [GetProvState 1 600]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 1"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 1
}

Cleanup



