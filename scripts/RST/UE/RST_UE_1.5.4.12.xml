<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)
	PCPCII-139 : Update the Voicetronix modifiers to use the new values. (ghassler 07/10/2009)




-->
<pc2xml version="$Revision: 8188 $" 
	name="RST-UE 1.5.4.12" 
	descrip="Proxy Transferred-To" 
	number="RST-UE 1.5.4.12" inspector="disable">
	
	<template file="./templates/Proxy_Transferred-To.xml" name="Core"/>
	
	<remove_from fsm="Core">
		<state ID="TransferConnected"/>
		<state ID="DUTRelease"/>
	</remove_from>
	
	<add_to fsm="Core">
		<state ID="TransferConnected" timer="20000">
			<prelude once="true">
				<send protocol="utility" msgtype="VerifyVoicePath2Way">
					<mod modtype="replace" hdr="from voiceport">
						<msg_ref type="platform">Platform.voiceport0</msg_ref>
					</mod>
					<mod modtype="replace" hdr="to voiceport">
						<msg_ref type="platform">Platform.voiceport2</msg_ref>
					</mod>
					<mod modtype="replace" hdr="voiceExpected">
						<expr>yes</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<!-- There is a chance that the last NOTIFY from the transferree to the
					transferor device may arrive after the ACK, so
					check for this first and pass it to UE1 if it arrives. -->
				<if>
					<or>
						<eq>
							<msg_ref type="utility">Response</msg_ref>
							<expr>VerifyVoicePath2WayComplete</expr>
						</eq>
						<eq>
							<msg_ref type="utility">Response</msg_ref>
							<expr>VerifyVoicePath2WayError</expr>
						</eq>
					</or>
					<then>
						<verify step="5" requirements="REQ13850, REQ14517">
							<eq>
								<msg_ref type="utility">Response</msg_ref>
								<expr>VerifyVoicePath2WayComplete</expr>
							</eq>
						</verify>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">NOTIFY.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="sip">Response.CSeq.method</msg_ref>
							<expr>NOTIFY</expr>
						</eq>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE0"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="event"/>
							<expr>TimerExpired</expr>
						</eq>
						<then>
							<!-- Hang up on DUT.-->
							<send protocol="utility" msgtype="OnHook">
								<mod modtype="replace" hdr="voiceport">
									<msg_ref type="platform">Platform.voiceport0</msg_ref>
								</mod>
							</send>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="TransferConnected" event="NOTIFY"/>
			<transition to="TransferConnected" event="xxx-NOTIFY"/>
			<transition to="TransferConnected" event="OnHookComplete"/>
			<transition to="TransferConnected" event="VerifyVoicePath2WayComplete"/>
			<transition to="TransferConnected" event="VerifyVoicePath2WayError"/>
			<transition to="TransferConnected" event="BYE"/>
			<transition to="UE2OnHook" event="200-BYE"/>
		</state>
		
		<!--  This is were things get tricky because the BYEs from
			UE2 to the DUT may happen at the same time as those of the 
			INVITE towards the DUT. Also the BYE for the second dialog
			may be initiated by the transferred-to device instead of the
			transferror. -->
		<state ID="DUTRelease">
			<prelude once="true">
				<var name="ack">
					<expr>false</expr>
				</var>
				<var name="ue2release">
					<expr>false</expr>
				</var>
				<var name="dutrelease">
					<expr>false</expr>
				</var>
			</prelude>
			<response>
				<if>
					<and>
						<eq>
							<msg_ref type="sip">BYE.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">BYE.Request-Line.username</msg_ref>
							<msg_ref type="platform">UE0.username</msg_ref>
						</eq>
					</and>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">BYE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">BYE.Request-Line.username</msg_ref>
								<msg_ref type="platform">UE2.username</msg_ref>
							</eq>
						</and>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">BYE.Request-Line.username</msg_ref>
								<msg_ref type="platform">UE1.username</msg_ref>
							</eq>
						<or>
							<eq>
								<msg_ref type="sip">BYE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">BYE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
						</or>
						</and>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">200-BYE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">481-BYE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
							<assign name="dutrelease">
								<expr>true</expr>
							</assign>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="sip">200-BYE.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<then>
							<proxy target="UE1"/>
							<assign name="ue2release">
								<expr>true</expr>
							</assign>
						</then>
					</elseif>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">200-BYE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE1.IP</msg_ref>
							</eq>
							<contains>
								<msg_ref type="sip" msg_instance="last">BYE.From.addr-spec</msg_ref>
								<msg_ref type="platform">UE2.username</msg_ref>
							</contains>
						</and>
						<then>
							<proxy target="UE2"/>
							<assign name="ue2release">
								<expr>true</expr>
							</assign>
						</then>
					</elseif>
					<elseif>
						<and>
							<or>
								<eq>
									<msg_ref type="sip">200-BYE.SourceAddress.IP</msg_ref>
									<msg_ref type="platform">UE1.IP</msg_ref>
								</eq>
								<eq>
									<msg_ref type="sip">481-BYE.SourceAddress.IP</msg_ref>
									<msg_ref type="platform">UE1.IP</msg_ref>
								</eq>
							</or>	
							<contains>
								<msg_ref type="sip" msg_instance="last">BYE.From.addr-spec</msg_ref>
								<msg_ref type="platform">UE0.username</msg_ref>
							</contains>
						</and>
						<then>
							<proxy target="UE0"/>
							<assign name="dutrelease">
								<expr>true</expr>
							</assign>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>NOTIFY</expr>
						</eq>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="sip">Response.CSeq.method</msg_ref>
							<expr>NOTIFY</expr>
						</eq>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="sip">Response.CSeq.method</msg_ref>
							<expr>REFER</expr>
						</eq>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>				
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE2.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE0"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>ACK</expr>
					</eq>
					<then>
						<assign name="ack">
							<expr>true</expr>
						</assign>
					</then>
				</if>
				<if>
					<and>
						<eq>
							<var_ref name="ack"/>
							<expr>true</expr>
						</eq>
					<and>
						<eq>
							<var_ref name="dutrelease"/>
							<expr>true</expr>
						</eq>
						<eq>
							<var_ref name="ue2release"/>
							<expr>true</expr>
						</eq>
					</and>
					</and>
					<then>
						<generate event="Branch1Event"/>
					</then>
				</if>	
			</response>
			<transition to="DUTRelease" event="OPTIONS"/>
			<transition to="DUTRelease" event="200-OPTIONS"/>
			<transition to="DUTRelease" event="PRACK"/>
			<transition to="DUTRelease" event="200-PRACK"/>
			<transition to="DUTRelease" event="UPDATE"/>
			<transition to="DUTRelease" event="200-UPDATE"/>
			<transition to="DUTRelease" event="xxx-INVITE"/>
			<transition to="DUTRelease" event="INVITE"/>
			<transition to="DUTRelease" event="BYE"/>
			<transition to="DUTRelease" event="200-BYE"/>
			<transition to="DUTRelease" event="481-BYE"/>
			<transition to="DUTRelease" event="NOTIFY"/>
			<transition to="DUTRelease" event="xxx-NOTIFY"/>
			<transition to="DUTRelease" event="xxx-REFER"/>
			<transition to="DUTRelease" event="ACK"/>
			<transition to="TransferConnected" event="Branch1Event"/>
		</state>
	</add_to>
</pc2xml>
