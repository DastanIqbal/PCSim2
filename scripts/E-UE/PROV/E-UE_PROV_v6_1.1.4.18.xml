<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)



-->
<!-- First are the document type and the attributes for our document -->
<pc2xml version="$Revision: 7768 $" name="EUE Prov 1.1.4.18" 
		descrip="Ability of eUE to Reject IPv6 Address Embedded in URL Without Square Brackets" 
		number="EUE Prov 1.1.4.18">

	<!-- Next we define the each of state machines -->
	<template file="./templates/EUE_Prov_B_1_1_1.xml" name="RebootCM"/>
	
	<add_to fsm="RebootCM">
		<transition from="StartCapture_RebootWait" to="VerifyProvState" event="TimerExpired"/>
	
		<state ID="VerifyProvState">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
					</mod>
					<mod modtype="replace" hdr="version">
						<expr>3</expr>
					</mod>
				</send>
				<stop_capture/>
			</prelude>
			<response>
				<verify step="2">
					<neq>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr>
					</neq>
				</verify>
				<verify step="3">
					<and>
						<null>
							<capture_ref type="dhcpv6" name="eUE_DHCPc6">Request.num</capture_ref>
						</null>
						<lt>
							<capture_ref type="dhcpv6" name="eUE_DHCPc6">Solicit.num</capture_ref>
							<capture_ref type="dhcpv6" name="eUE_DHCPc6" msg_instance="last">Solicit.num</capture_ref>
						</lt>
					</and>
				</verify>
			</response>
			<transition to="ConfigureTFTPURL" event="SNMPResp"/>
			<transition to="ConfigureTFTPURL" event="SNMPRespFailure"/>
		</state>
		
		<state ID="ConfigureTFTPURL" provFile="E-UE_PROV_v6_1.1.4.18_2.bin" 
				policyFile="MTAFORCW122_test" nextState="Reboot2"/>
		
		<state ID="Reboot2" timer="5000">
			<!-- First we need to power cycle the UE to conduct the test -->
			<prelude once="true" >
				<log promptUser="true"
				expr="Reconfigure both of the eUE DHCPv6 servers and eCM provisioning server in the following manner:\nBoth eUE servers are configured with proper sub-option 3 and 6 values in CL_OPTION_CCCV6(2171).\nThe first eUE DHCP server is that contained in sub-option 1 of the eCM DHCP server.\nThe second eUE DHCP server is that contained in sub-option 2 of the eCM DHCP server.\nThe first eUE DHCPv6 server is configured so that the eUE does not receive the ADVERTISE message.\nThe second eUE DHCPv6 server is configured so that the ADVERTISE is received by the eUE but the REPLY is not.\n"/>	
				<send protocol="utility" msgtype="SNMPSet">
					<mod modtype="add" hdr="array">
						<var_expr>
							<expr>varBind 1 1 3 \r\n ][ , </expr>
							<expr>DOCS-CABLE-DEVICE-MIB::docsDevResetNow.0,INTEGER,1][\r\n</expr>
						</var_expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.CM IP Address</msg_ref>
					</mod>
					<!-- Always use version 2 for a CM reset -->
					<mod modtype="replace" hdr="version">
						<expr>2c</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>SNMPRespFailure</expr>
					</eq>
					<then>
						<fail/>
					</then>
				</if>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
							<expr>0</expr>
						</eq>
						<eq>
							<msg_ref type="sip">REGISTER.Expires.value</msg_ref>
							<expr>0</expr>
						</eq>
					</or>
					<then>
						<send protocol="sip" msgtype="200-REGISTER"/>
					</then>
				</if>
			</response>
			<!-- Test cases deriving their functionality from this template
				should change the following transition to some local state -->
			<transition to="Reboot2" event="SNMPResp"/>
			<transition to="StartCapture_RebootWait2" event="TimerExpired"/>
			<transition to="END" event="SNMPRespFailure"/>
			<transition to="Reboot2" event="REGISTER"/>
		</state>
					
		<state ID="StartCapture_RebootWait2" timer="150000">
			<prelude once="true" >
				<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">DUT.IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.CM IP Address</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.DHCP Gateway IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.DHCP CM Gateway IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.KDC IP Address</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.TFTP Server IP</msg_ref>
						</var_expr>
					</filter>
				</start_capture>
			</prelude>
			<transition to="VerifyProvState2" event="TimerExpired"/>
		</state>
		
		<state ID="VerifyProvState2">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
					</mod>
					<mod modtype="replace" hdr="version">
						<expr>3</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="4">
					<eq>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr>
					</eq>
				</verify>
			</response>
			<transition to="END" event="SNMPResp"/>
			<transition to="END" event="SNMPRespFailure"/>
		</state>
	</add_to>
</pc2xml>
