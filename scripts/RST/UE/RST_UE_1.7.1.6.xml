<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	PCPCII-139 : Update the Voicetronix modifiers to use the new values. (ghassler 07/10/2009)




-->

<!-- First are the document type and the attributes for our document -->
<pc2xml version="$Revision: 8188 $" 
	name="RST-UE 1.7.1.6" 
	descrip="Auto Recall SUBSCRIBE and NOTIFY Procedures " 
	number="RST-UE 1.7.1.6">
	
	<template file="./templates/CallTermAtUETemp.xml" name="UE1"/>
	
	<remove_from fsm="UE1">
		<state ID="Setup" sub="prelude"/>
	</remove_from>
	
	<add_to fsm="UE1">
		<NE targets="*69"/>
		<state ID="Setup" sub="prelude">
			<log expr="Enable Caller ID display at the UE."/>
			<send protocol="sip" msgtype="Invite">
				<mod modtype="add" hdr="P-Asserted-Identity">
					<var_expr>
						<expr>&lt;</expr>
						<msg_ref type="platform">UE1.pui</msg_ref>
						<expr>&gt;</expr>
					</var_expr>
				</mod>
			</send>
		</state>
		<transition from="OnHook" to="EndCall1" event="OnHookComplete"/>
		
		<state ID="EndCall1" ES="true">
			<transition to="OffHook1" event="SessionTerminated"/>
		</state>
		
		<state ID="OffHook1">
			<prelude>
				<send protocol="utility" msgtype="OffHook"/>
			</prelude>
			<transition to="Setup1" event="OffHookComplete"/>
		</state>
		
		<state ID="Setup1">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<expr>*69</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="486-INVITE"/>
					</then>
				</if>
			</response>
			<transition to="Setup1" event="DialDigitsComplete"/>
			<transition to="Subscribe1" event="INVITE"/>
			
		</state>
		
		<state ID="Subscribe1">
			
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>SUBSCRIBE</expr>
					</eq>
					<then>
						<verify step="5" requirements="REQ13974, REQ13978, REQ13979">
							<contains>
								<msg_ref type="sip">SUBSCRIBE.Event</msg_ref>
								<expr>dialog</expr>
							</contains>
						</verify>
						<verify step="5" requirements="REQ13974, REQ13978, REQ13979">
							<eq>
								<msg_ref type="sip">SUBSCRIBE.Expires.value</msg_ref>
								<expr>30</expr>
							</eq>
						</verify>
						<verify step="5" requirements="REQ13974, REQ13978, REQ13979">
							<eq>
								<msg_ref type="sip">SUBSCRIBE.Request-Line.Request-URI</msg_ref>
								<msg_ref type="sip" msg_instance="last">INVITE.Request-Line.Request-URI</msg_ref>
							</eq>
						</verify>
						<send protocol="sip" msgtype="200-SUBSCRIBE"/>
						<send protocol="sip" msgtype="NOTIFY" subscribeType="dialog">
							<mod modtype="delete" hdr="dialog" body="dialog-info+xml"/>
						</send>
					</then>
				</if>
			</response>
			
			<transition to="Notification" event="SUBSCRIBE"/>
		</state>
		
		<state ID="Notification">
			<postlude>
				<log step="6" requirements="REQ13974, REQ13980" 
					promptUser="True" yesExpected="True" verify="True" 
					expr="Verify the UE plays a delayed processing announcement?"/>
			</postlude>
			<transition to="OnHook1" event="200-NOTIFY"/>
		</state>
		
		<state ID="OnHook1" timer="4000">
			<prelude once="true">
				<send protocol="utility" msgtype="OnHook"/>
				<log step="7" requirements="REQ13981, REQ13992, REQ13993, REQ13996" 
					promptUser="True" yesExpected="True" verify="True" 
					expr="Verify a special ring is played?"/>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="event"/>
							<expr>TimerExpired</expr>
						</eq>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>SUBSCRIBE</expr>
						</eq>
					</or>
					<then>
						<verify step="7" requirements="REQ13981, REQ13992, REQ13993, REQ13996">
							<or>
								<eq>
									<msg_ref type="event"/>
									<expr>TimerExpired</expr>
								</eq>
							<and>
								<neq>
									<msg_ref type="sip">Request</msg_ref>
									<expr>SUBSCRIBE</expr>
								</neq>
								<neq>
									<msg_ref type="sip">SUBSCRIBE.Expires.value</msg_ref>
									<expr>0</expr>
								</neq>
							</and>
							</or>
						</verify>
					</then>
				</if>
			</response>
			<postlude once="true">
				<log step="7" requirements="REQ13981, REQ13992, REQ13993, REQ13996" 
					promptUser="True" yesExpected="True" verify="True" 
					expr="Verify the targetâ€™s Caller ID of the target UE is displayed?"/>
			</postlude>
			<transition to="OnHook1" event="OnHookComplete"/>
			<transition to="SendNotify1" event="SUBSCRIBE"/>
			<transition to="SendNotify1" event="TimerExpired"/>
		</state>
		
		<state ID="SendNotify1">
			<prelude>
				<send protocol="sip" msgtype="NOTIFY">
					<mod modtype="delete" hdr="dialog" body="dialog-info+xml"/>
				</send>
			</prelude>
			<postlude>
				<log step="8" requirements="REQ13981, REQ13994" 
					promptUser="True" yesExpected="True" verify="True" 
					expr="Verify a special ring is played again after the period defined\nby the AR Special Ringing Retry Wait Interval has elapsed?"/>
			</postlude>
			<transition to="SendNotify2" event="200-NOTIFY"/>
		</state>
		
		<state ID="SendNotify2" timer="18000">
			<prelude once="true">
				<send protocol="sip" msgtype="NOTIFY">
					<mod modtype="delete" hdr="dialog" body="dialog-info+xml"/>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>SUBSCRIBE</expr>
					</eq>
					<then>
						<verify step="9" requirements="REQ13981, REQ13994">
							<eq>
								<msg_ref type="sip">SUBSCRIBE.Expires.value</msg_ref>
								<expr>0</expr>
							</eq>
						</verify>
					</then>
				</if>
			</response>
			<transition to="SendNotify2" event="200-NOTIFY"/>
			<transition to="Verify" event="SUBSCRIBE"/>
		</state>
				
		<state ID="Verify" timer="1000">
			
				
			<postlude>
				<log step="9" requirements="REQ13981, REQ13994" 
					promptUser="True" yesExpected="True" verify="True" 
					expr="Verify that the UE stops the special ringing?"/>
			</postlude>
			<transition to="END" event="TimerExpired"/>
			
		</state>
	</add_to>
</pc2xml>
