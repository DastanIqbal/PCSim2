<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	PCPCII-139 : Update the Voicetronix modifiers to use the new values. (ghassler 07/10/2009)




-->
<pc2xml version="$Revision: 8188 $" 
	name="RST-UE 1.5.5.1" 
	descrip="3 Way Conference - Controller" 
	number="RST-UE 1.5.5.1" inspector="disable">
	
	<template file="./templates/Proxy_3way_conf.xml" name="Core"/>
	
	<remove_from fsm="Core">
		<state ID="Mute"/>
		<state ID="Muted"/>
		<state ID="Unmute"/>
		<state ID="MediaResumed"/>
		<state ID="OnHook"/>
		<state ID="UE1Release"/>
	</remove_from>
	
	<add_to fsm="Core">
		<state ID="Mute">
			<prelude once="true">
				<send protocol="utility" msgtype="HookFlash"/>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>ACK</expr>
					</eq>
					<then>
						<send protocol="utility" msgtype="VerifyDialTone"/>
					</then>
					<elseif>
						<eq>
							<msg_ref type="utility">Response</msg_ref>
							<expr>VerifyDialToneComplete</expr>
						</eq>
						<then>
							<verify step="2" requirements="REQ13858, REQ13589">
								<eq>
									<msg_ref type="utility">Response</msg_ref>
									<expr>VerifyDialToneComplete</expr>
								</eq>
							</verify>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Mute" event="HookFlashComplete"/>
			<transition to="Muted" event="VerifyDialToneComplete"/>
			<transition to="Mute" event="REINVITE"/>
			<transition to="Mute" event="xxx-INVITE"/>
			<transition to="Mute" event="ACK"/>
		</state>
		
		<state ID="Muted" timer="5000">
			<prelude>
				<verify step="2" requirements="REQ13858, REQ13859">
					<eq>
						<msg_ref type="sip" msg_instance="last">Response.Status-Line.status-code</msg_ref>
						<expr>200</expr>
					</eq>
				</verify>
			</prelude>
			<transition to="SetupUE2" event="TimerExpired"/>
		</state>
		
		<state ID="Unmute" timer="10000">
			<prelude once="true">
				<verify step="3" requirements="REQ13860">
					<eq>
						<msg_ref type="sip" msg_instance="last">Response</msg_ref>
						<expr>200-INVITE</expr>
					</eq>
				</verify>
				<send protocol="utility" msgtype="HookFlash"/>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Unmute" event="HookFlashComplete"/>
			<transition to="Unmute" event="REINVITE"/>
			<transition to="Unmute" event="xxx-INVITE"/>
			<transition to="MediaResumed" event="ACK"/>
			<transition to="OnHook" event="TimerExpired"/>
		</state>
		
		<state ID="MediaResumed">
			<prelude>
				<send protocol="utility" msgtype="VerifyVoicePath2Way">
					<mod modtype="replace" hdr="from voiceport">
						<msg_ref type="platform">Platform.voiceport0</msg_ref>
					</mod>
					<mod modtype="replace" hdr="to voiceport">
						<msg_ref type="platform">Platform.voiceport1</msg_ref>
					</mod>
					<mod modtype="replace" hdr="voiceExpected">
						<expr>yes</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="4" requirements="REQ13863">
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>VerifyVoicePath2WayComplete</expr>
					</eq>
				</verify>
			</response>
			<transition to="DUTUE2Voice" event="VerifyVoicePath2WayComplete"/>
		</state>
		
		<state ID="DUTUE2Voice">
			<prelude>
				<send protocol="utility" msgtype="VerifyVoicePath2Way">
					<mod modtype="replace" hdr="from voiceport">
						<msg_ref type="platform">Platform.voiceport0</msg_ref>
					</mod>
					<mod modtype="replace" hdr="to voiceport">
						<msg_ref type="platform">Platform.voiceport2</msg_ref>
					</mod>
					<mod modtype="replace" hdr="voiceExpected">
						<expr>yes</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="4" requirements="REQ13863">
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>VerifyVoicePath2WayComplete</expr>
					</eq>
				</verify>
			</response>
			<transition to="UE1UE2Voice" event="VerifyVoicePath2WayComplete"/>
		</state>
		
		<state ID="UE1UE2Voice">
			<prelude>
				<send protocol="utility" msgtype="VerifyVoicePath2Way">
					<mod modtype="replace" hdr="from voiceport">
						<msg_ref type="platform">Platform.voiceport1</msg_ref>
					</mod>
					<mod modtype="replace" hdr="to voiceport">
						<msg_ref type="platform">Platform.voiceport2</msg_ref>
					</mod>
					<mod modtype="replace" hdr="voiceExpected">
						<expr>yes</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="4" requirements="REQ13863">
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>VerifyVoicePath2WayComplete</expr>
					</eq>
				</verify>
			</response>
			<transition to="OnHook" event="VerifyVoicePath2WayComplete"/>
		</state>
		
		<state ID="OnHook">
			<prelude>
				<send protocol="utility" msgtype="OnHook"/>
			</prelude>
			<transition to="Release" event="OnHookComplete"/>
		</state>
		
		<state ID="Release">
			<prelude once="true">
				<var name="UE1Done">
					<expr>false</expr>
				</var>
				<var name="UE2Done">
					<expr>false</expr>
				</var>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
						<msg_ref type="platform">UE2.IP</msg_ref>
					</eq>
					<then>
						<assign name="UE2Done">
							<expr>true</expr>
						</assign>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
							
						<then>
							<assign name="UE1Done">
								<expr>true</expr>
							</assign>
							<proxy target="UE0"/>
						</then>
					<!-- Next for retransmission purposes, we need to use the Call-ID to
						determine whom the target should be for the message -->
					</elseif>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">BYE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<contains>
								<msg_ref type="sip" msg_instance="last">BYE.Request-Line.Request-URI</msg_ref>
								<msg_ref type="platform">UE2.username</msg_ref>
							</contains>
						</and>
						<then>
							<verify step="5" requirements="REQ13871">
								<eq>
									<msg_ref type="sip">Request</msg_ref>
									<expr>BYE</expr>
								</eq>
							</verify>
							<proxy target="UE2"/>
						</then>
					</elseif>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">BYE.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<contains>
								<msg_ref type="sip" msg_instance="last">BYE.Request-Line.Request-URI</msg_ref>
								<msg_ref type="platform">UE1.username</msg_ref>
							</contains>
						</and>
						<then>
							<verify step="5" requirements="REQ13871">
								<eq>
									<msg_ref type="sip">Request</msg_ref>
									<expr>BYE</expr>
								</eq>
							</verify>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
				<if>
					<and>
						<eq>
							<var_ref name="UE1Done"/>
							<expr>true</expr>
						</eq>
						<eq>
							<var_ref name="UE2Done"/>
							<expr>true</expr>
						</eq>
					</and>
					<then>
						<generate event="Branch1Event"/>
					</then>
				</if>
			</response>
			<transition to="Release" event="Bye"/>
			<transition to="Release" event="200-Bye"/>
			<transition to="Release" event="OnHookComplete"/>
			<transition to="UE1OnHook" event="Branch1Event"/>
		</state>
		
		<state ID="UE1OnHook">
			<prelude>
				<send protocol="utility" msgtype="OnHook">
					<mod modtype="replace" hdr="voiceport">
						<msg_ref type="platform">Platform.voiceport1</msg_ref>
					</mod>
				</send>
			</prelude>
			<transition to="UE2OnHook" event="OnHookComplete"/>
		</state>
		
		<state ID="UE2OnHook">
			<prelude>
				<send protocol="utility" msgtype="OnHook">
					<mod modtype="replace" hdr="voiceport">
						<msg_ref type="platform">Platform.voiceport2</msg_ref>
					</mod>
				</send>
			</prelude>
			<transition to="END" event="OnHookComplete"/>
		</state>
	</add_to>
</pc2xml>
