<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	PCPCII-139 : Update the Voicetronix modifiers to use the new values. (ghassler 07/10/2009)




-->

<!-- First are the document type and the attributes for our document -->
<pc2xml version="$Revision: 8188 $" 
	name="Proxy 3 way conference" 
	descrip="Template for the 3 way conference call using real UEs " 
	number="1">

	<template file="./templates/Proxy_with_HF.xml" name="Proxy3WayConf"/>

	<remove_from fsm="Proxy3WayConf">
		<state ID="Unmute"/>
		<state ID="OnHook"/>
	</remove_from>
	
	<add_to fsm="Proxy3WayConf">
		
		<transition from="Muted" to="SetupUE2" event="TimerExpired"/>
		
		<state ID="SetupUE2">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE2.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="SetupUE2" event="DialDigitsComplete"/>
			<transition to="SetupUE2" event="INVITE"/>
			<transition to="AlertingUE2" event="CANCEL"/>
			<transition to="AlertingUE2" event="xxx-INVITE"/>
		</state>
		<!-- AlertingUE2 State -->
		<!-- The state machine will wait in the Setup state until it 
			 receives an Invite from the originating UE or the fail timeout occurs. -->
		<state ID="AlertingUE2" timer="12000">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
				</if>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>TimerExpired</expr>
					</eq>
					<then>
						<send protocol="utility" msgtype="OffHook">
							<mod modtype="replace" hdr="voiceport">
								<msg_ref type="platform">Platform.voiceport2</msg_ref>
							</mod>
						</send>
					</then>
				</if>
			</response>
			<transition to="AlertingUE2" event="INVITE"/>
			<transition to="AlertingUE2" event="OPTIONS"/>
			<transition to="AlertingUE2" event="200-OPTIONS"/>
			<transition to="AlertingUE2" event="PRACK"/>
			<transition to="AlertingUE2" event="200-PRACK"/>
			<transition to="AlertingUE2" event="UPDATE"/>
			<transition to="AlertingUE2" event="200-UPDATE"/>
			<transition to="AlertingUE2" event="xxx-INVITE"/>
			<transition to="AlertingUE2" event="OffHookComplete"/>
			<transition to="ConnectedUE2" event="ACK"/>
		</state>
		<!-- CONNECTED State -->
		<state ID="ConnectedUE2" timer="5000">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="ConnectedUE2" event="xxx-INVITE"/>
			<transition to="ConnectedUE2" event="ACK"/>
			<transition to="Unmute" event="TimerExpired"/>
		</state>
		
		<!-- ConfEst State -->
		<state ID="Unmute" timer="10000">
			<prelude once="true">
				<send protocol="utility" msgtype="HookFlash"/>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Unmute" event="HookFlashComplete"/>
			<transition to="Unmute" event="REINVITE"/>
			<transition to="Unmute" event="xxx-INVITE"/>
			<transition to="MediaResumed" event="ACK"/>
			<transition to="OnHook" event="TimerExpired"/>
		</state>
		
		<!-- OnHook State -->
		<state ID="OnHook">
			<prelude>
				<send protocol="utility" msgtype="OnHook">
					<mod modtype="replace" hdr="voiceport">
						<msg_ref type="platform">Platform.voiceport1</msg_ref>
					</mod>
				</send>
			</prelude>
			<transition to="UE1Release" event="OnHookComplete"/>
		</state>
		
		<!-- UE1RELEASE State -->
		<state ID="UE1Release">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<!-- Using the IP address for messages from UE1 and UE2 works.
					 	For traffic from the DUT we need to use the INVITE.Call-ID to
					 	determine whom the message is intended. -->
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="UE1Release" event="Bye"/>
			<transition to="DUTRelease" event="200-Bye"/>
			<transition to="UE1Release" event="OnHookComplete"/>
		</state>
		
		<!-- DUTRelease State -->
		<state ID="DUTRelease">
			<prelude once="true">
				<send protocol="utility" msgtype="OnHook"/>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
					<or>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					</or>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<!-- Next for retransmission purposes, we need to use the Call-ID to
						determine whom the target should be for the message -->
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">BYE.Call-ID</msg_ref>
								<msg_ref type="sip" msg_instance="prev">INVITE.Call-ID</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">200-BYE.Call-ID</msg_ref>
								<msg_ref type="sip" msg_instance="prev">INVITE.Call-ID</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">BYE.Call-ID</msg_ref>
								<msg_ref type="sip" msg_instance="first">INVITE.Call-ID</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">200-BYE.Call-ID</msg_ref>
								<msg_ref type="sip" msg_instance="first">INVITE.Call-ID</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="DUTRelease" event="Bye"/>
			<transition to="OnHookUE2" event="200-Bye"/>
			<transition to="DUTRelease" event="OnHookComplete"/>
		</state>
			
		<state ID="OnHookUE2">
			<prelude once="true">
				<send protocol="utility" msgtype="OnHook">
					<mod modtype="replace" hdr="voiceport">
						<msg_ref type="platform">Platform.voiceport2</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
					<or>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE2.IP</msg_ref>
						</eq>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					</or>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<!-- Next for retransmission purposes, we need to use the Call-ID to
						determine whom the target should be for the message -->
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">BYE.Call-ID</msg_ref>
								<msg_ref type="sip" msg_instance="prev">INVITE.Call-ID</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">200-BYE.Call-ID</msg_ref>
								<msg_ref type="sip" msg_instance="prev">INVITE.Call-ID</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE2"/>
						</then>
					</elseif>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">BYE.Call-ID</msg_ref>
								<msg_ref type="sip" msg_instance="first">INVITE.Call-ID</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">200-BYE.Call-ID</msg_ref>
								<msg_ref type="sip" msg_instance="first">INVITE.Call-ID</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="OnHookUE2" event="Bye"/>
			<transition to="END" event="200-Bye"/>
			<transition to="END" event="OnHookComplete"/>
		</state>
			
	</add_to>
</pc2xml>
