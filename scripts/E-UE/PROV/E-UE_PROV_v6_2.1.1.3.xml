<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################
 Change History: (Author & Date)
-->
<pc2xml version="$Revision: 7768 $"
        name="EUE Prov 2.1.1.3"
        descrip="E-UE does not differentiate between hard and soft reset
                 when device is provisioned in secure mode.
                 Proper storage or clearing of provisioning ticket in NVRAM validated."
        number="EUE Prov 2.1.1.3">

    <template file="./templates/EUE_Prov_B_1_1_1.xml" name="KDCTicketClear"/>

    <add_to fsm="KDCTicketClear">
        <transition from="StartCapture_RebootWait" to="EDVAProvisions1" event="TimerExpired"/>


        <!-- 1576.5 E-MTA DUT reports provisioning PASS code (1) to provisioning service (SNMP Entity). -->
        <state ID="EDVAProvisions1">
            <prelude once="true">
                <stop_capture/>
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="2">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="HardReboot" event="SNMPResp"/>
        </state>
		<!-- Step 3: Hard reboot -->
		
		<state ID="HardReboot">
			<prelude>
				<log promptUser="true" expr="Click OK and immediately hard reboot the device."/>
				<generate event="Branch1Event"/>
				<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">DUT.IP</msg_ref>
						</var_expr>
					</filter>
				</start_capture>
			</prelude>
			<transition to="EDVAProvisions2" event="Branch1Event"/>
		</state>

		<state ID="EDVAProvisions2">
            <prelude once="true">
                <sleep time="120000"/>
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="4">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="ClearKRB1" event="SNMPResp"/>
        </state>
		
        <state ID="ClearKRB1">
            <prelude>
                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
							<!-- invalidateProvOnReboot(0), invalidateAllCmsOnReboot(1) -->
                            <expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetKrbTickets.0,BITS,1][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
				<if>
                    <eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPRespFailure</expr>
                    </eq>
                    <then>
                        <verify step="6">
							<pass/>
						</verify>
                    </then>
                </if>
				<if>
					<eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPResp</expr>
                    </eq>
                    <then>
						<verify step="9">
							<contains>
								<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
								<expr>1</expr>
							</contains>
						</verify>
                    </then>			
				</if>
            </response>
            <transition to="TicketStored" event="SNMPResp"/>
            <transition to="TicketNotStored" event="SNMPRespFailure"/>
        </state>
		
		<state ID="TicketNotStored">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetKrbTickets.0,BITS,0</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="7">
						<eq>
							<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
							<expr>00</expr>
						</eq>
				</verify>
			</response>
			<transition to="END" event="SNMPResp"/>
			<transition to="END" event="SNMPRespFailure"/>		
		</state>
		
		<state ID="TicketStored">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetKrbTickets.0,BITS,0</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="10">
						<eq>
							<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
							<expr>C0</expr>
						</eq>
				</verify>
			</response>
			<transition to="HardReboot_2" event="SNMPResp"/>
			<transition to="END" event="SNMPRespFailure"/>	
		</state>

        <!-- Step 11 Hard reboot 2nd time. -->
		
		<state ID="HardReboot_2">
			<prelude>
				<stop_capture/>
				<log promptUser="true" expr="Click OK and immediately hard reboot the device again."/>
				<generate event="Branch1Event"/>
				<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">DUT.IP</msg_ref>
						</var_expr>
					</filter>
				</start_capture>
			</prelude>
			<transition to="EDVAProvisions3" event="Branch1Event"/>
		</state>

        <!-- 1576.8 E-MTA DUT reports provisioning PASS code (1) to provisioning service (SNMP Entity). -->
        <state ID="EDVAProvisions3">
            <prelude once="true">
				<sleep time="120000"/>
                <stop_capture/>
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="12">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="VerifyASRequest1" event="SNMPResp"/>
        </state>


        <!-- 1576.9 Verify that MTA sent an AS Request to KDC (for Provisioning server ticket). -->
        <state ID="VerifyASRequest1">
            <prelude once="true">
                <stop_capture/>

                <parse_capture name="eUE_Prov">
                    <parser_filter protocol="kerberos" ip="DUT.IP"/>
                </parse_capture>

                <verify step="13">
                    <null>
                        <capture_ref type="kerberos" name="eUE_Prov">AS-REQ.num</capture_ref>
                    </null>
                </verify>
                <generate event="SucceedEvent"/>
            </prelude>
            <transition to="SoftReset_1" event="SucceedEvent"/>
        </state>


        <!-- 1576.10 Soft Reset E-MTA. -->
        <state ID="SoftReset_1" timer="90000">
            <prelude once="true">
                <start_capture>
                    <filter>
                        <var_expr>
                            <expr>host </expr>
                            <msg_ref type="platform">DUT.IP</msg_ref>
                        </var_expr>
                    </filter>
                </start_capture>

                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetNow.0,INTEGER,1][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP Address</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
                <if>
                    <eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPRespFailure</expr>
                    </eq>
                    <then>
                        <fail/>
                    </then>
                </if>
                <if>
                    <or>
                        <eq>
                            <msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
                            <expr>0</expr>
                        </eq>
                        <eq>
                            <msg_ref type="sip">REGISTER.Expires.value</msg_ref>
                            <expr>0</expr>
                        </eq>
                    </or>
                    <then>
                        <send protocol="sip" msgtype="200-REGISTER"/>
                    </then>
                </if>
            </response>
            <transition to="EDVAProvisions4" event="TimerExpired"/>
            <transition to="SoftReset_1" event="SNMPResp"/>
            <transition to="SoftReset_1" event="REGISTER"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>


        <!-- 1576.11 E-MTA DUT reports provisioning PASS code (1) to provisioning service (SNMP Entity). -->
        <state ID="EDVAProvisions4">
            <prelude once="true">
                <stop_capture/>
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="15">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="VerifyASRequest2" event="SNMPResp"/>
        </state>


        <!-- Step 16: Verify MTA did not send AS Request to KDC. -->
        <state ID="VerifyASRequest2">
            <prelude once="true">
                <stop_capture/>

                <parse_capture name="eUE_Prov_2">
                    <parser_filter protocol="kerberos" ip="DUT.IP"/>
                </parse_capture>

                <verify step="16">
                    <null>
                        <capture_ref type="kerberos" name="eUE_Prov_2">AS-REQ.num</capture_ref>
                    </null>
                </verify>
                <generate event="SucceedEvent"/>
            </prelude>
            <transition to="ClearKRB2" event="SucceedEvent"/>
        </state>

		<state ID="ClearKRB2">
            <prelude>
                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
							<!-- invalidateProvOnReboot(0), invalidateAllCmsOnReboot(1) -->
                            <expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetKrbTickets.0,BITS,0][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
				<if>
					<eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPResp</expr>
                    </eq>
                    <then>
						<verify step="17">
							<contains>
								<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
								<expr>1</expr>
							</contains>
						</verify>
                    </then>			
				</if>
            </response>
            <transition to="CheckTicket" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>
		
		<state ID="CheckTicket">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetKrbTickets.0,BITS,0</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="18">
						<eq>
							<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
							<expr>00</expr>
						</eq>
				</verify>
			</response>
			<transition to="SoftReset_2" event="SNMPResp"/>
			<transition to="END" event="SNMPRespFailure"/>	
		</state>

		<!-- Step 19: 2nd Soft Reset -->
        <state ID="SoftReset_2" timer="90000">
            <prelude once="true">
                <start_capture>
                    <filter>
                        <var_expr>
                            <expr>host </expr>
                            <msg_ref type="platform">DUT.IP</msg_ref>
                        </var_expr>
                    </filter>
                </start_capture>

                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetNow.0,INTEGER,1][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP Address</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
                <if>
                    <eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPRespFailure</expr>
                    </eq>
                    <then>
                        <fail/>
                    </then>
                </if>
                <if>
                    <or>
                        <eq>
                            <msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
                            <expr>0</expr>
                        </eq>
                        <eq>
                            <msg_ref type="sip">REGISTER.Expires.value</msg_ref>
                            <expr>0</expr>
                        </eq>
                    </or>
                    <then>
                        <send protocol="sip" msgtype="200-REGISTER"/>
                    </then>
                </if>
            </response>
            <transition to="EDVAProvisions5" event="TimerExpired"/>
            <transition to="SoftReset_2" event="SNMPResp"/>
            <transition to="SoftReset_2" event="REGISTER"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>


        <!-- 1577.5 E-MTA DUT reports provisioning PASS code (1) to provisioning service (SNMP Entity). -->
        <state ID="EDVAProvisions5">
            <prelude once="true">
                <stop_capture/>
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="20">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="VerifyASRequest3" event="SNMPResp"/>
        </state>
		
		<state ID="VerifyASRequest3">
            <prelude once="true">
                <stop_capture/>

                <parse_capture name="eUE_Prov_3">
                    <parser_filter protocol="kerberos" ip="DUT.IP"/>
                </parse_capture>

                <verify step="21">
                    <notnull>
                        <capture_ref type="kerberos" name="eUE_Prov_3">AS-REQ.num</capture_ref>
                    </notnull>
                </verify>
                <generate event="SucceedEvent"/>
            </prelude>
            <transition to="HardReboot_3" event="SucceedEvent"/>
        </state>
		
		<state ID="HardReboot_3">
			<prelude>
				<log promptUser="true" expr="Click OK and immediately hard reboot the device one more time."/>
				<generate event="Branch1Event"/>
				<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">DUT.IP</msg_ref>
						</var_expr>
					</filter>
				</start_capture>
			</prelude>
			<transition to="EDVAProvisions6" event="Branch1Event"/>
		</state>

		<state ID="EDVAProvisions6">
            <prelude once="true">
				<sleep time="120000"/>
                <stop_capture/>
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="23">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="VerifyASRequest4" event="SNMPResp"/>
        </state>

        <!-- 1577.9 Verify that MTA sent an AS Request to KDC. -->
        <state ID="VerifyASRequest4">
            <prelude once="true">
                <stop_capture/>

                <parse_capture name="eUE_Prov_4">
                    <parser_filter protocol="kerberos" ip="DUT.IP"/>
                </parse_capture>

                <verify step="24">
                    <notnull>
                        <capture_ref type="kerberos" name="eUE_Prov_4">AS-REQ.num</capture_ref>
                    </notnull>
                </verify>
                <generate event="SucceedEvent"/>
            </prelude>
            <transition to="END" event="SucceedEvent"/>
        </state>
    </add_to>
</pc2xml>
