<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	PCPCIIAPPSATP-96 : Update the requirement numbers being test in this script for D09. (ghassler 01/12/2010)




-->

<!-- First are the document type and the attributes for our document -->
<pc2xml version="$Revision: 8188 $" name="RST-EDVA 3.5.1"
	descrip="E-DVA Support of- Active Monitoring, Packet Reflector"
	number="RST-EDVA 3.5.1">
	
	<template file="./templates/CallTermAtUETemp.xml" name="UE1" />
	
	<remove_from fsm="UE1">
		<state ID="Setup" sub="prelude" />
		<state ID="Connected" />
	</remove_from>
	
	<add_to fsm="UE1">
		<state ID="Setup" sub="prelude">
			<start_capture>
				<filter>
					<var_expr>
						<expr>host </expr>
						<msg_ref type="platform">UE0.IP</msg_ref>
						<expr> || host </expr>
						<msg_ref type="platform">Platform.STUN IP Address</msg_ref>
					</var_expr>
				</filter>
			</start_capture>
			<send protocol="sip" msgtype="Invite">
				<mod modtype="delete" hdr="mode"/>
				<mod modtype="add" hdr="Require" param="option-tag">
					<expr>answermode</expr>
				</mod>
				<mod modtype="add" hdr="Answer-Mode">
					<expr>auto;require</expr>
				</mod>
				<mod modtype="replace" hdr="audio" param="payload-type">
					<expr>112</expr>
				</mod>
				<mod modtype="delete" hdr="rtpmap"/>
				<mod modtype="add" hdr="SDP">
					<expr>a=loopback:rtp-pkt-loopback\r\na=loopback-source:0\r\na=rtpmap:112 rtploopback/8000</expr>
				</mod>
			</send>
		</state>
		
		<state ID="Connected" timer="3000">
			<prelude once="true">
				<send protocol="sip" msgtype="ACK" />
			</prelude>
			<response>
				<if>
					<and>
						<eq>
							<msg_ref type="event"/>
							<expr>DIALOG_CONFIRMED_UAC</expr>
						</eq>
						<contains>
							<msg_ref type="sip" msg_instance="last">18x-Invite.SDP</msg_ref>
							<expr>m=audio</expr>
						</contains>
					</and>
					<then>
						<var name="answer">
							<msg_ref type="sip" msg_instance="last">18x-Invite</msg_ref>
						</var>
					</then>
					<elseif>
						<and>
							<eq>
								<msg_ref type="event"/>
								<expr>DIALOG_CONFIRMED_UAC</expr>
							</eq>
							<contains>
								<msg_ref type="sip" msg_instance="last">200-UPDATE.SDP</msg_ref>
								<expr>m=audio</expr>
							</contains>
						</and>
						<then>
							<var name="answer">
								<msg_ref type="sip" msg_instance="last">200-UPDATE</msg_ref>
							</var>
						</then>
					</elseif>
					<elseif>
						<and>
							<eq>
								<msg_ref type="event"/>
								<expr>DIALOG_CONFIRMED_UAC</expr>
							</eq>
							<contains>
								<msg_ref type="sip" msg_instance="last">200-Invite.SDP</msg_ref>
								<expr>m=audio</expr>
							</contains>
						</and>
						<then>
							<var name="answer">
								<msg_ref type="sip" msg_instance="last">200-INVITE</msg_ref>
							</var>
						</then>
					</elseif>
					
				</if>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>DIALOG_CONFIRMED_UAC</expr>
					</eq>
					<then>
						<var name="audioPort">
							<var_ref name="answer" protocol="sdp" hdr="audio" param="port"/>
						</var>
						<start_stream name="vm" file="../config/tones/voice20.rtp" format="G711-20">
							<to>
								<ip>
									<var_ref name="answer" protocol="sdp" hdr="c" param="address"/>
								</ip>
								<port>
									<var_ref name="audioPort"/>
								</port>
							</to>
							<from>
								<ip>
									<msg_ref type="platform">Platform.STUN IP Address</msg_ref>
								</ip>
								<port>
									<msg_ref type="platform">Platform.RTP Port1</msg_ref>
								</port>
							</from>
						</start_stream>
						
						<var name="audio">
							<var_expr>
								<expr>m=audio </expr>
								<var_ref name="audioPort"/>
								<expr> RTP/AVP 112</expr>
							</var_expr>
						</var>
						<verify step="2"
							requirements="REQ14691, REQ14692, REQ14693, REQ14730, REQ14731, REQ14732, REQ14733, REQ14734, REQ14736, REQ22455, REQ22456, REQ22458">
							<contains>
								<var_ref name="answer" protocol="sdp" hdr="audio" param="payload-type"/>
								<expr>112</expr>
							</contains>
						
						</verify>

						<verify step="2"
							requirements="REQ14691, REQ14692, REQ14693, REQ14730, REQ14731, REQ14732, REQ14733, REQ14734, REQ14736, REQ22455, REQ22456, REQ22458">
							<neq>
								<var_ref name="answer" protocol="sdp" hdr="audio" param="port"/>
								<expr>0</expr>
							</neq>
						</verify>

						<verify step="2"
							requirements="REQ14691, REQ14692, REQ14693, REQ14730, REQ14731, REQ14732, REQ14733, REQ14734, REQ14736, REQ22455, REQ22456, REQ22458">
							<contains>
								<var_ref name="answer" protocol="sip" hdr="SDP"/>
								<expr>a=loopback:rtp-pkt-loopback</expr>
							</contains>
						</verify>
						
						<verify step="2"
							requirements="REQ14691, REQ14692, REQ14693, REQ14730, REQ14731, REQ14732, REQ14733, REQ14734, REQ14736, REQ22455, REQ22456, REQ22458">
							<contains>
								<var_ref name="answer" protocol="sip" hdr="SDP"/>
								<expr>a=loopback-mirror:0</expr>
							</contains>
						</verify>

						<verify step="2"
							requirements="REQ14691, REQ14692, REQ14693, REQ14730, REQ14731, REQ14732, REQ14733, REQ14734, REQ14736, REQ22455, REQ22456, REQ22458">
							<contains>
								<var_ref name="answer" protocol="sip" hdr="SDP"/>
								<var_ref name="audio"/>
							</contains>
						</verify>
						<verify step="2"
							requirements="REQ14691, REQ14692, REQ14693, REQ14730, REQ14731, REQ14732, REQ14733, REQ14734, REQ14736, REQ22455, REQ22456, REQ22458">
							<contains>
								<var_ref name="answer" protocol="sip" hdr="SDP"/>
								<expr>a=rtpmap:112 rtploopback/8000</expr>
							</contains>
						</verify>
						<stop_capture/>
						<log step="2" promptUser="true" verify="true"
							requirements="REQ14691, REQ14692, REQ14693, REQ14730, REQ14731, REQ14732, REQ14733, REQ14734, REQ14736, REQ22455, REQ22456, REQ22458"
							expr="Is the device sending RTP approximately every 20 milliseconds?"/>
						<log step="2" promptUser="true" verify="true"
							requirements="REQ14691, REQ14692, REQ14693, REQ14730, REQ14731, REQ14732, REQ14733, REQ14734, REQ14736, REQ22455, REQ22456, REQ22458"
							expr="Is the payload type for the RTP packets coming from the DUT\nset to the value 112?"/>
					</then>
				</if>
			</response>
			<transition to="Connected" event="OffHookComplete"/>
			<transition to="Releasing" event="TimerExpired" />
		</state>
		<transition from="Releasing" to="END" event="200-BYE"/>
	</add_to>
</pc2xml>
