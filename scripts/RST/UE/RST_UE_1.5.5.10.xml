<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	PCPCII-139 : Update the Voicetronix modifiers to use the new values. (ghassler 07/10/2009)




-->
<pc2xml version="$Revision: 8188 $" 
	name="RST-UE 1.5.5.10" 
	descrip="3 Way Conference – Hang-up before Third-Party PSAP answers " 
	number="RST-UE 1.5.5.10" inspector="disable">
	
	<template file="./templates/Call_Transfer_Transferor.xml"/>
	
	<remove_from fsm="UE1 Calls DUT">
		<state ID="UE1Wait"/>
	</remove_from>
	
	<remove_from fsm="UE2 Calls DUT">
		<state ID="UE2Alerting"/>
		<state ID="UE2Answer"/>
		<state ID="UE2Connected"/>
		<state ID="UE2EndDialog"/>
		<state ID="UE2DUTHangUp"/>
	</remove_from>
	
	<add_to fsm="UE1 Calls DUT">
		<state ID="UE1Wait">
			<prelude>
				<!-- Step 3 test case 1.5.4.10 SIP -On DUT (UE-B Controller) 
					dial an emergency call to UE-C (Third-Party) by dialing 911 
					as per step 1 [UE Originating Case Flow] up to reference 
					point ALERTING_UAS [UE Originating Case Reference Points]. -->
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<expr>911</expr>
					</mod>
				</send>
			</prelude>
			<transition to="WaitPSAPCancel" event="DialDigitsComplete"/>
		</state>
		
		<state ID="WaitPSAPCancel">
			<transition to="VerifyRing" event="Branch1Event"/>
		</state>
		
		<state ID="VerifyRing">
			<prelude>
				<send protocol="utility" msgtype="VerifyRing"/>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>VerifyRingComplete</expr>
					</eq>
					<then>
						<verify step="4" requirements="REQ13877">
							<eq>
								<msg_ref type="utility">Response</msg_ref>
								<expr>VerifyRingComplete</expr>
							</eq>
						</verify>
					</then>
				</if>
			</response>
			<transition to="END" event="VerifyRingComplete"/>
		</state>
	</add_to>
	
	<add_to fsm="UE2 Calls DUT">
		<NE targets="service:sos"/>
		<!-- NOTE: This is were all of the optional message processing before the 
           session is complete will occur during an originate test call. -->
		<state ID="UE2Alerting">
			<response>
				<!-- Now test to see if the incoming message is a PRACK message because
							 the system is using reliability -->
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PRACK</expr>
						</eq>
						<contains>
							<msg_ref type="sip" msg_instance="last" hdr_instance="any">18x-Invite.Require</msg_ref>
							<expr>100rel</expr>
						</contains>
					</and>
					<then>
						<!--Reliability required for test sending 200-Prack message to peer.-->
						<send protocol="sip" msgtype="200-PRACK"/>
					</then>
				</if>
				<!-- Now test for an UPDATE message -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required or supported sending 200-Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
				<!-- Test whether to send 180 -->
				<if>
					<and>
						<contains>
							<msg_ref type="sip" msg_instance="last">18x-Invite.Status-Line.status-code</msg_ref>
							<expr>183</expr>
						</contains>
						<eq>
							<msg_ref type="sdp">Request.qos-curr-remote.direction</msg_ref>
							<msg_ref type="sdp">Request.qos-des-remote.direction</msg_ref>
						</eq>
					</and>
					<then>
						<!--Sending 180 for required preconditions.-->
						<send protocol="sip" msgtype="180-Invite"/>
					</then>
				</if>
			</response>
			<transition to="UE2Alerting" event="PRACK"/>
			<transition to="UE2Alerting" event="UPDATE"/>
			<transition to="UE2DUTHangUp" event="ALERTING_UAS"/>
		</state>
		
		<state ID="UE2DUTHangUp">
			<prelude>
				<!-- Step 4 test case 1.5.4.10 SIP -Hang-up on DUT (UE-B, Controller).. -->
				<send protocol="utility" msgtype="OnHook"/>
			</prelude>
			<transition to="UE2ReceiveCancel" event="OnHookComplete"/>
		</state>
		
		<state ID="UE2ReceiveCancel">
			<!-- Transitions for UE2ReceiveCancel state -->
			<!-- Step 4  - 1.5.4.10 test case SIP -Verify that the controller’s 
				UE terminates the call with the third party PSAP by sending a CANCEL.
				The controller’s UE applies ringing to alert the controller. -->
			<transition to="EndPSAPCall" event="CANCEL"/>
		</state>
		
		<state ID="EndPSAPCall" ES="true" onHookOK="true">
			<prelude>
				<send protocol="sip" msgtype="200-CANCEL"/>
				<generate event="Branch1Event" fsm="UE1 Calls DUT"/>
			</prelude>
		</state>
	</add_to>
</pc2xml>
