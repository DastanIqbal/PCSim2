<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)



-->
<!-- First are the document type and the attributes for our document -->
<pc2xml version="$Revision: 7768 $" name="EUE Prov 1.1.2.1" 
		descrip="Configuration of Different Data and Other IP Service Providers on Different Subnets" 
		number="EUE Prov 1.1.2.1">

	<!-- Next we define the each of state machines -->
	<template file="./templates/EUE_Prov_B_1_1_1.xml" name="RebootCM"/>
	
	<add_to fsm="RebootCM">
		<transition from="StartCapture_RebootWait" to="VerifyProvState" event="TimerExpired"/>
		<!--<transition from="StartCapture_RebootWait" to="VerifyProvState" event="SucceedEvent"/>-->
		
		<state ID="VerifyProvState">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
					</mod>
					<mod modtype="replace" hdr="version">
						<expr>3</expr>
					</mod>
				</send>
				<stop_capture/>
				<parse_capture name="eCM_DHCPc6">
					<parser_filter protocol="dhcpv6" clientMAC="DUT.CM MAC Address"/>
				</parse_capture>
				<parse_capture name="eUE_DHCPc6">
					<parser_filter protocol="dhcpv6" clientMAC="DUT.MAC Address"/>
				</parse_capture>
				<parse_capture name="eUE_Prov">
					<parser_filter ip="DUT.IP"/>
				</parse_capture>
			</prelude>
			<response>
				<verify step="2">
					<contains>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr>
					</contains>
				</verify>
				<verify step="3">
					<and>
						<eq>
							<capture_ref type="dhcpv6" name="eUE_DHCPc6">Request.ipv6.dst_host.show</capture_ref>
							<msg_ref type="platform">DUT.DHCP Server IP</msg_ref>
						</eq>
					<!--and-->
						<eq>
							<capture_ref type="dhcpv6" name="eUE_DHCPc6">Request.ipv6.dst_host.show</capture_ref>
							<msg_ref type="platform">DUT.DHCP Server IP</msg_ref>
						</eq>
						<!--neq>
							<capture_ref type="dhcpv6" name="eUE_DHCPc6">Request.ipv6.dst_host.show</capture_ref>
							<capture_ref type="dhcpv6" name="eCM_DHCPc6">Request.ipv6.dst_host.show</capture_ref>
						</neq>
					</and-->
					</and>
				</verify>
				<verify step="3">
					<or>
						<eq>
							<capture_ref type="snmp" name="eUE_Prov" msg_instance="last">Inform Request.msgData.plaintext.data.informRequest.variable_bindings.1-3-6-1-2-1-140-1-1-8-0.int.show</capture_ref>
							<expr>1</expr>
						</eq>
						<eq>
							<capture_ref type="snmp" name="eUE_Prov" msg_instance="last">Inform Request.RFC1213-MIB::mib-2-140-1-1-8-0.int.show</capture_ref>
							<expr>1</expr>
						</eq>
					</or>
				</verify>
			</response>
			<transition to="VerifyCM" event="SNMPResp"/>
			<transition to="VerifyCM" event="SNMPRespFailure"/>
		</state>
		
		<state ID="VerifyCM">
			<prelude>
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>RFC1213-MIB::sysUpTime.0</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.CM IP Address</msg_ref>
					</mod>
					<mod modtype="replace" hdr="version">
						<expr>2c</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="3">
					<notnull>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
					</notnull>
				</verify>
			</response>
			<transition to="VerifyEDVA" event="SNMPResp"/>
			<transition to="VerifyEDVA" event="SNMPRespFailure"/>
		</state>
		
		<state ID="VerifyEDVA">
			<prelude>
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>RFC1213-MIB::sysUpTime.0</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="3">
					<notnull>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
					</notnull>
				</verify>
			</response>
			<transition to="END" event="SNMPResp"/>
			<transition to="END" event="SNMPRespFailure"/>
		</state>
	</add_to>
</pc2xml>
