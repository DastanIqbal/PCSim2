################################################################################
#// Filename: E-UE-PROV_1-1-3-14.test
#// Author: Matt Forbes
#// Creation Date: 
#//     TC940 TEST CASE E-UE-PROV 1.1-3-14
#//
#// Objective:
#//     Ability of the MTA to reject service providers SNMP Entity when it is not an FQDN
#// 
#//
#// PacketCable DUT:
#//     MTA
#//
#// Test Steps:
#//     - Initial configuration
#//     - Start IP capture, start sniffer   
#//     - Reset DUT
#//     - Stop sniffer
#//     - The MTA should fail to provision, and reject the DHCP offer.
#//        (MTA 3 and subsequent steps should not occur)
#//
#// Notes:
#//     - Requires provPrimitives.tcl & tftp_primitives.tcl.
#//     - Requires the specific config file in $BASE_CFG_FILE_PATH in Provisioning Server.
#//     - Requires parT.tcl parsing tool to parse data from capture file.
#//
################################################################################

global SCRIPT_VERSION
set SCRIPT_VERSION { # $Id: E-UE-PROV_1-1-3-14.test 7406 2010-07-20 17:17:37Z dthakore $ }

################################################################################
   
DoStep "E-UE-PROV_1-1-3-14_1-1" "Initial configuration" {
    LogMsg "--- Initial PROV module ---"
    Init_PROV
    # ProvCreateConfig 291 $MTA_MAC
} { PASS_STEP }
    

DoStep "E-UE-PROV_1-1-3-14_2-1" "Configure Provisioning Server" {
    LogMsg "Configure Provisioning Server"
    # verify_signal "Configure Provisioning Server so that DHCP option122, sub-option 3 \
            # is an IP address (not 0.0.0.0) instead of an FQDN (MTATC940)"
    PROV_MODIFY_DEVICE $MTA_MAC MTATC940 Device_Level_Secure.cfg
    PROV_DEPLOY_DHCP
} {PASS_STEP}
    
DoStep "E-UE-PROV_1-1-3-14_3-1" "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP || udp port 67 || host $CM_IP"
    StartCaptureControllerLan
} {PASS_STEP}
    
DoStep "E-UE-PROV_1-1-3-14_4-1" "Reset CM and MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "Reset of CM and MTA has passed"
} {
    IsEqual $val 0
}
    
DoStep "E-UE-PROV_1-1-3-14_5-1" "CM/MTA reboot" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
} {PASS_STEP}
    
    DoStep "E-UE-PROV_1-1-3-14_5-2" "Stop sniffer" {
        LogMsg "--- Stop sniffer ---"
        StopCaptureControllerLan
        SaveToFileControllerLan
} { PASS_STEP }
    

########################## INVOKE PARSING TOOL ##################################

DoStep "E-UE-PROV_1-1-3-14_6-1" "Analyze flow data" {
    # Initialize PARSING TOOL
    Init_PART
    
    # Set up parser file
    set PARSERFILE    $ETH_DEFAULT_TXT_FILE
} { PASS_STEP }

DoStep "E-UE-PROV_1-1-3-14_6-2" "Parse all data into database" {
    # Parse data
    set PARAMS_DHCP         "{DHCP {} {} {} {} {} {} {} {}}"
    set PARAMS_MTA_SRC      "{{} {} {} {} $MTA_IP {} {} {} {}}"
    set PARAMS_MTA_DST      "{{} {} {} {} {} {} {} $MTA_IP {}}"
    set msgID_MTA           [ParseFile $PARSERFILE "$PARAMS_DHCP $PARAMS_MTA_SRC $PARAMS_MTA_DST"]
} {
    if { $::PART_RETURN == 0 } {
        PASS_STEP
    } else {
        FAIL_STEP "Cannot find data"
    }
}
############################## Invoke Parsing Tool End ##################################################

DoStep "E-UE-PROV_1-1-3-14_7-1" "NO DHCP REQUEST from MTA" {
    LogMsg "Verify DHCP REQUEST does NOT exist"
        # Find MTA MAC with colons
        set MTA_MAC_COL [AddColMac $MTA_MAC]
} {
    # Verify OPTION OPTION 122, SUBOPTIONS 3 EXISTS and is an IP and not a FQDN
    VerifyNotValue $msgID_MTA "INANY DHCP REQUEST OPTION122SUBOPTION3" "EXISTS" "" AND \
            "OPTIONCLIENTHWADDRESS" "IS" "$MTA_MAC_COL"
}

################################################################################
# Cleanup
################################################################################

DoStep "E-UE-PROV_1-1-3-14_8-1" "Configure Provisioning Server" {
    LogMsg "Configure Provisioning Server"
    # verify_signal "Restore Provisioning Server (MTAFORCW_122)"
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122
    PROV_DEPLOY_DHCP
} {PASS_STEP}

DoStep "E-UE-PROV_1-1-3-14_9-1" "Reset CM and MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "Reset of CM and MTA has passed"
} {
    IsEqual $val 0
}

DoStep "E-UE-PROV_1-1-3-14_9-2" "CM/MTA reboot" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
} {PASS_STEP}

Cleanup
return 0