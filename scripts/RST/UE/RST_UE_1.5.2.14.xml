<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)



-->
<pc2xml version="$Revision: 8188 $" 
	name="RST-UE 1.5.2.14" 
	descrip="CCall Waiting Disconnect Timing (=10 sec)" 
	number="RST-UE 1.5.2.13" inspector="disable">
	
	<template file="./templates/CallOrigAtUETemp.xml" name="UE1"/>
	<template file="./templates/CallTermAtUETemp.xml" name="UE2"/>

	<remove_from fsm="UE1">
		<state ID="Connected"/>
	</remove_from>

	<remove_from fsm="UE2">
		<NE elements="UE1" targets="UE1"/>
		<state ID="Connected"/>
	</remove_from>

	<add_to fsm="UE1">
		<state ID="Connected">
			<prelude>
				<sleep time="3000"/>
				<generate event="Branch1Event" fsm="UE2"/>
			</prelude>
			<transition to="HoldMedia" event="Invite"/>
		</state>
		<state ID="HoldMedia">
			<prelude>
				<send protocol="sip" msgtype="100-INVITE"/>
				<send protocol="sip" msgtype="200-INVITE"/>
			</prelude> 
			<transition to="WaitUE2Hangup" event="ACK"/>
		</state>
		
		<state ID="WaitUE2Hangup">
			<transition event="Branch2Event" to="ReInvite"/>
		</state>
		
		<state ID="ReInvite" timer="3000">
			<response>\
				<verify step="5" requirements="REQ24089">
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>INVITE</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
						<send protocol="sip" msgtype="200-INVITE"/>
					</then>
				</verify>
			</response>
			<transition to="WaitAck" event="INVITE"/>
			<transition to="Releasing" event="TimerExpired"/>
		</state>
		
		<state ID="WaitAck">
			<transition event="ACK" to="Releasing"/>
		</state>
		
		<transition from="OnHook" to="END" event="OnHookComplete"/>
		
		<state ID="OffHook2">
			<prelude>
				<generate event="Branch2Event" fsm="UE2"/>
				<sleep time="5000"/>
				<send protocol="utility" msgtype="OffHook"/>
			</prelude>
			<transition to="Setup2" event="OffHookComplete"/>
		</state>
		
		<state ID="Setup2">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
					</then>
				</if>
				<if>
					<and>
						<eq>
							<msg_ref type="extensions">precondition</msg_ref>
							<expr>require</expr>
						</eq>
						<or>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Require</msg_ref>
								<expr>precondition</expr>
							</contains>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Supported</msg_ref>
								<expr>precondition</expr>
							</contains>
						</or>
					</and>
					<then>
						<!--Sending 183-Invite with answer-->
						<sleep time="200"/>
						<send protocol="sip" msgtype="183-Invite"/>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>Invite</expr>
						</eq>
						<then>
							<!--Sending 180-Invite with SS not supporting precondition.-->
							<sleep time="200"/>
							<send protocol="sip" msgtype="180-Invite"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Alerting2" event="INVITE"/>
			<transition to="Setup2" event="DialDigitsComplete"/>
		</state>
		<state ID="Alerting2">
			<response>
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PRACK</expr>
						</eq>
						<contains>
							<msg_ref type="sip" msg_instance="last" hdr_instance="any">18x-Invite.Require</msg_ref>
							<expr>100rel</expr>
						</contains>
					</and>
					<then>
						<send protocol="sip" msgtype="200-PRACK"/>
					</then>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
				<if>
					<and>
						<contains>
							<msg_ref type="sip" msg_instance="last">18x-Invite.Status-Line.status-code</msg_ref>
							<expr>183</expr>
						</contains>
						<eq>
							<msg_ref type="sdp">Request.qos-curr-remote.direction</msg_ref>
							<msg_ref type="sdp">Request.qos-des-remote.direction</msg_ref>
						</eq>
					</and>
					<then>
						<!--Sending 180 for required preconditions.-->
						<send protocol="sip" msgtype="180-Invite"/>
					</then>
				</if>
			</response>

			<transition to="Alerting2" event="DialDigitsComplete"/>
			<transition to="Alerting2" event="PRACK"/>
			<transition to="Alerting2" event="UPDATE"/>
			<transition to="Answer2" event="ALERTING_UAS"/>
		</state>

		<state ID="Answer2" timer="15000">
			<response>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>TimerExpired</expr>
					</eq>
					<then>
						<!--Sending 200-Invite-->
						<send protocol="sip" msgtype="200-INVITE"/>
					</then>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
			</response>
			<transition to="Answer2" event="UPDATE"/>
			<transition to="Answer2" event="TimerExpired"/>
			<transition to="Connected2" event="ACK"/>
		</state>
		
		<state ID="Connected2">
			<prelude>
				<send protocol="sip" msgtype="100-INVITE"/>
				<send protocol="sip" msgtype="200-INVITE"/>
			</prelude> 
			<transition to="WaitUE2Hangup2" event="ACK"/>
		</state>
		
		<state ID="WaitUE2Hangup2">
			<transition event="Branch3Event" to="ReInvite"/>
		</state>
		
		<state ID="ReInvite2" timer="10000">
			<response>\
				<verify step="9" requirements="REQ24090">
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>INVITE</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
						<send protocol="sip" msgtype="200-INVITE"/>
					</then>
				</verify>
			</response>
			<transition to="WaitAck2" event="INVITE"/>
			<transition to="END" event="TimerExpired"/>
		</state>
		
		<state ID="WaitAck2">
			<transition event="ACK" to="END"/>
		</state>
	</add_to>

	<add_to fsm="UE2">
		<NE elements="UE2" targets="UE2"/>
		<transition from="Register" to="WaitState" event="Registered"/>
		
		<state ID="WaitState">
			<transition to="Setup" event="Branch1Event"/>
		</state>
		
		<transition from="Setup" to="WaitTone" event="ALERTING_UAC"/>
		
		<transition from="Proceeding" to="WaitTone" event="ALERTING_UAC"/>
		
		<transition from="Alerting" to="WaitTone" event="ALERTING_UAC"/>
		
		<state ID="WaitTone">
			<prelude>
				<send protocol="utility" msgtype="VerifyCallWaitingTone"/>
			</prelude>
			
			<transition to="HookFlash" event="VerifyCallWaitingToneComplete"/>
			<transition to="HookFlash" event="VerifyCallWaitingToneError"/>
		</state>
		
		<state ID="HookFlash">
			<prelude once="true">
				<send protocol="utility" msgtype="HookFlash"/>
			</prelude>
			<transition to="HookFlash" event="VerifyCallWaitingToneComplete"/>
			<transition to="HookFlash" event="VerifyCallWaitingToneError"/>
			<transition to="Connected" event="200-INVITE"/>
		</state>
				
		<state ID="Connected" timer="5000">
			<prelude once="true">
				<send protocol="sip" msgtype="ACK"/>
			</prelude>
			<transition to="WaitSecondCall" event="TimerExpired"/>
		</state>
		
		<state ID="WaitSecondCall">
			<transition to="Setup2" event="Branch2Event"/>
		</state>
		
		<state ID="Setup2">
			<prelude>
				<send protocol="sip" msgtype="Invite"/>
			</prelude>
			<response>
				<if>
					<contains>
						<msg_ref type="sip" hdr_instance="any">18x-Invite.Require</msg_ref>
						<expr>100rel</expr>
					</contains>
					<then>
						<send protocol="sip" msgtype="Prack"/>
					</then>
				</if>
			</response>
			<transition to="Proceeding2" event="100-INVITE"/>
			<transition to="Alerting2" event="180-INVITE"/>
			<transition to="Alerting2" event="183-INVITE"/>
			<transition to="Connected2" event="200-INVITE"/>
			<transition to="HookFlash2" event="ALERTING_UAC"/>
		</state>
		<state ID="Proceeding2">
			<response>
				<if>
					<contains>
						<msg_ref type="sip" hdr_instance="any">18x-Invite.Require</msg_ref>
						<expr>100rel</expr>
					</contains>
					<then>
						<send protocol="sip" msgtype="Prack"/>
					</then>
				</if>
			</response>
			<transition to="Alerting2" event="180-INVITE"/>
			<transition to="Alerting" event="183-INVITE"/>
			<transition to="Connected2" event="200-INVITE"/>
			<transition to="HookFlash2" event="ALERTING_UAC"/>
		</state>
		
		<state ID="Alerting2">
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="200-Update"/>
					</then>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
								<expr>180</expr>
							</eq>
							<contains>
								<msg_ref type="sip" hdr_instance="any">180-INVITE.Require</msg_ref>
								<expr>100rel</expr>
							</contains>
						</and>
						<then>
							<send protocol="sip" msgtype="Prack"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Alerting2" event="200-PRACK"/>
			<transition to="Alerting2" event="UPDATE"/>
			<transition to="Alerting2" event="18x-INVITE"/>
			<transition to="Connected2" event="200-INVITE"/>
			<transition to="HookFlash2" event="ALERTING_UAC"/>
		</state>
			
		<state ID="HookFlash2">
			<prelude once="true">
				<send protocol="utility" msgtype="HookFlash"/>
			</prelude>
			<transition to="HookFlash" event="VerifyCallWaitingToneComplete"/>
			<transition to="HookFlash" event="VerifyCallWaitingToneError"/>
			<transition to="Connected2" event="200-INVITE"/>
		</state>
		
		<state ID="Connected2" timer="5000">
			<prelude once="true">
				<send protocol="sip" msgtype="ACK"/>
			</prelude>
			<transition to="EndUE2Call2" event="TimerExpired"/>
		</state>
		
		<state ID="EndUE2Call2" ES="true">
			<prelude>
				<generate event="Branch3Event" fsm="UE1"/>
			</prelude>
		</state>
	</add_to>
</pc2xml>
