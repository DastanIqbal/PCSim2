<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################
 Change History: (Author & Date)
-->
<!-- Document type and attributes. -->
<pc2xml version="$Revision: 6076 $"
        name="E-UE_PROV_1.2.1.4"
        descrip="eUE implements pktcEUEDevBSFTable defined in CL-PKTC-EUE-DEV-MIB."
        number="E-UE_PROV_1.2.1.4">


    <!-- Reset UE; start capture. -->
    <template file="./templates/EUE_Prov_B_1_1_1.xml" name="EUEDevOpTable"/>

    <add_to fsm="EUEDevOpTable">
        <transition from="StartCapture_RebootWait" to="EUEProvisions1" event="TimerExpired"/>

<!-- vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv -->
<!-- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ -->
        <!-- 8 If eUE supports IPv6, continue with Step 10. -->
        <!-- 10 The E-UE DUT provisions successfully and becomes operational. -->
        <state ID="EUEProvisions1">
            <prelude once="true">
                <stop_capture/>
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>DOCS-CABLE-DEVICE-MIB::docsDevServerBootState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="10">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="MIBWalk1" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>

        <!-- 11 Repeat Step 3 above.
                SNMPv3 Walk on pktcEUEDevBSFTable
                Triple indexing per pktcEUEDevOpIndex, pktcEUEDevBSFASType, pktcEUEDevBSFIndex.  -->
                <!-- pktcEUEDevBSFASType = unique AS type defined for BSF (if provided) -->
                <!-- pktcEUEDevBSFAddrType = IPv6 (2)  -->
                <!-- pktcEUEDevBSFAddr = BSF IPv6 address -->
                <!-- pktcEUEDevBSFRowStatus = active(1) -->
        <state ID="MIBWalk1">
            <prelude once="true">
                <send protocol="utility" msgtype="SNMPGetTable">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>CL-PKTC-EUE-DEV-MIB::pktcEUEDevBSFTable.0,INTEGER,1][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.CM IP Address</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <if>
                    <eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPRespFailure</expr>
                    </eq>
                <then>
                    <fail/>
                </then>
                </if>
                <verify step="11-3">
                    <and>
                       <eq>
                           <!-- pktcEUEDevBSFASType = unique AS type defined for BSF (if provided) -->
                           <msg_ref type="utility" index="0 0 1">SNMPResp.varBind</msg_ref>
                           <expr>find this value</expr>
                       </eq>
                    <and>
                       <eq>
                           <!-- pktcEUEDevBSFAddrType = IPv6 (2)  -->
                           <msg_ref type="utility" index="0 0 3">SNMPResp.varBind</msg_ref>
                           <expr>2</expr>
                       </eq>
                    <and>
                       <eq>
                           <!-- pktcEUEDevBSFAddr = BSF IPv6 address -->
                           <msg_ref type="utility" index="0 0 4">SNMPResp.varBind</msg_ref>
                           <expr>Find this value</expr>
                       </eq>
                       <eq>
                           <!-- pktcEUEDevBSFRowStatus = active(1) -->
                           <msg_ref type="utility" index="0 0 5">SNMPResp.varBind</msg_ref>
                           <expr>1</expr>
                       </eq>
                    </and>
                    </and>
                    </and>
                </verify>
            </response>
            <transition to="SNMPSet1" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>

        <!-- 12 SNMP Set on pktcEUEDevBSFAddrType object to another valid value.
                The eUE must reject Set operation on this object. -->
        <state ID="SNMPSet1" timer="10000">
            <prelude once="true">
                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>CL-PKTC-EUE-DEV-MIB::pktcEUEDevBSFAddrType.3,INTEGER,1][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <if>
                    <eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPRespFailure</expr>
                    </eq>
                <then>
                    <fail/>
                </then>
                </if>

                <!-- NonWritable(17) -->
                <verify step="12">
                    <eq>
                        <msg_ref type="utility" index="0 0 3">SNMPResp.varBind</msg_ref>
                        <expr>17</expr>
                    </eq>
                </verify>
            </response>
            <!-- 13 Stop IP capture and save trace file. -->
            <postlude>
                <stop_capture/>
            </postlude>
            <transition to="ReConfigure2" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>

<!-- vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv -->
<!-- ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ -->
        <!-- 13 Stop IP capture and save trace file.
                Reconfigure. -->
        <state ID="ReConfigure2"
               provFile="E-UE_PROV_v6_2.1.2.1_2.bin"
               policyFile="MTAFORCW122_test"
               nextState="Reset2"/>

        <!-- 14 Reset. The E-UE DUT provisions successfully and becomes operational. -->
        <state ID="Reset2" timer="120000">
            <prelude once="true">
                <start_capture>
                    <filter>
                        <var_expr>
                            <expr>host </expr>
                            <msg_ref type="platform">DUT.IP</msg_ref>
                        </var_expr>
                    </filter>
                </start_capture>

                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>DOCS-CABLE-DEVICE-MIB::pktcMtaDevResetNow.0,INTEGER,1][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP Address</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>2c</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <if>
                    <eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPRespFailure</expr>
                    </eq>
                    <then>
                        <fail/>
                    </then>
                </if>
                <if>
                    <or>
                        <eq>
                            <msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
                            <expr>0</expr>
                        </eq>
                        <eq>
                            <msg_ref type="sip">REGISTER.Expires.value</msg_ref>
                            <expr>0</expr>
                        </eq>
                    </or>
                    <then>
                        <send protocol="sip" msgtype="200-REGISTER"/>
                    </then>
                </if>
            </response>
            <transition to="EUEProvisions2" event="TimerExpired"/>
            <transition to="Reset2" event="SNMPResp"/>
            <transition to="Reset2" event="REGISTER"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>

        <!-- 14b E-UE DUT provisions successfully and becomes operational. -->
        <state ID="EUEProvisions2">
            <prelude once="true">
                <stop_capture/>
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>DOCS-CABLE-DEVICE-MIB::docsDevServerBootState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="14">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="MIBWalk2" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>

        <!-- 15-11 Repeat Step 3 above. -->
        <state ID="MIBWalk2">
            <prelude once="true">
                <send protocol="utility" msgtype="SNMPGetTable">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>CL-PKTC-EUE-DEV-MIB::pktcEUEDevBSFTable.0,INTEGER,1][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.CM IP Address</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <if>
                    <eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPRespFailure</expr>
                    </eq>
                <then>
                    <fail/>
                </then>
                </if>
                <verify step="15-11">
                    <and>
                       <eq>
                           <!-- pktcEUEDevBSFASType = unique AS type defined for BSF (if provided) -->
                           <msg_ref type="utility" index="0 0 1">SNMPResp.varBind</msg_ref>
                           <expr>find this value</expr>
                       </eq>
                    <and>
                       <eq>
                           <!-- pktcEUEDevBSFAddrType = IPv6 (2)  -->
                           <msg_ref type="utility" index="0 0 3">SNMPResp.varBind</msg_ref>
                           <expr>2</expr>
                       </eq>
                    <and>
                       <eq>
                           <!-- pktcEUEDevBSFAddr = BSF IPv6 address -->
                           <msg_ref type="utility" index="0 0 4">SNMPResp.varBind</msg_ref>
                           <expr>Find this value</expr>
                       </eq>
                       <eq>
                           <!-- pktcEUEDevBSFRowStatus = active(1) -->
                           <msg_ref type="utility" index="0 0 5">SNMPResp.varBind</msg_ref>
                           <expr>1</expr>
                       </eq>
                    </and>
                    </and>
                    </and>
                </verify>
            </response>
            <transition to="SNMPSet2" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>

        <!-- 15-12 SNMP Set on pktcEUEDevBSFAddrType object to another valid value. -->
        <state ID="SNMPSet2" timer="10000">
            <prelude once="true">
                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>CL-PKTC-EUE-DEV-MIB::pktcEUEDevBSFAddrType.3,INTEGER,1][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <if>
                    <eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPRespFailure</expr>
                    </eq>
                <then>
                    <fail/>
                </then>
                </if>
                <!-- NonWritable(17) -->
                <verify step="15-12">
                    <eq>
                        <msg_ref type="utility" index="0 0 3">SNMPResp.varBind</msg_ref>
                        <expr>17</expr>
                    </eq>
                </verify>
            </response>
            <transition to="END" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>
    </add_to>
</pc2xml>
