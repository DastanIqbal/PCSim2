##############################################################################
#// Filename: RST E-UE PROV 3-1-3-3.test (PACT)
#// Author:   Matthew Forbes
#//
#//
#//
#// Creation Date: March 12, 2009
#// Modified by:
#//            Matthew Forbes 2/4/10 - changed config file and added MIB check for
#//            pktcEUERSTNfBCallOverrideNotifyRejected for both secure and hybrid flows
################################################################################
#// Description:
#//     TC2894 TEST CASE RST E-UE PROV 3.1.3.3 - Ability of eUE to Implement the
#//	    User and Network Basic Call Feature Tables
#//
#//
#// Objective:
#//     This test verifies the eUE ability to properly implement the pktcEUERSTBasicCallTable
#//     and pktcEUERSTNfBasicCallTable as defined in CL-PKTC-EUE-RST-MIB.
#//
#//
#// PacketCable DUT:
#//     EDVA
#//
#// Test Steps:
#//     - Initial configuration
#//     - Start sniffer
#//     - Reset DUT
#//     - Check Provisioning state
#//     - Invoke SNMPv3 API and query MIB objects and validate values
#//     - Stop sniffer
#//     - Hybrid configuration
#//     - Start sniffer
#//     - Reset DUT
#//     - Check Provisioning state
#//     - Invoke SNMPv2 API and bulk query MIB objects and validate values
#//     - Stop sniffer
#//
#//
#// Notes:
#//     - Requires provPrimitives.tcl
#//
#//
################################################################################

global SCRIPT_VERSION
set SCRIPT_VERSION { # $Id: RST_E-UE_PROV_3-1-3-3.test 7767 2011-01-21 23:35:45Z botte $ }


set test_case RST_E-UE_PROV_3-1-3-3-
set step_num 1
set NON_WRITABLE 2

Init_PROV

DoStep ${test_case}${step_num} "Initial Configuration" {
    LogMsg "--- Init PROV module ---"
    # PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 Secure_Flow_BasicCall_DigitMap_CW69_RST_Baseline_MotoCW71.cfg
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 C.1.1.3.bin
    PROV_DEPLOY_DHCP
} {PASS_STEP}

DoStep ${test_case}${step_num} "Choose chipset" {
    LogMsg "--- Choose chipset ---"
    set choice [tk_messageBox -type yesno -default no -message "Is the MTA chipset TI?" -icon question]
} {
    PASS_STEP
}

DoStep ${test_case}[incr step_num]_1 "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP || udp port 67"
    StartCaptureControllerLan
} {PASS_STEP}

DoStep ${test_case}${step_num}_2 "Reset CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "--- Reset of CM and MTA has passed ---"
} {
    IsEqual $val 0
}

DoStep ${test_case}${step_num}_3 "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
    # Get the OID from the MTA and check it using our previously defined
    set val [GetProvState 1 600]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 1"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 1
}

## Get all the values and verify

DoStep ${test_case}[incr step_num]_1 "pktcEUERSTBCallPrefCodecList Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    if {$choice == no} {
    set val [SNMP_TABLE_GET $table_pktcEUERSTBasicCallTable.1 $MTA_IP 2]
    } else {
    set val [SNMP_TABLE_GET $table_pktcEUERSTBasicCallTable.1 $MTA_IP 1]
    }
    LogMsg "The Value of pktcEUERSTBCallPrefCodecList is: $val"
} {
    if {$choice == no} {
    IsEqual $val "sample sdp"
    } else {
    IsEqual $val "pcmu,pcma"
    }
}

DoStep ${test_case}${step_num}_2 "pktcEUERSTBCallStatus  Verification" {
    # Get the OID from the MTA and check it using our previously defined
    if {$choice == no} {
    set val [SNMP_TABLE_GET $table_pktcEUERSTBasicCallTable.1 $MTA_IP 3]
    } else {
    set val [SNMP_TABLE_GET $table_pktcEUERSTBasicCallTable.1 $MTA_IP 2]
    }
    LogMsg "The Value of pktcEUERSTBCallStatus is: $val"
} {
    IsEqual $val 1
}

DoStep ${test_case}[incr step_num]_1 "pktcEUERSTNfBCallByeDelay Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 1]
    LogMsg "The Value of pktcEUERSTNfBCallByeDelay is: $val"
} {
    IsEqual $val 5
}

DoStep ${test_case}${step_num}_2 "pktcEUERSTNfBCallOrigDTTimer  Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 2]
    LogMsg "The Value of pktcEUERSTNfBCallOrigDTTimer is: $val"
} {
    IsEqual $val 30
}

DoStep ${test_case}${step_num}_3 "pktcEUERSTNfBCallTermOHErrSig Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 3]
        set val1 file:///PacketCableRST/cf
        # set val1 [decIpToHexIp $PROV_DHCP1_IP]
        # set val1 [string tolower $val1]
        # if {$choice == no} {
        # set val1 "$val1 "
    # } else  {
        # # set val1 [regsub -all " " $val1 ""]
        # set val1 [decIpToHexIp $PROV_DHCP1_IP]
        # set val1 "$val1 "
        # }
    LogMsg "The Value of pktcEUERSTNfBCallTermOHErrSig is: $val"
} {   
    IsEqual $val "$val1"
}

DoStep ${test_case}${step_num}_4 "pktcEUERSTNfBCallTermErrSigTimer Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 4]
    LogMsg "The Value of pktcEUERSTNfBCallTermErrSigTimer is: $val"
} {
    IsEqual $val 10
}

DoStep ${test_case}${step_num}_5 "pktcEUERSTNfBCallPermSeqTone1  Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 5]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTone1 is: $val"
} {
    IsEqual $val "$val1"
}

DoStep ${test_case}${step_num}_6 "pktcEUERSTNfBCallPermSeqTimer1 Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 6]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTimer1 is: $val"
} {
    IsEqual $val 10
}

DoStep ${test_case}${step_num}_7 "pktcEUERSTNfBCallPermSeqTone2 Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 7]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTone2 is: $val"
} {
    IsEqual $val "$val1"
}

DoStep ${test_case}${step_num}_8 "pktcEUERSTNfBCallPermSeqTimer2 Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 8]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTimer2  is: $val"
} {
    IsEqual $val 10
}

DoStep ${test_case}${step_num}_9 "pktcEUERSTNfBCallPermSeqTone3  Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 9]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTone3  is: $val"
} {
    IsEqual $val "$val1"
}

DoStep ${test_case}${step_num}_10 "pktcEUERSTNfBCallPermSeqTimer3 Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 10]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTimer3 is: $val"
} {
    IsEqual $val 10
}

DoStep ${test_case}${step_num}_11 "pktcEUERSTNfBCallLORTimer Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 11]
    LogMsg "The Value of pktcEUERSTNfBCallLORTimer is: $val"
} {
    IsEqual $val 20
}

DoStep ${test_case}${step_num}_12 "pktcEUERSTNfBCallNEMDSCPValueMedia  Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 12]
    LogMsg "The Value of pktcEUERSTNfBCallNEMDSCPValueMedia is: $val"
    if {$val == 0 || $val == 15} {
        set val 0
    } else {
        set val 1
    }
} {
    IsEqual $val 0
}

DoStep ${test_case}${step_num}_13 "pktcEUERSTNfBCallNEMDSCPValueSig Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 13]
    LogMsg "The Value of pktcEUERSTNfBCallNEMDSCPValueSig is: $val"
} {
    IsEqual $val 15
}

DoStep ${test_case}${step_num}_14 "pktcEUERSTNfBCallStatus Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 14]
    LogMsg "The Value of pktcEUERSTNfBCallStatus is: $val"
} {
    IsEqual $val 1
}

DoStep ${test_case}${step_num}_15 "pktcEUERSTNFBCallOrigModLongIntDig Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 15]
    LogMsg "The Value of pktcEUERSTNFBCallOrigModLongIntDig is: $val"
} {
    IsEqual $val 5
}

DoStep ${test_case}${step_num}_16 "pktcEUERSTNfBCallPermSeqTone4 Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 16]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTone4 is: $val"
} {
    IsEqual $val "$val1"
}

DoStep ${test_case}${step_num}_17 "pktcEUERSTNfBCallPermSeqTimer4 Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 17]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTimer4 is: $val"
} {
    IsEqual $val 10
}

DoStep ${test_case}${step_num}_18 "pktcEUERSTNfBCallOverrideNotifyRejected Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 18]
    LogMsg "The Value of pktcEUERSTNfBCallOverrideNotifyRejected is: $val"
} {
    IsEqual $val 2
}

DoStep ${test_case}[incr step_num] "Stop Sniffer" {
    LogMsg "--- Stop Sniffer ---"
    StopCaptureControllerLan
    SaveToFileControllerLan "_Secure"
} { PASS_STEP }

set step_num 1

DoStep ${test_case}${step_num}h "Initial Configuration" {
    LogMsg "--- Init PROV module ---"
    PROV_MODIFY_DEVICE $MTA_MAC HYBRID2
    PROV_DEPLOY_DHCP
} {PASS_STEP}

DoStep ${test_case}[incr step_num]h_1 "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP || udp port 67"
    StartCaptureControllerLan
} {PASS_STEP}

DoStep ${test_case}[incr step_num]h_2 "Reset CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "--- Reset of CM and MTA has passed ---"
} {
    IsEqual $val 0
}

DoStep ${test_case}${step_num}h_3 "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 120
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_GET $oid_pktcMtaDevProvisioningState $MTA_IP]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 1"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 1
}

## Get all the values and verify

DoStep ${test_case}[incr step_num]h_1 "pktcEUERSTBCallSDP Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTBasicCallTable.1 $MTA_IP 1]
    LogMsg "The Value of pktcEUERSTBCallSDP is: $val"
} {
        if {$choice == no} {
            IsEqual $val "sample sdp"
        } else {
            IsEqual $val "pcmu,pcma"
        }
}

DoStep ${test_case}${step_num}h_2 "pktcEUERSTBCallStatus  Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTBasicCallTable.1 $MTA_IP 2]
    LogMsg "The Value of pktcEUERSTBCallStatus is: $val"
} {
    IsEqual $val 1
}

DoStep ${test_case}[incr step_num]h_1 "pktcEUERSTNfBCallByeDelay Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 1]
    LogMsg "The Value of pktcEUERSTNfBCallByeDelay is: $val"
} {
    IsEqual $val 5
}

DoStep ${test_case}${step_num}h_2 "pktcEUERSTNfBCallOrigDTTimer  Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 2]
    LogMsg "The Value of pktcEUERSTNfBCallOrigDTTimer is: $val"
} {
    IsEqual $val 30
}

DoStep ${test_case}${step_num}h_3 "pktcEUERSTNfBCallTermOHErrSig Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 3]
    LogMsg "The Value of pktcEUERSTNfBCallTermOHErrSig is: $val"
} {
    # set val1 [decIpToHexIp $PROV_DHCP1_IP]
    IsEqual $val "$val1"
}

DoStep ${test_case}[incr step_num]h_4 "pktcEUERSTNfBCallTermErrSigTimer Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 4]
    LogMsg "The Value of pktcEUERSTNfBCallTermErrSigTimer is: $val"
} {
    IsEqual $val 10
}

DoStep ${test_case}${step_num}h_5 "pktcEUERSTNfBCallPermSeqTone1  Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 5]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTone1 is: $val"
} {
    IsEqual $val "$val1"
}

DoStep ${test_case}${step_num}h_6 "pktcEUERSTNfBCallPermSeqTimer1 Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 6]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTimer1 is: $val"
} {
    IsEqual $val 10
}

DoStep ${test_case}${step_num}h_7 "pktcEUERSTNfBCallPermSeqTone2 Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 7]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTone2 is: $val"
} {
    IsEqual $val "$val1"
}

DoStep ${test_case}[incr step_num]h_8 "pktcEUERSTNfBCallPermSeqTimer2 Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 8]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTimer2  is: $val"
} {
    IsEqual $val 10
}

DoStep ${test_case}${step_num}h_9 "pktcEUERSTNfBCallPermSeqTone3  Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 9]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTone3  is: $val"
} {
    IsEqual $val "$val1"
}

DoStep ${test_case}${step_num}h_10 "pktcEUERSTNfBCallPermSeqTimer3 Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 10]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTimer3 is: $val"
} {
    IsEqual $val 10
}

DoStep ${test_case}[incr step_num]h_11 "pktcEUERSTNfBCallLORTimer Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 11]
    LogMsg "The Value of pktcEUERSTNfBCallLORTimer is: $val"
} {
    IsEqual $val 20
}

DoStep ${test_case}${step_num}h_12 "pktcEUERSTNfBCallNEMDSCPValueMedia  Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 12]
    LogMsg "The Value of pktcEUERSTNfBCallNEMDSCPValueMedia is: $val"
    if {$val == 0 || $val == 15} {
        set val 0
    } else {
        set val 1
    }
} {
    IsEqual $val 0
}

DoStep ${test_case}${step_num}h_13 "pktcEUERSTNfBCallNEMDSCPValueSig Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 13]
    LogMsg "The Value of pktcEUERSTNfBCallNEMDSCPValueSig is: $val"
} {
    IsEqual $val 15
}

DoStep ${test_case}${step_num}h_14 "pktcEUERSTNfBCallStatus Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 14]
    LogMsg "The Value of pktcEUERSTNfBCallStatus is: $val"
} {
    IsEqual $val 1
}

DoStep ${test_case}${step_num}_15 "pktcEUERSTNFBCallOrigModLongIntDig Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 15]
    LogMsg "The Value of pktcEUERSTNFBCallOrigModLongIntDig is: $val"
} {
    IsEqual $val 5
}

DoStep ${test_case}${step_num}_16 "pktcEUERSTNfBCallPermSeqTone4 Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 16]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTone4 is: $val"
} {
    IsEqual $val "$val1"
}

DoStep ${test_case}${step_num}_17 "pktcEUERSTNfBCallPermSeqTimer4 Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 17]
    LogMsg "The Value of pktcEUERSTNfBCallPermSeqTimer4 is: $val"
} {
    IsEqual $val 10
}

DoStep ${test_case}${step_num}_18 "pktcEUERSTNfBCallOverrideNotifyRejected Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_TABLE_GET $table_pktcEUERSTNfBasicCallTable.1 $MTA_IP 18]
    LogMsg "The Value of pktcEUERSTNfBCallOverrideNotifyRejected is: $val"
} {
    IsEqual $val 2
}

DoStep ${test_case}[incr step_num]h "Stop Sniffer" {
    LogMsg "--- Stop Sniffer ---"
    StopCaptureControllerLan
    SaveToFileControllerLan "_Hybrid"
} { PASS_STEP }

DoStep ${test_case}[incr step_num] "Configure Provisioning Server" {
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 Device_Level_Secure.cfg
    PROV_DEPLOY_DHCP
} { PASS_STEP }


############### Reset CM and MTA and Verify Provisioning ################

DoStep ${test_case}[incr step_num] "Reset CM/MTA" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "--- Reset of CM and MTA has passed ---"
} {
    IsEqual $val 0
}

DoStep ${test_case}[incr step_num] "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
    # Get the OID from the MTA and check it using our previously defined
    set val [GetProvState 1 600]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 1"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 1
}


################################################################################
# Cleanup
################################################################################
set CONTINUE_PAST_STEP_ERROR 0
Cleanup

