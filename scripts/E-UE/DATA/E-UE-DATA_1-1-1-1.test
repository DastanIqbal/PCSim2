#//****************************************************************************
#// Filename: E-UE-DATA_1-1-1-1.test
#// Author:   Matthew Forbes
#// Creation Date: 11/05/2008
#// Modified by:
#//
#//
#//
#//****************************************************************************
#// Description:
#//     TC2733 TEST CASE E-UE-DATA 1.1.1.1 Ability of eUE to Support Battery Backup Events
#// 
#//
#// Objective:
#//     If the eUE supports battery backup, this test verifies the device properly implements the
#//     notification mechanisms and event reporting for powering events that are required.
#//
#// PacketCable DUT:
#//     EDVA
#//
#// Test Steps:
#//     - Initial configuration
#//     - Start sniffer
#//     - Reset EDVA
#//     - Check Provisioning state
#//     - Check values MIB values
#//     - Execute powering events
#//     - Check values MIB values
#//     - Stop Sniffer
#//
#// Notes:
#//     - Requires provPrimitives.tcl & tftp_primitives.tcl.
#//     - Requires the specific config file in $BASE_CFG_FILE_PATH in Provisioning Server.
#//****************************************************************************
global SCRIPT_VERSION
set SCRIPT_VERSION { # $Id: E-UE-DATA_1-1-1-1.test 7406 2010-07-20 17:17:37Z dthakore $ }

DoStep "E-UE-DATA_1-1-1-1_1-1" "Initial configuration" {
    LogMsg "--- Initial PROV module ---"
    Init_PROV
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 Device_Level_Secure.cfg
    PROV_DEPLOY_DHCP
} {PASS_STEP}


DoStep "E-UE-DATA_1-1-1-1_1-2" "Start sniffer" {
    LogMsg "--- Start sniffer ---"
    Init_CONTROLLER_LAN
    SetupCaptureControllerLan "host $MTA_IP"
    StartCaptureControllerLan
} {PASS_STEP}

DoStep "E-UE-DATA_1-1-1-1_Prestep" "Clear pktcDevEventLogTable" {
    LogMsg "Clear pktcDevEventLogTable"
    set val [SNMP_SET 1.3.6.1.4.1.4491.2.2.3.1.1.0 bits 0 $MTA_IP]
} {IsEqual $val 0}


DoStep "E-UE-DATA_1-1-1-1_1-3" "SNMP RESET" {
    SNMP_SET $oid_pktcMtaDevResetNow INTEGER 1 $MTA_IP
    actionWait "Wait for EDVA to reboot" 60
} {PASS_STEP}

DoStep "E-UE-DATA_1-1-1-1_1-4" "pktcMtaDevProvisioningState Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMP_GET $oid_pktcMtaDevProvisioningState $MTA_IP 20]
    LogMsg "The Value of EDVA Provisioning State is: $val"
} {
    IsEqual $val 1
}

DoStep "E-UE-DATA_1-1-1-1_2-1" "upsIdentAttachedDevices Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    set oid_upsIdentAttachedDevices .1.3.6.1.2.1.33.1.1.6.0
    set val [SNMP_GET $oid_upsIdentAttachedDevices $MTA_IP 20]
    LogMsg "The Value of upsIdentAttachedDevices is: $val"
} {
    IsEqual $val ECM:EDVA
}

DoStep "E-UE-DATA_1-1-1-1_3-1" "pktcDevEvLogId Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    # set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP 1 10]
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP all 10]
    LogMsg "The Value of EDVA pktcDevEvLogId is: $val"
} {
    # IsEqual $val 4000850400
    verify_signal "Chceck TclSim console for event ID 4000850400 (Battery Good)."
}

DoStep "E-UE-DATA_1-1-1-1_4-1" "pktcDevEvLogId Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    verify_signal "Unplug DUT."
    # set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP 3 10]
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP all 10]
    LogMsg "The Value of EDVA pktcDevEvLogId is: $val"
} {
    # IsEqual $val 4000850100
    verify_signal "Chceck TclSim console for event ID 4000850100 (On Battery)."
}

DoStep "E-UE-DATA_1-1-1-1_5-1" "pktcDevEvLogId Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    verify_signal "Plug DUT back in."
    # set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP 4 10]
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP all 10]
    LogMsg "The Value of EDVA pktcDevEvLogId is: $val"
} {
    # IsEqual $val 4000850200
    verify_signal "Chceck TclSim console for event ID 4000850200 (AC Restored)."
}

DoStep "E-UE-DATA_1-1-1-1_6-1" "pktcDevEvLogId Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    verify_signal "Remove battery from DUT."
    # set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP 5 10]
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP all 10]
    LogMsg "The Value of EDVA pktcDevEvLogId is: $val"
} {
    # IsEqual $val 4000850500
    verify_signal "Chceck TclSim console for event ID 4000850500 (Battery Missing)."
}


DoStep "E-UE-DATA_1-1-1-1_7-1" "pktcDevEvLogId Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    verify_signal "Re-install battery in DUT."
    # set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP 6 10]
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP all 10]
    LogMsg "The Value of EDVA pktcDevEvLogId is: $val"
} {
    # IsEqual $val 4000850600
    verify_signal "Chceck TclSim console for event ID 4000850600 (Battery Present)."
}

DoStep "E-UE-DATA_1-1-1-1_8-1" "pktcDevEvLogId Content Verification" {
    # Get the OID from the MTA and check it using our previously defined
    verify_signal "Remove battery from DUT and install uncharged or partially charged battery."
    # set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP 7 10]
    set val [SNMP_TABLE_GET $oid_pktcDevEvLogId $MTA_IP all 10]
    LogMsg "The Value of EDVA pktcDevEvLogId is: $val"
} {
    # IsEqual $val 4000850800
    verify_signal "Chceck TclSim console for event ID 4000850800 (Battery Charging)."
}

DoStep "E-UE-DATA_1-1-1-1_10-1" "Stop sniffer" {
    LogMsg "--- Stop sniffer ---"
    StopCaptureControllerLan
    SaveToFileControllerLan
} {PASS_STEP}


Cleanup



