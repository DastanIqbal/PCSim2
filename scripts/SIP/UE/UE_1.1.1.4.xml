<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	PCPCII-144 : remove the double quotes used in the nonce and response parameter comparisons. (ghassler 10/27/2009)




-->
<pc2xml version="$Revision: 8188 $" 
	name="SIP-UE 1.1.1.4" 
	descrip="Initial Registration Details" 
	number="SIP-UE 1.1.1.4" inspector="disable">
	
	<template file="./templates/UERegAndSubTemp.xml" name="Registrar"/>
	<template file="./templates/CallOrigAtUETemp.xml" name="UE1"/>
	
	<add_to fsm="UE1">
		<states initialstate="WaitRegistered"/>
		<!-- Transitioning from one fsm  to other on SucceedEvent-->
		<state ID="WaitRegistered"  >
			<transition to="OffHook" event="SucceedEvent"/>
		</state>
	</add_to>
	
	<remove_from fsm="Registrar">
		<state ID="PendingRegistration"/>
		<state ID="Registered"/>
		<state ID="NotificationComplete"/>
	</remove_from>
	
	<remove_from fsm="UE1">
		<state ID="Register"/>
		<state ID="Setup"/>
	</remove_from>
	
	<add_to fsm="Registrar">
		<state ID="PendingRegistration">
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="401-REGISTER"/>
					</then>
				</if>
				<verify step="2" requirements="REQ16831">
					<contains>
						<msg_ref type="sip">REGISTER.From</msg_ref>
						<msg_ref type="platform">DUT.pui</msg_ref>
					</contains>
				</verify>
				<verify step="2" requirements="REQ16831">
					<contains>
						<msg_ref type="sip">REGISTER.To</msg_ref>
						<msg_ref type="platform">DUT.pui</msg_ref>
					</contains>
				</verify>
				<verify step="3" requirements="REQ16845, REQ16846">
					<contains>
						<msg_ref type="sip">REGISTER</msg_ref>
						<expr>Authorization:</expr>
					</contains>
				</verify>
				<verify step="4" requirements="REQ16847">
					<contains>
						<msg_ref type="sip">REGISTER.Authorization.username</msg_ref>
						<msg_ref type="platform">DUT.prui</msg_ref>
					</contains>
				</verify>
				<verify step="5" requirements="REQ16848">
					<contains>
						<msg_ref type="sip">REGISTER.Authorization.realm</msg_ref>
						<msg_ref type="platform">DUT.domain</msg_ref>
					</contains>
				</verify>
				<verify step="6" requirements="REQ16849">
					<contains>
						<msg_ref type="sip">REGISTER.Authorization.uri</msg_ref>
						<msg_ref type="platform">DUT.domain</msg_ref>
					</contains>
				</verify>
				<verify step="7" requirements="REQ16850">
					<or>
						<eq>
							<msg_ref type="sip">REGISTER.Authorization.nonce</msg_ref>
							<expr>null</expr>
						</eq>
						<eq>
							<msg_ref type="sip">REGISTER.Authorization.nonce</msg_ref>
							<!-- PCPCII-144 remove the double quotes -->
							<expr></expr>
						</eq>
					</or>
				</verify>
				<verify step="8" requirements="REQ16851">
					<or>
						<eq>
							<msg_ref type="sip">REGISTER.Authorization.response</msg_ref>
							<expr>null</expr>
						</eq>
						<eq>
							<msg_ref type="sip">REGISTER.Authorization.response</msg_ref>
							<!-- PCPCII-144 remove the double quotes -->
							<expr></expr>
						</eq>
					</or>
				</verify>
				<verify step="9" requirements="REQ16852">
					<contains>
						<msg_ref type="sip">REGISTER.From.name-addr</msg_ref>
						<msg_ref type="platform">DUT.pui</msg_ref>
					</contains>
				</verify>
				<verify step="10" requirements="REQ16853">
					<contains>
						<msg_ref type="sip">REGISTER.To.name-addr</msg_ref>
						<msg_ref type="platform">DUT.pui</msg_ref>
					</contains>
				</verify>
				<verify step="11" requirements="REQ16854">
					<or>
						<contains>
							<msg_ref type="sip">REGISTER.Contact.name-addr</msg_ref>
							<msg_ref type="platform">DUT.IP</msg_ref>
						</contains>
						<contains>
							<msg_ref type="sip">REGISTER.Contact.name-addr</msg_ref>
							<msg_ref type="platform">DUT.FQDN</msg_ref>
						</contains>
					</or>
				</verify>
				<verify step="12" requirements="REQ16858">
					<or>
						<contains>
							<msg_ref type="sip">REGISTER.Via.sent-by</msg_ref>
							<msg_ref type="platform">DUT.FQDN</msg_ref>
						</contains>
						<contains>
							<msg_ref type="sip">REGISTER.Via.sent-by</msg_ref>
							<msg_ref type="platform">DUT.IP</msg_ref>
						</contains>
					</or>
				</verify>
				<verify step="13" requirements="REQ16860">
					<or>
						<eq>
							<msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
							<expr>600000</expr>
						</eq>
						<eq>
							<msg_ref type="sip">REGISTER.Expires.value</msg_ref>
							<expr>600000</expr>
						</eq>
					</or>
				</verify>
				<verify step="14" requirements="REQ16861">
					<contains>
						<msg_ref type="sip">REGISTER.Request-Line.Request-URI</msg_ref>
						<msg_ref type="platform">DUT.domain</msg_ref>
					</contains>
				</verify>
				<verify step="15" requirements="REQ16867">
					<contains>
						<msg_ref type="sip" hdr_instance="any">REGISTER.Supported</msg_ref>
						<expr>path</expr>
					</contains>
				</verify>
			</response>
			<transition to="Authorization" event="REGISTER"/>
		</state>
		
		<state ID="Registered">
			<prelude>
				<send protocol="sip" msgtype="200-Register"/>
				<sleep time="500"/>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>FailEvent</expr>
					</eq>
					<then/>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">Request</msg_ref>
								<expr>SUBSCRIBE</expr>
							</eq>
							<or>
								<contains>
									<msg_ref type="sip">SUBSCRIBE.Event</msg_ref>
									<expr>reg</expr>
								</contains>
								<or>
									<contains>
										<msg_ref type="sip">SUBSCRIBE.Event</msg_ref>
										<expr>dialog</expr>
									</contains>
									<contains>
										<msg_ref type="sip">SUBSCRIBE.Event</msg_ref>
										<expr>message-summary</expr>
									</contains>
								</or>
							</or>
						</and>
						<then>
							<send protocol="sip" msgtype="200-SUBSCRIBE"/>
							<sleep time="100"/>
							<send protocol="sip" msgtype="NOTIFY"/>
						</then>
						<else>
							<generate event="FailEvent"/>
						</else>
					</elseif>
				</if>
			</response>
			<transition to="Registered" event="REGISTER"/>
			<transition to="Notification" event="SUBSCRIBE"/>
			<transition to="END" event="FailEvent"/>
		</state>
		
		<state ID="NotificationComplete" ES="True">
			<prelude once="True">
				<generate event="SucceedEvent" fsm="UE1"/>
			</prelude>
		</state>
	</add_to>
	
	<add_to fsm="UE1">
		<state ID="Setup">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="18" requirements="REQ16869, REQ16873">
					<contains>
						<msg_ref type="sip" msg_instance="last" hdr_instance="any">INVITE.Route</msg_ref>
						<msg_ref type="sip" fsm="Registrar" msg_instance="1">200-REGISTER.Service-Route.sr-value</msg_ref>
					</contains>
				</verify>
			</response>
			<transition to="Setup" event="DialDigitsComplete"/>
			<transition to="END" event="INVITE"/>
		</state>
	</add_to>
</pc2xml>
