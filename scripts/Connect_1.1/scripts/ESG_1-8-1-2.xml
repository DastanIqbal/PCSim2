<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	2011-09-20	Marc Weaver - Initial version
	2011-11-15	Seung Lee - final versionfor




-->
<pc2xml version="$Revision: 1 $" 
	name="ESG 1.8.1.2" 
	descrip="INVITE MESSAGE DETAILS (NEGATIVE TEST) - Interwording" 
	number="ESG 1.8.1.2">
	
	<template file="./templates/CallOrigAtUETemp.xml" name="UE0"/>

	<remove_from fsm="UE0">
		<state ID="Register"/>
		<state ID="OffHook"/>
		<state ID="Setup"/>
		<state ID="OnHook"/>
	</remove_from>

		<!-- Delay until first FSM is complete -->
	<add_to fsm="UE0" >	
		<state ID="Register">
			<prelude>
				<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">UE0.IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">UE0.IP2</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">PCSCF1.IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</var_expr>
					</filter>
				</start_capture>
			</prelude>
			<transition to="OffHook" event="Registered"/>
		</state>
	
		<state ID="OffHook">
			<prelude>
				<log expr="Setup the PBX to drop user=phone from Request URI" promptUser="true"/>
				<log expr="Reset or restart the PBX."  promptUser="true"/>
				<send protocol="utility" msgtype="OffHook"/>
			</prelude>
			<!-- Transitions for OffHook state -->
			<transition to="Setup" event="OffHookComplete"/>
		</state>
		
		<state ID="Setup">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<!-- If the current message that we received is an Invite, answer with
		   a 100-trying -->
				<!-- Step 2 in the Call-Orig-at_UE(DUT) Default Message Flow document. -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
						<verify step="5" requirements="REQ23852, REQ23853">
							<contains>
								<msg_ref type="sip">INVITE.Request-Line</msg_ref>
								<expr>user=phone</expr>
							</contains>
						</verify>
					</then>
				</if>
				<!-- This set of tests determines whether to send 183 with Answer
					 or a 180 to the INVITE -->
				<!-- Step 3 in the Call-Orig-at_UE(DUT) Default Message Flow document. -->
				<if>
					<and>
						<eq>
							<msg_ref type="extensions">precondition</msg_ref>
							<expr>require</expr>
						</eq>
						<or>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Require</msg_ref>
								<expr>precondition</expr>
							</contains>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Supported</msg_ref>
								<expr>precondition</expr>
							</contains>
						</or>
					</and>
					<then>
						<!--Sending 183-Invite with answer-->
						<sleep time="200"/>
						<send protocol="sip" msgtype="183-Invite"/>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>Invite</expr>
						</eq>
						<then>
							<!--Sending 180-Invite with SS not supporting precondition.-->
							<sleep time="200"/>
							<send protocol="sip" msgtype="180-Invite"/>
						</then>
					</elseif>
				</if>
			</response>
			<!-- Transitions for Setup state -->
			<transition to="Alerting" event="INVITE"/>
			<transition to="Setup" event="DialDigitsComplete"/>
		</state>

		<state ID="OnHook">
			<prelude>
				<send protocol="utility" msgtype="OnHook"/>
			</prelude>
			<!-- Transitions for OnHook state -->
			<postlude>
				<stop_capture/>	
			</postlude>
			
			<transition to="END" event="OnHookComplete"/>
		</state>
	</add_to>
	

</pc2xml>
