<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)
	PCPCII-139 : Update the Voicetronix modifiers to use the new values. (ghassler 07/10/2009)



-->
<pc2xml version="$Revision: 8188 $" 
	name="RST-UE 1.1.2.2" 
	descrip="Applying Ring back " 
	number="RST-UE 1.1.2.2">

	<template file="./templates/CallOrigAtUETemp.xml" name="UE1"/>

	<remove_from fsm="UE1">
		<state ID="Setup"/>
		<state ID="Alerting"/>
		<state ID="Answer"/>
		<state ID="Connected"/>
		<state ID="OnHook"/>
		<state ID="Releasing"/>
	</remove_from>

	<add_to fsm="UE1">
		<state ID="Setup">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<!-- If the current message that we received is an Invite, answer with
               a 100-trying -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
					</then>
				</if>
				<!-- This set of tests determines whether to send 183 with Answer
						 or a 180 to the INVITE -->
				<if>
					<and>
						<eq>
							<msg_ref type="extensions">precondition</msg_ref>
							<expr>require</expr>
						</eq>
						<or>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Require</msg_ref>
								<expr>precondition</expr>
							</contains>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Supported</msg_ref>
								<expr>precondition</expr>
							</contains>
						</or>
					</and>
					<then>
						<!--Sending 183-Invite with answer-->
						<sleep time="200"/>
						<send protocol="sip" msgtype="183-Invite">
							<mod modtype="add" hdr="Alert-Info">
								<expr>&lt;file:///PacketCableRST/rt&gt;</expr>
							</mod>
						</send>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>Invite</expr>
						</eq>
						<then>
							<!--Sending 180-Invite with SS not supporting precondition.-->
							<sleep time="200"/>
							<send protocol="sip" msgtype="180-Invite">
								<mod modtype="add" hdr="Alert-Info">
									<expr>&lt;file:///PacketCableRST/rt&gt;</expr>
								</mod>
							</send>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Setup" event="DialDigitsComplete"/>
			<transition to="Alerting" event="INVITE"/>
		</state>
		
		<state ID="Alerting">
			<response>
				<!-- Now test to see if the incoming message is a PRACK message because
							 the system is using reliability -->
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PRACK</expr>
						</eq>
						<contains>
							<msg_ref type="sip" msg_instance="last" hdr_instance="any">18x-Invite.Require</msg_ref>
							<expr>100rel</expr>
						</contains>
					</and>
					<then>
						<!--Reliability required for test sending 200-Prack message to peer.-->
						<send protocol="sip" msgtype="200-PRACK"/>
					</then>
				</if>
				<!-- Now test for an UPDATE message -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required or supported sending 200-Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
				<!-- Test whether to send 180 -->
				<if>
					<and>
						<contains>
							<msg_ref type="sip" msg_instance="last">18x-Invite.Status-Line.status-code</msg_ref>
							<expr>183</expr>
						</contains>
						<eq>
							<msg_ref type="sdp">Request.qos-curr-remote.direction</msg_ref>
							<msg_ref type="sdp">Request.qos-des-remote.direction</msg_ref>
						</eq>
					</and>
					<then>
						<!--Sending 180 for required preconditions.-->
						<send protocol="sip" msgtype="180-Invite">
							<mod modtype="add" hdr="Alert-Info">
								<expr>&lt;file:///PacketCableRST/rt&gt;</expr>
							</mod>
						</send>
					</then>
				</if>
			</response>
			<transition to="Alerting" event="DialDigitsComplete"/>
			<transition to="Alerting" event="PRACK"/>
			<transition to="Alerting" event="UPDATE"/>
			<transition to="VerifyRingBack" event="ALERTING_UAS"/>
		</state>
		
		<state ID="VerifyRingBack">
			<prelude>
				<send protocol="utility" msgtype="VerifyRingBack"/>
			</prelude>
			<postlude>
				<verify step="1" requirements="REQ13422">
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>VerifyRingBackComplete</expr>
					</eq>
				</verify>
			</postlude>
			<transition to="EndCall1" event="VerifyRingBackComplete"/>
			<transition to="EndCall1" event="VerifyRingBackError"/>
		</state>
		
		<state ID="EndCall1" ES="true">
			<transition to="2ndOffHook" event="SessionTerminated"/>
		</state>
		
		<state ID="2ndOffHook">
			<prelude>
				<send protocol="utility" msgtype="OffHook"/>
			</prelude>
			<transition to="2ndSetup" event="OffHookComplete"/>
		</state>
		
		<state ID="2ndSetup">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<!-- If the current message that we received is an Invite, answer with
               a 100-trying -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
					</then>
				</if>
				<!-- This set of tests determines whether to send 183 with Answer
						 or a 180 to the INVITE -->
				<if>
					<and>
						<eq>
							<msg_ref type="extensions">precondition</msg_ref>
							<expr>require</expr>
						</eq>
						<or>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Require</msg_ref>
								<expr>precondition</expr>
							</contains>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Supported</msg_ref>
								<expr>precondition</expr>
							</contains>
						</or>
					</and>
					<then>
						<!--Sending 183-Invite with answer-->
						<sleep time="200"/>
						<send protocol="sip" msgtype="183-Invite">
							<mod modtype="add" hdr="Alert-Info">
								<expr>&lt;file:///PacketCableRST/bogus&gt;</expr>
							</mod>
						</send>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>Invite</expr>
						</eq>
						<then>
							<!--Sending 180-Invite with SS not supporting precondition.-->
							<sleep time="200"/>
							<send protocol="sip" msgtype="180-Invite">
								<mod modtype="add" hdr="Alert-Info">
									<expr>&lt;file:///PacketCableRST/bogus&gt;</expr>
								</mod>
							</send>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="2ndSetup" event="DialDigitsComplete"/>
			<transition to="2ndAlerting" event="INVITE"/>
		</state>
		
		<state ID="2ndAlerting">
			<response>
				<!-- Now test to see if the incoming message is a PRACK message because
							 the system is using reliability -->
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PRACK</expr>
						</eq>
						<contains>
							<msg_ref type="sip" msg_instance="last" hdr_instance="any">18x-Invite.Require</msg_ref>
							<expr>100rel</expr>
						</contains>
					</and>
					<then>
						<!--Reliablity required for test sending 200-Prack message to peer.-->
						<send protocol="sip" msgtype="200-PRACK"/>
					</then>
				</if>
				<!-- Now test for an UPDATE message -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required or supported sending 200-Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
				<!-- Test whether to send 180 -->
				<if>
					<and>
						<contains>
							<msg_ref type="sip" msg_instance="last">18x-Invite.Status-Line.status-code</msg_ref>
							<expr>183</expr>
						</contains>
						<eq>
							<msg_ref type="sdp">Request.qos-curr-remote.direction</msg_ref>
							<msg_ref type="sdp">Request.qos-des-remote.direction</msg_ref>
						</eq>
					</and>
					<then>
						<!--Sending 180 for required preconditions.-->
						<send protocol="sip" msgtype="180-Invite">
							<mod modtype="add" hdr="Alert-Info">
								<expr>&lt;file:///PacketCableRST/bogus&gt;</expr>
							</mod>
						</send>
					</then>
				</if>
			</response>
			<transition to="2ndAlerting" event="DialDigitsComplete"/>
			<transition to="2ndAlerting" event="PRACK"/>
			<transition to="2ndAlerting" event="UPDATE"/>
			<transition to="2ndVerifyRingBack" event="ALERTING_UAS"/>
		</state>
		
		<state ID="2ndVerifyRingBack">
			<prelude>
				<!--Step 3  -->
				<send protocol="utility" msgtype="VerifyRingBack"/>
			</prelude>
			<postlude>
				<verify step="3" requirements="REQ13423">
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>VerifyRingBackComplete</expr>
					</eq>
				</verify>
			</postlude>
			<transition to="EndCall2" event="VerifyRingBackComplete"/>
			<transition to="EndCall2" event="VerifyRingBackError"/>
		</state>
		
		<state ID="EndCall2" ES="true">
			<transition to="3rdOffHook" event="SessionTerminated"/>
		</state>
		
		<state ID="3rdOffHook">
			<prelude>
				<send protocol="utility" msgtype="OffHook"/>
			</prelude>
			<transition to="3rdSetup" event="OffHookComplete"/>
		</state>
		
		<state ID="3rdSetup">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<!-- If the current message that we received is an Invite, answer with
               a 100-trying -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
					</then>
				</if>
				<!-- This set of tests determines whether to send 183 with Answer
						 or a 180 to the INVITE -->
				<if>
					<and>
						<eq>
							<msg_ref type="extensions">precondition</msg_ref>
							<expr>require</expr>
						</eq>
						<or>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Require</msg_ref>
								<expr>precondition</expr>
							</contains>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Supported</msg_ref>
								<expr>precondition</expr>
							</contains>
						</or>
					</and>
					<then>
						<!--Sending 183-Invite with answer-->
						<sleep time="200"/>
						<send protocol="sip" msgtype="183-Invite">
							<mod modtype="delete" hdr="Alert-Info"/>
							<mod modtype="delete" hdr="SDP"/>
						</send>
						<start_stream name="vm" file="../config/tones/tone1.rtp" format="G711">
							<to>
								<ip>
									<msg_ref type="sdp" msg_instance="last">INVITE.c.address</msg_ref>
								</ip>
								<port>
									<msg_ref type="sdp" msg_instance="last">INVITE.audio.port</msg_ref>
								</port>
							</to>
							<from>
								<ip>
									<msg_ref type="platform">Platform.STUN IP Address</msg_ref>
								</ip>
								<port>
									<msg_ref type="platform">Platform.RTP Port1</msg_ref>
								</port>
							</from>
						</start_stream>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>Invite</expr>
						</eq>
						<then>
							<!--Sending 180-Invite with SS not supporting precondition.-->
							<sleep time="200"/>
							<send protocol="sip" msgtype="180-Invite">
								<mod modtype="delete" hdr="Alert-Info"/>
								<mod modtype="delete" hdr="SDP"/>
							</send>
							<start_stream name="vm" file="../config/tones/tone1.rtp" format="G711">
								<to>
									<ip>
										<msg_ref type="sdp" msg_instance="last">INVITE.c.address</msg_ref>
									</ip>
									<port>
										<msg_ref type="sdp" msg_instance="last">INVITE.audio.port</msg_ref>
									</port>
								</to>
								<from>
									<ip>
										<msg_ref type="platform">Platform.STUN IP Address</msg_ref>
									</ip>
									<port>
										<msg_ref type="platform">Platform.RTP Port1</msg_ref>
									</port>
								</from>
							</start_stream>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="3rdSetup" event="DialDigitsComplete"/>
			<transition to="3rdAlerting" event="INVITE"/>
		</state>
		<state ID="3rdAlerting">
			<response>
				<!-- Now test to see if the incoming message is a PRACK message because
							 the system is using reliability -->
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PRACK</expr>
						</eq>
						<contains>
							<msg_ref type="sip" msg_instance="last" hdr_instance="any">18x-Invite.Require</msg_ref>
							<expr>100rel</expr>
						</contains>
					</and>
					<then>
						<!--Reliability required for test sending 200-Prack message to peer.-->
						<send protocol="sip" msgtype="200-PRACK"/>
					</then>
				</if>
				<!-- Now test for an UPDATE message -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required or supported sending 200-Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
				<!-- Test whether to send 180 -->
				<if>
					<and>
						<contains>
							<msg_ref type="sip" msg_instance="last">18x-Invite.Status-Line.status-code</msg_ref>
							<expr>183</expr>
						</contains>
						<eq>
							<msg_ref type="sdp">Request.qos-curr-remote.direction</msg_ref>
							<msg_ref type="sdp">Request.qos-des-remote.direction</msg_ref>
						</eq>
					</and>
					<then>
						<!--Sending 180 for required preconditions.-->
						<send protocol="sip" msgtype="180-Invite">
							<mod modtype="delete" hdr="Alert-Info"/>
							<mod modtype="delete" hdr="SDP"/>
						</send>
					</then>
				</if>
			</response>
			<transition to="3rdAlerting" event="DialDigitsComplete"/>
			<transition to="3rdAlerting" event="PRACK"/>
			<transition to="3rdAlerting" event="UPDATE"/>
			<transition to="3rdVerifyRingBack" event="ALERTING_UAS"/>
		</state>
		
		<state ID="3rdVerifyRingBack">
			<prelude>
				<send protocol="utility" msgtype="VerifyRingBack"/>
			</prelude>
			<postlude>
				<stop_stream name="vm"/>
				<verify step="5" requirements="REQ13424, REQ13430">
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>VerifyRingBackComplete</expr>
					</eq>
				</verify>
			</postlude>
			<transition to="EndCall3" event="VerifyRingBackComplete"/>
			<transition to="EndCall3" event="VerifyRingBackError"/>
		</state>
		
		<state ID="EndCall3" ES="true">
			<transition to="4thOffHook" event="SessionTerminated"/>
		</state>
		
		<state ID="4thOffHook">
			<prelude>
				<send protocol="utility" msgtype="OffHook"/>
			</prelude>
			<transition to="4thSetup" event="OffHookComplete"/>
		</state>
		
		<state ID="4thSetup">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<!-- If the current message that we received is an Invite, answer with
               a 100-trying -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
					</then>
				</if>
				<!-- This set of tests determines whether to send 183 with Answer
						 or a 180 to the INVITE -->
				<if>
					<and>
						<eq>
							<msg_ref type="extensions">precondition</msg_ref>
							<expr>require</expr>
						</eq>
						<or>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Require</msg_ref>
								<expr>precondition</expr>
							</contains>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Supported</msg_ref>
								<expr>precondition</expr>
							</contains>
						</or>
					</and>
					<then>
						<!--Sending 183-Invite with answer-->
						<sleep time="200"/>
						<send protocol="sip" msgtype="183-Invite" bodies="SDP">
							<mod modtype="delete" hdr="Alert-Info"/>
						</send>
						<start_stream name="tone2" file="../config/tones/tone2.rtp" format="G711">
							<to>
								<ip>
									<msg_ref type="sdp" msg_instance="last">INVITE.c.address</msg_ref>
								</ip>
								<port>
									<msg_ref type="sdp" msg_instance="last">INVITE.audio.port</msg_ref>
								</port>
							</to>
							<from>
								<ip>
									<msg_ref type="platform">Platform.STUN IP Address</msg_ref>
								</ip>
								<port>
									<msg_ref type="platform">Platform.RTP Port1</msg_ref>
								</port>
							</from>
						</start_stream>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>Invite</expr>
						</eq>
						<then>
							<!--Sending 180-Invite with SS not supporting precondition.-->
							<sleep time="200"/>
							<send protocol="sip" msgtype="180-Invite" bodies="SDP">
								<mod modtype="delete" hdr="Alert-Info"/>
							</send>
							<start_stream name="tone2" file="../config/tones/tone2.rtp" format="G711">
							<to>
								<ip>
									<msg_ref type="sdp" msg_instance="last">INVITE.c.address</msg_ref>
								</ip>
								<port>
									<msg_ref type="sdp" msg_instance="last">INVITE.audio.port</msg_ref>
								</port>
							</to>
							<from>
								<ip>
									<msg_ref type="platform">Platform.STUN IP Address</msg_ref>
								</ip>
								<port>
									<msg_ref type="platform">Platform.RTP Port1</msg_ref>
								</port>
							</from>
						</start_stream>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="4thSetup" event="DialDigitsComplete"/>
			<transition to="4thAlerting" event="INVITE"/>
		</state>
		
		<state ID="4thAlerting">
			<response>
				<!-- Now test to see if the incoming message is a PRACK message because
							 the system is using reliability -->
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PRACK</expr>
						</eq>
						<contains>
							<msg_ref type="sip" msg_instance="last" hdr_instance="any">18x-Invite.Require</msg_ref>
							<expr>100rel</expr>
						</contains>
					</and>
					<then>
						<!--Reliability required for test sending 200-Prack message to peer.-->
						<send protocol="sip" msgtype="200-PRACK"/>
					</then>
				</if>
				<!-- Now test for an UPDATE message -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required or supported sending 200-Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
				<!-- Test whether to send 180 -->
				<if>
					<and>
						<contains>
							<msg_ref type="sip" msg_instance="last">18x-Invite.Status-Line.status-code</msg_ref>
							<expr>183</expr>
						</contains>
						<eq>
							<msg_ref type="sdp">Request.qos-curr-remote.direction</msg_ref>
							<msg_ref type="sdp">Request.qos-des-remote.direction</msg_ref>
						</eq>
					</and>
					<then>
						<!--Sending 180 for required preconditions.-->
						<send protocol="sip" msgtype="180-Invite" bodies="SDP">
							<mod modtype="delete" hdr="Alert-Info"/>
						</send>
					</then>
				</if>
			</response>
			<transition to="4thAlerting" event="DialDigitsComplete"/>
			<transition to="4thAlerting" event="PRACK"/>
			<transition to="4thAlerting" event="UPDATE"/>
			<transition to="4thVerifyRingBack" event="ALERTING_UAS"/>
		</state>
		
		<state ID="4thVerifyRingBack">
			<prelude>
				<log promptUser="True" yesExpected="True" verify="True" 
					step="7" requirements="REQ13425" 
					expr="Verify that the UE-A plays out the RTP packets and does not locally apply ringback."/>
				<generate event="SucceedEvent"/>
				<stop_stream name="tone2"/>
			</prelude>
			<transition to="EndCall4" event="SucceedEvent"/>
		</state>
		
		<state ID="EndCall4" ES="true">
			<transition to="5thOffHook" event="SessionTerminated"/>
		</state>
		
		<state ID="5thOffHook">
			<prelude>
				<send protocol="utility" msgtype="OffHook"/>
			</prelude>
			<transition to="5thSetup" event="OffHookComplete"/>
		</state>
		<state ID="5thSetup">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<!-- If the current message that we received is an Invite, answer with
               a 100-trying -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
					</then>
				</if>
				<!-- This set of tests determines whether to send 183 with Answer
						 or a 180 to the INVITE -->
				<if>
					<and>
						<eq>
							<msg_ref type="extensions">precondition</msg_ref>
							<expr>require</expr>
						</eq>
						<or>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Require</msg_ref>
								<expr>precondition</expr>
							</contains>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Supported</msg_ref>
								<expr>precondition</expr>
							</contains>
						</or>
					</and>
					<then>
						<!--Sending 183-Invite with answer-->
						<sleep time="200"/>
						<send protocol="sip" msgtype="183-Invite" bodies="SDP">
							<mod modtype="delete" hdr="Alert-Info"/>
						</send>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>Invite</expr>
						</eq>
						<then>
							<!--Sending 180-Invite with SS not supporting precondition.-->
							<sleep time="200"/>
							<send protocol="sip" msgtype="180-Invite" bodies="SDP">
								<mod modtype="delete" hdr="Alert-Info"/>
							</send>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="5thSetup" event="DialDigitsComplete"/>
			<transition to="5thAlerting" event="INVITE"/>
		</state>
		
		<state ID="5thAlerting">
			<response>
				<!-- Now test to see if the incoming message is a PRACK message because
							 the system is using reliability -->
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PRACK</expr>
						</eq>
						<contains>
							<msg_ref type="sip" msg_instance="last" hdr_instance="any">18x-Invite.Require</msg_ref>
							<expr>100rel</expr>
						</contains>
					</and>
					<then>
						<!--Reliability required for test sending 200-Prack message to peer.-->
						<send protocol="sip" msgtype="200-PRACK"/>
					</then>
				</if>
				<!-- Now test for an UPDATE message -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required or supported sending 200-Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
				<!-- Test whether to send 180 -->
				<if>
					<and>
						<contains>
							<msg_ref type="sip" msg_instance="last">18x-Invite.Status-Line.status-code</msg_ref>
							<expr>183</expr>
						</contains>
						<eq>
							<msg_ref type="sdp">Request.qos-curr-remote.direction</msg_ref>
							<msg_ref type="sdp">Request.qos-des-remote.direction</msg_ref>
						</eq>
					</and>
					<then>
						<!--Sending 180 for required preconditions.-->
						<send protocol="sip" msgtype="180-Invite" bodies="SDP">
							<mod modtype="delete" hdr="Alert-Info"/>
						</send>
					</then>
				</if>
			</response>
			<transition to="5thAlerting" event="DialDigitsComplete"/>
			<transition to="5thAlerting" event="PRACK"/>
			<transition to="5thAlerting" event="UPDATE"/>
			<transition to="5thVerifyRingBack" event="ALERTING_UAS"/>
		</state>
		
		<state ID="5thVerifyRingBack">
			<prelude>
				<send protocol="utility" msgtype="VerifyRingBack"/>
			</prelude>
			<postlude>
				<verify step="9" requirements="REQ13426">
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>VerifyRingBackComplete</expr>
					</eq>
				</verify>
			</postlude>
			<transition to="EndCall5" event="VerifyRingBackComplete"/>
			<transition to="EndCall5" event="VerifyRingBackError"/>
		</state>
		
		<state ID="EndCall5" ES="true">
			<transition to="6thOffHook" event="SessionTerminated"/>
		</state>
		
		<state ID="6thOffHook">
			<prelude>
				<send protocol="utility" msgtype="OffHook"/>
			</prelude>
			<transition to="6thSetup" event="OffHookComplete"/>
		</state>
		
		<state ID="6thSetup">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<!-- If the current message that we received is an Invite, answer with
               a 100-trying -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
					</then>
				</if>
				<!-- This set of tests determines whether to send 183 with Answer
						 or a 180 to the INVITE -->
				<if>
					<and>
						<eq>
							<msg_ref type="extensions">precondition</msg_ref>
							<expr>require</expr>
						</eq>
						<or>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Require</msg_ref>
								<expr>precondition</expr>
							</contains>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Supported</msg_ref>
								<expr>precondition</expr>
							</contains>
						</or>
					</and>
					<then>
						<!--Sending 183-Invite with answer-->
						<sleep time="200"/>
						<send protocol="sip" msgtype="183-Invite">
							<mod modtype="delete" hdr="Alert-Info"/>
							<mod modtype="delete" hdr="SDP"/>
						</send>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>Invite</expr>
						</eq>
						<then>
							<!--Sending 180-Invite with SS not supporting precondition.-->
							<sleep time="200"/>
							<send protocol="sip" msgtype="180-Invite">
								<mod modtype="delete" hdr="Alert-Info"/>
								<mod modtype="delete" hdr="SDP"/>
							</send>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="6thSetup" event="DialDigitsComplete"/>
			<transition to="6thAlerting" event="INVITE"/>
		</state>
		
		<state ID="6thAlerting">
			<response>
				<!-- Now test to see if the incoming message is a PRACK message because
							 the system is using reliability -->
				<if>
					<and>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>PRACK</expr>
						</eq>
						<contains>
							<msg_ref type="sip" msg_instance="last" hdr_instance="any">18x-Invite.Require</msg_ref>
							<expr>100rel</expr>
						</contains>
					</and>
					<then>
						<!--Reliability required for test sending 200-Prack message to peer.-->
						<send protocol="sip" msgtype="200-PRACK"/>
					</then>
				</if>
				<!-- Now test for an UPDATE message -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required or supported sending 200-Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
				<!-- Test whether to send 180 -->
				<if>
					<and>
						<contains>
							<msg_ref type="sip" msg_instance="last">18x-Invite.Status-Line.status-code</msg_ref>
							<expr>183</expr>
						</contains>
						<eq>
							<msg_ref type="sdp">Request.qos-curr-remote.direction</msg_ref>
							<msg_ref type="sdp">Request.qos-des-remote.direction</msg_ref>
						</eq>
					</and>
					<then>
						<!--Sending 180 for required preconditions.-->
						<send protocol="sip" msgtype="180-Invite">
							<mod modtype="delete" hdr="Alert-Info"/>
							<mod modtype="delete" hdr="SDP"/>
						</send>
					</then>
				</if>
			</response>
			<transition to="6thAlerting" event="DialDigitsComplete"/>
			<transition to="6thAlerting" event="PRACK"/>
			<transition to="6thAlerting" event="UPDATE"/>
			<transition to="6thVerifyRingBack" event="ALERTING_UAS"/>
		</state>
		
		<state ID="6thVerifyRingBack">
			<prelude>
				<send protocol="utility" msgtype="VerifyRingBack"/>
			</prelude>
			<postlude>
				<verify step="11" requirements="REQ13512">
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>VerifyRingBackComplete</expr>
					</eq>
				</verify>
			</postlude>
			<transition to="END" event="VerifyRingBackComplete"/>
			<transition to="END" event="VerifyRingBackError"/>
		</state>
	</add_to>
</pc2xml>
