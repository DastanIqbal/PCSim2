<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	PCPCII-135 : UPdate the script to accommodate a de-register message during the reboot. (ghassler 06/24/2009)
	PCPCII-139 : Update the Voicetronix modifiers to use the new values. (ghassler 07/10/2009)



-->
<pc2xml version="$Revision: 8188 $" 
	name="RST-UE 1.9.2.1" 
	descrip="Ability for UE to request DHCP option 99" 
	number="RST-UE 1.9.2.1" inspector="disable">
	
	<template file="./templates/CallOrigAtUETemp.xml" name="UE1"/>
	<template file="./templates/UERegAndSubTemp.xml" name="Registrar"/>

	<remove_from fsm="Registrar">
		<state ID="Reboot"/>
		<state ID="PendingRegistration"/>
		<state ID="NotificationComplete"/>
		<state ID="Notification"/>
	</remove_from>

	<remove_from fsm="UE1">
		<state ID="Setup"/>
	</remove_from>
	
	<add_to fsm="Registrar">
		<state ID="Reboot" timer="5000">
			<!-- First we need to power cycle the UE to conduct the test -->
			<prelude once="true">
				<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">UE1.IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">DUT.IP</msg_ref>
						</var_expr>
					</filter>
				</start_capture>
				<send protocol="utility" msgtype="SNMPSet">
					<mod modtype="add" hdr="array">
						<var_expr>
							<expr>varBind 1 1 3 \r\n ][ , </expr>
							<expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetNow.0,INTEGER,1][\r\n</expr>
						</var_expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>SNMPRespFailure</expr>
					</eq>
					<then>
						<fail/>
					</then>
				</if>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
							<expr>0</expr>
						</eq>
						<eq>
							<msg_ref type="sip">REGISTER.Expires.value</msg_ref>
							<expr>0</expr>
						</eq>
					</or>
					<then>
						<send protocol="sip" msgtype="200-REGISTER"/>
					</then>
				</if>
			</response>
			<transition to="Reboot" event="SNMPResp"/>
			<transition to="PendingRegistration" event="TimerExpired"/>
			<transition to="END" event="SNMPRespFailure"/>
			<transition to="Reboot" event="REGISTER"/>
		</state>
		
		<state ID="PendingRegistration">
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="401-REGISTER"/>
					</then>
				</if>
			</response>
			<transition to="Authorization" event="REGISTER"/>
		</state>
		
		<state ID="Notification">
			<postlude>
				<generate event="SucceedEvent" fsm="UE1"/>
			</postlude>
			<transition to="NotificationComplete" event="200-NOTIFY"/>
		</state>
		
		<state ID="NotificationComplete">
			<prelude>
				<stop_capture/>
			</prelude>
			<transition to="END" event="SucceedEvent"/>
		</state>
	</add_to>
	
	<add_to fsm="UE1">
		<NE targets="service:sos"/>
		
		<states initialstate="WaitSucceedEvent">
			<state ID="WaitSucceedEvent">
				<transition to="OffHook" event="SucceedEvent"/>
			</state>

			<state ID="Setup">
				<prelude>
					<sleep time="5000"/>
					<send protocol="utility" msgtype="DialDigits">
						<mod modtype="add" hdr="number">
							<expr>911</expr>
						</mod>
					</send>
				</prelude>
				<transition to="Setup" event="DialDigitsComplete"/>
				<transition to="EndCall" event="INVITE"/>
			</state>
			
			<state ID="EndCall" ES="true">
				<prelude once="true">
					<log promptUser="true" yesExpected="True" verify="True" 
						step="5" requirements="REQ14052, REQ14053, REQ14054" 
						expr="In the Packet Analyzer Log, verify that DHCP DISCOVER/ Request Message \ncontains the DHCP Option-55 with the required DHCP Option 99?"/>
					<log promptUser="true" yesExpected="True" verify="True" 
						step="7" requirements="REQ14052" 
						expr="Verify that the INVITE message contains a body of PIDF-LO and \nits value is same as given to the UE in OPTION 99?"/>
					<generate event="SucceedEvent" fsm="Registrar"/>
				</prelude>
				<transition to="EndCall" event="DialDigitsComplete"/>
			</state>
		</states>
	</add_to>
</pc2xml>
