<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)
	PCPCII-136 & PCPCII-140 - Update the script to match all of the changes made to the D09 version of the
		ATP. (ghassler 07/01/2009 & 08/04/2009)
	PCPCII-158: Update the max-prate to 34 instead of 33.3 (ghassler 11/14/2009)
	PCPCII-496: Move the verifys from the response parent to the test for INVITE. (ghassler 07/06/2010)
	PCPCII-478: Update the maxprate to 33.3 instead of 34 (ghassler 8/9/2010) 

-->
<pc2xml version="$Revision: 8188 $" 
	name="CODEC-MEDIA_1.1.10" 
	descrip="G.711 UE Origination Session (PCMA) " 
	number="CODEC-MEDIA _1.1.10">
	
	<template file="./templates/CallOrigAtUETemp.xml" name="UE1"/>

	<remove_from fsm="UE1">
		<state ID="Setup"/>
		<state ID="Answer"/>
		<state ID="OnHook"/>
	</remove_from>

	<add_to fsm="UE1">
		<state ID="Setup">
			<prelude once="true">
				<!--  STEP 1 -->
				<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">UE0.IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">Platform.SIP Stack 1 IP Address</msg_ref>
						</var_expr>
					</filter>
				</start_capture>
				
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
				
			</prelude>
			
			<response>
				<!-- STEP 2 -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="100-INVITE"/>
						<!-- STEPS 2, 3, and 4 -->
						<verify step="2 3 4" requirements="RFC2256, RFC2260, RFC2632, RFC2633, RFC2636, RFC2643, RFC2651, RFC2652, REQ9289, REQ13336">
							<contains>
								<msg_ref type="sip">INVITE.SDP</msg_ref>
								<expr>m=audio</expr>
							</contains>
						</verify>
						
						<!-- STEPS 3 and 5 -->
						<verify step="5" requirements="RFC2256">
							<and>
								<gt>
									<msg_ref type="sdp" msg_instance="last">INVITE.audio.port</msg_ref>
									<expr>0</expr>
								</gt>
								<lt>
									<msg_ref type="sdp" msg_instance="last">INVITE.audio.port</msg_ref>
									<expr>65536</expr>
								</lt>
							</and>
						</verify>
						
						<!-- STEPS 3 and 6 -->
						<verify step="6" requirements="RFC2256">
							<eq>
								<msg_ref type="sdp">INVITE.audio.protocol</msg_ref>
								<expr>RTP/AVP</expr>
							</eq>
						</verify>
						
						<!-- STEPS 3 and 7 -->
						<verify step="7" requirements="REQ12494, REQ12628">
							<or>
								<contains>
									<msg_ref type="sdp">INVITE.audio.payload-type</msg_ref>
									<expr>8</expr>
								</contains>
								<contains>
									<msg_ref type="sdp">INVITE.audio.payload-type</msg_ref>
									<expr>0</expr>
								</contains>
							</or>
						</verify>
					</then>
				</if>
				<!-- This set of tests determines whether to send 183 with Answer
					 or a 180 to the INVITE -->
				<!-- Step 3 in the Call-Orig-at_UE(DUT) Default Message Flow document. -->
				<if>
					<and>
						<eq>
							<msg_ref type="extensions">precondition</msg_ref>
							<expr>require</expr>
						</eq>
						<or>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Require</msg_ref>
								<expr>precondition</expr>
							</contains>
							<contains>
								<msg_ref type="sip" hdr_instance="any">Invite.Supported</msg_ref>
								<expr>precondition</expr>
							</contains>
						</or>
					</and>
					<then>
						<!--Sending 183-Invite with answer-->
						<sleep time="200"/>
						<send protocol="sip" msgtype="183-Invite">
							<mod modtype="replace" hdr="audio" param="payload-type">
								<expr>8</expr>
							</mod>
							<mod modtype="replace" hdr="rtpmap" param="codec-name">
								<expr>PCMA</expr>
							</mod>
							<mod modtype="replace" hdr="rtpmap" param="payload-type">
								<expr>8</expr>
							</mod>
						</send>
					</then>
					<elseif>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>Invite</expr>
						</eq>
						<then>
							<!--Sending 180-Invite with SS not supporting precondition.-->
							<sleep time="200"/>
							<send protocol="sip" msgtype="180-Invite"/>
						</then>
					</elseif>
					
				</if>
				<!--  This operation is to provide the correct data for the prompt in
					step 8 -->
				<if>
					<notnull>
						<msg_ref type="sdp">INVITE.ptime.value</msg_ref>
					</notnull>
					<then>
						<var name="rate">
							<msg_ref type="sdp">INVITE.ptime.value</msg_ref>
						</var>
					</then>
					<else>
						<var name="rate">
							<expr>20</expr>
						</var>
					</else>
				</if>
				
				
				<if>
					<eq>
						<msg_ref type="sdp">INVITE.ptime.value</msg_ref>
						<expr>10</expr>
					</eq>
					<then>
						<!-- STEPS 3 and 8 -->
						<verify step="8" requirements="REQ14372" group="ptime">
							<eq>
								<msg_ref type="sdp">INVITE.ptime.value</msg_ref>
								<expr>10</expr>
							</eq>
						</verify>
						
						<!-- STEPS 3 and 9 -->
						<verify step="9" requirements="REQ14375, REQ14376, REQ14380" group="as">
							<eq>
								<msg_ref type="sdp">INVITE.media-modifier.value</msg_ref>
								<expr>96</expr>
							</eq>
						</verify>
						
						<!-- STEPS 3 and 10 -->
						<verify step="10" requirements="RFC2618, RFC2619, RFC2621, RFC2622, RFC2623, RFC2624, RFC2625, RFC2626, REQ14375, REQ14376, REQ14380" group="tias">
							<eq>
								<msg_ref type="sdp">INVITE.TIAS-modifier.value</msg_ref>
								<expr>64000</expr>
							</eq>
						</verify>
						
						<!-- STEPS 3 and 11 -->
						<verify step="11" requirements="REQ14375, REQ14376, REQ14380" group="maxprate">
							<or>
								<eq>
									<msg_ref type="sdp">INVITE.max-packet-rate.value</msg_ref>
									<expr>100.0</expr>
								</eq>
								<eq>
									<msg_ref type="sdp">INVITE.max-packet-rate.value</msg_ref>
									<expr>100</expr>
								</eq>
							</or>
						</verify>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sdp">INVITE.ptime.value</msg_ref>
								<expr>20</expr>
							</eq>
							<eq>
								<msg_ref type="sdp">INVITE.ptime.value</msg_ref>
								<expr/>
							</eq>
						</or>
						<then>
							<!-- STEPS 3 and 8 -->
							<verify step="8" requirements="REQ14372" group="ptime">
								<or>
									<eq>
										<msg_ref type="sdp">INVITE.ptime.value</msg_ref>
										<expr>20</expr>
									</eq>
									<eq>
										<msg_ref type="sdp">INVITE.ptime.value</msg_ref>
										<expr/>
									</eq>
								</or>
							</verify>
							
							<!-- STEPS 3 and 9 -->
							<verify step="9" requirements="REQ14375, REQ14376, REQ14380" group="as">
								<eq>
									<msg_ref type="sdp">INVITE.media-modifier.value</msg_ref>
									<expr>80</expr>
								</eq>
							</verify>
							
							<!-- STEPS 3 and 10 -->
							<verify step="10" requirements="RFC2618, RFC2619, RFC2621, RFC2622, RFC2623, RFC2624, RFC2625, RFC2626, REQ14375, REQ14376, REQ14380" group="tias">
								<eq>
									<msg_ref type="sdp">INVITE.TIAS-modifier.value</msg_ref>
									<expr>64000</expr>
								</eq>
							</verify>
							
							<!-- STEPS 3 and 11 -->
							<verify step="11" requirements="REQ14375, REQ14376, REQ14380" group="maxprate">
								<or>
									<eq>
										<msg_ref type="sdp">INVITE.max-packet-rate.value</msg_ref>
										<expr>50.0</expr>
									</eq>
									<eq>
										<msg_ref type="sdp">INVITE.max-packet-rate.value</msg_ref>
										<expr>50</expr>
									</eq>
								</or>
							</verify>
						</then>
					</elseif>
					<elseif>
						<eq>
							<msg_ref type="sdp">INVITE.ptime.value</msg_ref>
							<expr>30</expr>
						</eq>
						<then>
							<!-- STEPS 3 and 8 -->
							<verify step="8" requirements="REQ14372" group="ptime">
								<eq>
									<msg_ref type="sdp">INVITE.ptime.value</msg_ref>
									<expr>30</expr>
								</eq>
							</verify>
							
							<!-- STEPS 3 and 9 -->
							<verify step="9" requirements="REQ14375, REQ14376, REQ14380" group="as">
								<eq>
									<msg_ref type="sdp">INVITE.media-modifier.value</msg_ref>
									<expr>75</expr>
								</eq>
							</verify>
							
							<!-- STEPS 3 and 10 -->
							<verify step="10" requirements="RFC2618, RFC2619, RFC2621, RFC2622, RFC2623, RFC2624, RFC2625, RFC2626, REQ14375, REQ14376, REQ14380" group="tias">
								<eq>
									<msg_ref type="sdp">INVITE.TIAS-modifier.value</msg_ref>
									<expr>64000</expr>
								</eq>
							</verify>
							
							<!-- STEPS 3 and 11 -->
							<verify step="11" requirements="REQ14375, REQ14376, REQ14380" group="maxprate">
								<eq>
									<msg_ref type="sdp">INVITE.max-packet-rate.value</msg_ref>
									<expr>33.3</expr>
								</eq>
							</verify>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Setup" event="DialDigitsComplete"/>
			<transition to="Alerting" event="INVITE"/>
		</state>
		
		<state ID="Answer" timer="15000">
			<response>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>TimerExpired</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="200-INVITE">
							<mod modtype="replace" hdr="audio" param="payload-type">
								<expr>8</expr>
							</mod>
							<mod modtype="replace" hdr="rtpmap" param="codec-name">
								<expr>PCMA</expr>
							</mod>
							<mod modtype="replace" hdr="rtpmap" param="payload-type">
								<expr>8</expr>
							</mod>
							<mod modtype="replace" hdr="max-packet-rate" param="value">
								<expr>33.3</expr>
							</mod>
						</send>
					</then>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required or supported sending 200-Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
				</if>
			</response>
			<transition to="Answer" event="UPDATE"/>
			<transition to="Answer" event="TimerExpired"/>
			<transition to="Connected" event="ACK"/>
		</state>
		
		<state ID="OnHook">
			<prelude>
				<stop_capture/>
				<send protocol="utility" msgtype="OnHook"/>
			</prelude>
			<postlude>
				<log promptUser="true" verify="true" step="8" 
				requirements=""
				expr="Are the RTP packets arriving at approximately $rate msec intervals within the capture file?"/>
			</postlude>	
			<transition to="END" event="OnHookComplete"/>
		</state>
	</add_to>
</pc2xml>
