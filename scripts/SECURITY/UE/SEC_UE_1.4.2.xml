<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)





-->
<pc2xml version="$Revision: 8188 $" 
	name="SECURITY 1.4.2" 
	descrip="UE Fails Registration when TLS is Established and 403 Response is Received" 
	number="SECURITY 1.4.2">
	
	<template file="./templates/UERegAndSubTemp.xml" name="Registrar"/>
	<template file="./templates/CallOrigAtUETemp.xml" name="UE1"/>

	<add_to fsm="Registrar">
		<states initialstate="WaitForSucceedEvent"/>
	</add_to>

	<remove_from fsm="Registrar">
		<state ID="PendingRegistration"/>
		<state ID="Notification"/>
		<state ID="NotificationComplete"/>
	</remove_from>

	<remove_from fsm="UE1">
		<state ID="Setup"/>
	</remove_from>

	<add_to fsm="Registrar">
		<state ID="PendingRegistration">
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="401-REGISTER">
							<mod modtype="replace" hdr="Security-Server">
								<expr> tls; q=0.1</expr>
							</mod>
							<mod modtype="add" hdr="Require">
								<expr>sec-agree</expr>
							</mod>
							<mod modtype="add" hdr="Proxy-Require">
								<expr>sec-agree</expr>
							</mod>
						</send>
					</then>
				</if>
			</response>
			<transition to="Authorization" event="REGISTER"/>
		</state>
		
		<state ID="Notification">
			<postlude>
				<generate event="SucceedEvent" fsm="UE1"/>
			</postlude>
			<transition to="PendingRegistration1" event="200-NOTIFY"/>
		</state>
		
		<state ID="PendingRegistration1">
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REGISTER</expr>
					</eq>
					<then>
						<verify step="7" requirements="REQ19274, REQ19563, REQ19564">
							<contains>
								<msg_ref type="sip">Register.Security-Client</msg_ref>
								<expr>tls</expr>
							</contains>
						</verify>
						<verify step="7" requirements="REQ19274, REQ19563, REQ19564">
							<contains>
								<msg_ref type="sip">Register.Require</msg_ref>
								<expr>sec-agree</expr>
							</contains>
						</verify>
						<verify step="7" requirements="REQ19274, REQ19563, REQ19564">
							<contains>
								<msg_ref type="sip">Register.Proxy-Require</msg_ref>
								<expr>sec-agree</expr>
							</contains>
						</verify>
						<send protocol="sip" msgtype="401-REGISTER"/>
					</then>
				</if>
			</response>
			<transition to="Authorization1" event="REGISTER"/>
		</state>
		
		<state ID="Authorization1">
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="event"/>
							<expr>AuthenticateSucceed</expr>
						</eq>
						<eq>
							<msg_ref type="event"/>
							<expr>AuthenticateFailed</expr>
						</eq>
					</or>
					<then>
						<!-- this is to prevent the AuthenticateFailed from being forwarded
									to the next state on the AuthenticateSucceed -->
					</then>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">Request</msg_ref>
								<expr>REGISTER</expr>
							</eq>
							<and>
								<contains>
									<msg_ref type="sip">REGISTER</msg_ref>
									<expr>Authorization</expr>
								</contains>
								<digest/>
							</and>
						</and>
						<then>
							<generate event="AuthenticateSucceed"/>
						</then>
						<else>
							<generate event="AuthenticateFailed"/>
							<send protocol="sip" msgtype="503-Register"/>
						</else>
					</elseif>
				</if>
			</response>
			<transition to="Registered1" event="AuthenticateSucceed"/>
			<transition to="END" event="AuthenticateFailed"/>
			<transition to="Authorization1" event="REGISTER"/>
		</state>
		
		<state ID="Registered1">
			<prelude>
				<send protocol="sip" msgtype="200-Register"/>
				<generate event="SucceedEvent"/>
			</prelude>
			<transition to="END" event="SucceedEvent"/>
		</state>
	</add_to>
	
	<add_to fsm="UE1">
		<state ID="WaitForSucceedEvent">
			<transition to="Setup" event="SucceedEvent"/>
		</state>
		
		<state ID="Setup">
			<prelude once="true">
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<msg_ref type="platform">UE1.phone number 1</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<send protocol="sip" msgtype="403-INVITE"/>
					</then>
				</if>
			</response>
			<transition to="Setup" event="DialDigitsComplete"/>
			<transition to="EndCall1" event="INVITE"/>
		</state>
		
		<state ID="EndCall1">
			<transition to="END" event="SessionTerminated"/>
		</state>
	</add_to>
</pc2xml>
