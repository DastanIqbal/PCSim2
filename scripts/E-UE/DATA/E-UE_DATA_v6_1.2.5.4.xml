<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)



-->

<!-- First are the document type and the attributes for our document -->
<pc2xml version="$Revision: 7768 $" 
		name="E-UE_DATA_1.2.5.4" 	
		descrip="Ability of eUE to Implement the VACM Requirements"
		number="E-UE_DATA_1.2.5.4">

	<!-- Step 7 -->
	<template file="./templates/EUE_Prov_B_1_1_1.xml" name="VACMTable"/>

	<add_to fsm="VACMTable">
		<transition from="StartCapture_RebootWait" to="EUEProvision" event="TimerExpired"/>

		<!-- Step 8 The E-UE DUT provisions successfully and becomes operational. -->
        <state ID="EUEProvision" timer="10000">
            <prelude once="true">				
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="8">
                    <eq>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </eq>
                </verify>
            </response>
            <transition to="VerifyVacmSecurityToGroupTable" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>
		
		<!-- Step 9-3  
				Column   Entry
				1        vacmSecurityModel (in index)
				2        vacmSecurityName  (in index)
				3        vacmGroupName
				4        vacmSecurityToGroupStorageType
				5        vacmSecurityToGroupStatus
		 -->
		<state ID="VerifyVacmSecurityToGroupTable">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGetTable">
					<mod modtype="add" hdr="oids">
						<expr>SNMP-VIEW-BASED-ACM-MIB::vacmSecurityToGroupTable</expr>
					</mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
						<expr>3</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<!-- vacmSecurityModel not-accessible -->
				<!--verify step="9-3-vacmSecurityModel">
					<eq>
						<msg_ref type="utility" index="0 x 2">SNMPResp.varBind</msg_ref>
						<expr>3</expr>
					</eq>
				</verify-->
				<!-- vacmSecurityName not-accessible -->
				<!--verify step="9-3-vacmSecurityName">
					<and>
						<startsWith>
							<msg_ref type="utility" index="0 x 2">SNMPResp.varBind</msg_ref>
							<expr>eUE-Prov-</expr>
						</startsWith>
						<eq>
							<msg_ref type="utility" index="0 x 2" subString="10">SNMPResp.varBind</msg_ref>
							<msg_ref type="platform">DUT.CM MAC Address Colon</msg_ref>
						</eq>
					</and>
				</verify-->
				<verify step="9-3-vacmGroupName">
					<eq>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>PacketCableFullAccess</expr>
					</eq>
				</verify>
				<verify step="9-3-vacmSecurityToGroupStorageType">
					<eq>
						<msg_ref type="utility" index="0 1 2">SNMPResp.varBind</msg_ref>
						<expr>2</expr><!-- volatile -->
					</eq>
				</verify>
				<verify step="9-3-vacmSecurityToGroupStatus">
					<eq>
						<msg_ref type="utility" index="0 2 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr><!-- active -->
					</eq>
				</verify>
			</response>
			
			<transition to="END" event="SNMPRespFailure" />
			<transition to="VerifyVacmAccessTable" event="SNMPResp" />
		</state>
		
		<!-- Step 9-4
				Column   Entry
				1        vacmAccessContextPrefix (in index)
				2        vacmAccessSecurityModel (in index)   
				3        vacmAccessSecurityLevel (in index)
				4        vacmAccessContextMatch
				5        vacmAccessReadViewName
				6        vacmAccessWriteViewName
				7        vacmAccessNotifyViewName
				8        vacmAccessStorageType
				9        vacmAccessStatus
		 -->
		<state ID="VerifyVacmAccessTable">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGetTable">
					<mod modtype="add" hdr="oids">
						<expr>SNMP-VIEW-BASED-ACM-MIB::vacmAccessTable</expr>
					</mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
						<expr>3</expr>
					</mod>
				</send>
			</prelude>
			<response>
					<!-- vacmAccessContextPrefix - not accessible -->
					<!--verify step="9-4-vacmAccessContextPrefix">
						<and>
							<notnull>
								<msg_ref type="utility" index="0 x 2">SNMPResp.varBind</msg_ref>
							</notnull>
							<eq>
								<msg_ref type="utility" index="0 x 2">SNMPResp.varBind</msg_ref>
								<expr></expr>
							</eq>
						</and>
					</verify-->				
					<!-- vacmAccessSecurityModel - not accessible -->
					<!--verify step="9-4-vacmAccessSecurityModel">
						<eq>
							<msg_ref type="utility" index="0 x 2">SNMPResp.varBind</msg_ref>
							<expr>3</expr>
						</eq>
					</verify -->
					<!-- vacmAccessSecurityLevel - not accessible -->
					<!--verify step="9-4-vacmAccessSecurityLevel">
						<eq>
							<msg_ref type="utility" index="0 x 2">SNMPResp.varBind</msg_ref>
							<expr>3</expr>
						</eq>
					</verify-->
					<verify step="9-4-vacmAccessContextMatch">
						<eq>
							<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
							<expr>1</expr><!-- exact -->
						</eq>
					</verify>
					<verify step="9-4-vacmAccessReadViewName">
						<eq>
							<msg_ref type="utility" index="0 1 2">SNMPResp.varBind</msg_ref>
							<expr>ReadOnlyView</expr>
						</eq>
					</verify>
					<verify step="9-4-vacmAccessWriteViewName">
						<eq>
							<msg_ref type="utility" index="0 2 2">SNMPResp.varBind</msg_ref>
							<expr>FullAccessView</expr>
						</eq>
					</verify>
					<verify step="9-4-vacmAccessNotifyViewName">
						<eq>
							<msg_ref type="utility" index="0 3 2">SNMPResp.varBind</msg_ref>
							<expr>NotifyView</expr>
						</eq>
					</verify>
					<verify step="9-4-vacmAccessStorageType">
						<eq>
							<msg_ref type="utility" index="0 4 2">SNMPResp.varBind</msg_ref>
							<expr>2</expr><!-- volatile -->
						</eq>
					</verify>
					<verify step="9-4-vacmAccessStatus">
						<eq>
							<msg_ref type="utility" index="0 5 2">SNMPResp.varBind</msg_ref>
							<expr>1</expr><!-- active -->
						</eq>
					</verify>
			</response>
			<postlude>
				<stop_capture />
			</postlude>
			<transition to="END" event="SNMPRespFailure" />
			<transition to="END" event="SNMPResp" />
		</state>		
	
	</add_to>
</pc2xml>
