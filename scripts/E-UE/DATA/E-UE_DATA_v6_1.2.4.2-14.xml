<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)



-->

<pc2xml version="$Revision: 7768 $" 
		name="E-UE_Data_1.2.4.2-14" 
		descrip="pktcDevEvLogTime Content Verification"
		number="E-UE_Data_1.2.4.2-14">

	<template file="./templates/EUE_Prov_B_1_1_1.xml" name="MIBTest"/>

	<add_to fsm="MIBTest">
		
		<!--transition from="IP4 Provision" to="VerifyPktcDevEventDescrReporting" event="SNMPResp" />
		<transition from="IP6 Provision" to="VerifyPktcDevEventDescrReporting" event="SNMPResp" /-->
		<transition from="StartCapture_RebootWait" to="EUEProvision" event="TimerExpired"/>		

        <state ID="EUEProvision" timer="30000">
            <prelude once="true">
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="5">
                    <eq>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </eq>
                </verify>
            </response>
            <transition to="VerifyMIB" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>
		
		<state ID="VerifyMIB" timer="30000">
			<prelude once="true" >
			 	<send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-EVENT-MIB::pktcDevEvLogTime.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
			</prelude>
			<response>
				<verify step="6">
					<and>
						<contains>
							<msg_ref type="utility" index="0 0 1">SNMPResp.varBind</msg_ref>
							<expr>STRING</expr>
						</contains>
						<isDate>
							<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						</isDate>						
					</and>
				</verify>
				
            </response>
			<postlude>
				<log promptUser="true" expr="Note the date/time value from step 6 above." />
			</postlude>
            <transition to="SetMIB" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
		</state>
		
		
		<state ID="SetMIB" timer="30000">
			<prelude once="true">
				<!-- Set pktcDevEventDescrReporting to ipv6(2)  -->
                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>PKTC-EVENT-MIB::pktcDevEvLogTime,STRING,2013-5-29,18:40:41.0][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
			<response>
				<verify step="7">
					<or>
						<contains>
							<msg_ref type="utility">SNMPRespFailure.errorString</msg_ref>
							<expr>Error</expr>
						</contains>
						<contains>
							<msg_ref type="utility">SNMPRespFailure.errorString</msg_ref>
							<expr>notWritable</expr>
						</contains>
					</or>
				</verify>
            </response>

            <transition to="Reboot2" event="SNMPRespFailure"/>
            <transition to="Reboot2" event="SNMPResp"/>
		</state>
		
		<state ID="Reboot2" timer="10000">
				<!-- First we need to power cycle the UE to conduct the test -->
				<prelude once="true" >
					<send protocol="utility" msgtype="SNMPSet">
						<mod modtype="add" hdr="array">
							<var_expr>
								<expr>varBind 1 1 3 \r\n ][ , </expr>
								<expr>DOCS-CABLE-DEVICE-MIB::docsDevResetNow.0,INTEGER,1][\r\n</expr>
							</var_expr>
						</mod>
						<mod modtype="replace" hdr="agentip">
							<msg_ref type="platform">DUT.CM IP Address</msg_ref>
						</mod>
						<!-- Always use version 2 for a CM reset -->
						<mod modtype="replace" hdr="version">
							<expr>2c</expr>
						</mod>
					</send>
				</prelude>
				<response>
					<if>
						<eq>
							<msg_ref type="utility">Response</msg_ref>
							<expr>SNMPRespFailure</expr>
						</eq>
						<then>
							<fail/>
						</then>
					</if>
					<if>
						<or>
							<eq>
								<msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
								<expr>0</expr>
							</eq>
							<eq>
								<msg_ref type="sip">REGISTER.Expires.value</msg_ref>
								<expr>0</expr>
							</eq>
						</or>
						<then>
							<send protocol="sip" msgtype="200-REGISTER"/>
						</then>
					</if>
				</response>
				<!-- Test cases deriving their functionality from this template
					should change the following transition to some local state -->
				<transition to="Reboot2" event="SNMPResp"/>
				<transition to="EUEProvision2" event="TimerExpired"/>
				<transition to="END" event="SNMPRespFailure"/>
				<transition to="Reboot2" event="REGISTER"/>
		</state>
		
        <state ID="EUEProvision2" timer="30000">
            <prelude once="true">
				<sleep time="150000"/>
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="9">
                    <eq>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </eq>
                </verify>
            </response>
            <transition to="VerifyMIB2" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>
		
		<state ID="VerifyMIB2" timer="30000">
			<prelude once="true" >
			 	<send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>PKTC-EVENT-MIB::pktcDevEvLogTime.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP</msg_ref>
                    </mod>
					<mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
			</prelude>
			<response>
				<verify step="10">
					<and>
						<contains>
							<msg_ref type="utility" index="0 0 1">SNMPResp.varBind</msg_ref>
							<expr>STRING</expr>
						</contains>
						<isDate>
							<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						</isDate>						
					</and>
				</verify>

            </response>
			
			<postlude>
				<stop_capture/>
				<log promptUser="true" expr="Note the date/time value from step 10 above." />
			</postlude>
			
            <transition to="CompareTime" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
		</state>
		
		<state ID="CompareTime">
			<prelude>
				<log promptUser="true" verify="true" step="12"
				expr="Are the both date/time collected above fits approximately with actual time?"/>
				<generate event="SucceedEvent"/>
			</prelude>
			
			<transition to="END" event="SucceedEvent"/>
		</state>

	</add_to>
</pc2xml>
