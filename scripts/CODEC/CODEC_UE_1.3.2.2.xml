<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	PCPCIIATP-114 : Update the fmtp media line to use '=' instead of ':' between a parameter and its 
			value. (ghassler 01/13/2010)




-->
<pc2xml version="$Revision: 8188 $" 
	name="CODEC-MEDIA_1.3.2.2" 
	descrip="UE T.38 Fax Relay (Two Way)" 
	number="CODEC-MEDIA_1.3.2.2">
	
	<template file="./templates/Proxy.xml" name="SCSCF1"/>
	
	<remove_from fsm="SCSCF1">
		<state ID="Connected"/>
		<state ID="OnHook"/>
	</remove_from>
	
	<add_to fsm="SCSCF1">
		<state ID="Register" sub="prelude">
			<!-- Step-1 test case Appendix B.6 Common Test Procedures -->
			<log promptUser="true" expr="Connect fax machines with phones to UE0 and UE1."/>
		</state>
		
		<state ID="Connected" timer="30000">
			<prelude once="true">
				<!-- Step - 2 test case Appendix B.6 Common Test Procedures -->
				<var name="codecs">
					<var_expr>
						<expr>0 </expr>
						<msg_ref type="platform">UE0.T38 Codec</msg_ref>
					</var_expr>
				</var>
				<var name="rtpmap">
					<var_expr>
						<expr>a=rtpmap:</expr>
						<msg_ref type="platform">UE0.T38 Codec</msg_ref>
						<expr> t38/8000</expr>
					</var_expr>
				</var>
				<var name="fmtp">
					<var_expr>
						<expr>a=fmtp:</expr>
						<msg_ref type="platform">UE0.T38 Codec</msg_ref>
					</var_expr>
				</var>
				<var name="fmtp0">
					<expr>T38FaxVersion=0</expr>
				</var>
				<var name="fmtp1">
					<expr>T38FaxVersion=1</expr>
				</var>
				<var name="fmtp2">
					<expr>T38FaxVersion=2</expr>
				</var>
				<var name="fmtpmgmt">
					<expr>T38FaxRateManagement=transferedTCF</expr>
				</var>
				<var name="fmtpdg">
					<expr>T38FaxRateDatagram=160</expr>
				</var>
				<var name="fmtpall0">
					<var_expr>
						<expr>a=fmtp:</expr>
						<msg_ref type="platform">UE0.T38 Codec</msg_ref>
						<expr> T38FaxVersion=0;T38FaxRateManagement=transferedTCF;T38FaxRateDatagram=173</expr>
					</var_expr>
				</var>
				<var name="fmtpall1">
					<var_expr>
						<expr>a=fmtp:</expr>
						<msg_ref type="platform">UE0.T38 Codec</msg_ref>
						<expr> T38FaxVersion=1;T38FaxRateManagement=transferedTCF;T38FaxRateDatagram=173</expr>
					</var_expr>
				</var>
				<var name="fmtpall2">
					<var_expr>
						<expr>a=fmtp:</expr>
						<msg_ref type="platform">UE0.T38 Codec</msg_ref>
						<expr> T38FaxVersion=2;T38FaxRateManagement=transferedTCF;T38FaxRateDatagram=173</expr>
					</var_expr>
				</var>
				<var name="mmr">
					<var_expr>
						<expr>a=fmtp:</expr>
						<msg_ref type="platform">UE0.T38 Codec</msg_ref>
						<expr> T38FaxTranscodingMMR</expr>
					</var_expr>
				</var>
				<var name="jbig">
					<var_expr>
						<expr>a=fmtp:</expr>
						<msg_ref type="platform">UE0.T38 Codec</msg_ref>
						<expr> T38FaxTranscodingJBIG</expr>
					</var_expr>
				</var>
				<start_capture>
					<filter>
						<var_expr>
							<expr>host </expr>
							<msg_ref type="platform">PCSCF1.IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">UE0.IP</msg_ref>
							<expr> || host </expr>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</var_expr>
					</filter>
				</start_capture>
				<!-- Step - 3 test case Appendix B.6 Common Test Procedures -->
				<log expr="Press start on UE0 so that the fax is transmitted to UE1."/>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>REINVITE</expr>
					</eq>
					<then>
						<proxy target="UE1"/>
						<verify step="5" requirements="REQ16632, REQ12584, REQ12585">
							<eq>
								<msg_ref type="sdp">REINVITE.audio.payload-type</msg_ref>
								<expr>codecs</expr>
							</eq>
						</verify>
						
						<verify step="5" requirements="REQ16632, REQ12584, REQ12585">
							<contains>
								<msg_ref type="sip">REINVITE.SDP</msg_ref>
								<var_ref name="rtpmap"/>
							</contains>
						</verify>
								
						<!-- STEP 6 -->
						<verify step="6" requirements="REQ12553">
							<eq>
								<msg_ref type="sdp" msg_instance="first">INVITE.audio.port</msg_ref>
								<msg_ref type="sdp">REINVITE.audio.port</msg_ref>
							</eq>
						</verify>
						
						<!-- STEP 7, 8 and 9 -->
						<verify step="7 8 9" requirements="REQ12588, REQ13335, REQ12590, REQ12591, REQ12594, REQ12595, REQ12597, REQ12598">
							<or>
								<contains>
									<msg_ref type="sip">REINVITE.SDP</msg_ref>
									<var_ref name="fmtpall0"/>
								</contains>
							<or>
								<contains>
									<msg_ref type="sip">REINVITE.SDP</msg_ref>
									<var_ref name="fmtpall1"/>
								</contains>
								<contains>
									<msg_ref type="sip">REINVITE.SDP</msg_ref>
									<var_ref name="fmtpall2"/>
								</contains>
							</or>
							</or>
						</verify>
						
						<!-- STEP 13 -->
						<verify step="13" requirements="REQ12714">
							<dnc>
								<msg_ref type="sip">REINVITE.SDP</msg_ref>
								<expr>T38FaxMaxBuffer</expr>
							</dnc>
						</verify>
					</then>
				</if>
				<if>
					<eq>
						<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
						<expr>100</expr>
					</eq>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<gte>
							<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
							<expr>200</expr>
						</gte>
						<then>
							<proxy target="UE0"/>
							<verify step="5" requirements="REQ16632, REQ12584, REQ12585">
								<eq>
									<msg_ref type="sdp">Response.audio.payload-type</msg_ref>
									<expr>codecs</expr>
								</eq>
							</verify>
						
							<verify step="5" requirements="REQ16632, REQ12584, REQ12585">
								<contains>
									<msg_ref type="sip">REINVITE.SDP</msg_ref>
									<var_ref name="rtpmap"/>
								</contains>
							</verify>
								
							<verify step="5" requirements="REQ16632, REQ12584, REQ12585">
								<or>
									<contains>
										<msg_ref type="sip">REINVITE.SDP</msg_ref>
										<var_ref name="fmtp0"/>
									</contains>
								<or>
									<contains>
										<msg_ref type="sip">REINVITE.SDP</msg_ref>
										<var_ref name="fmtp1"/>
									</contains>
									<contains>
										<msg_ref type="sip">REINVITE.SDP</msg_ref>
										<var_ref name="fmtp2"/>
									</contains>
								</or>
								</or>
							</verify>
							
							<verify step="5" requirements="REQ16632, REQ12584, REQ12585">
								<contains>
									<msg_ref type="sip">REINVITE.SDP</msg_ref>
									<var_ref name="fmtp"/>
								</contains>
							</verify>
							
							<verify step="5" requirements="REQ16632, REQ12584, REQ12585">
								<contains>
									<msg_ref type="sip">REINVITE.SDP</msg_ref>
									<var_ref name="fmtpmgmt"/>
								</contains>
							</verify>
							
							<verify step="5" requirements="REQ16632, REQ12584, REQ12585">
								<contains>
									<msg_ref type="sip">REINVITE.SDP</msg_ref>
									<var_ref name="fmtpdg"/>
								</contains>
							</verify>
							
							<!-- STEP 10 -->
							<verify step="10" requirements="REQ12602, REQ12603, REQ12604, REQ12605">
								<or>
									<and>
										<contains>
											<msg_ref type="sip" msg_instance="first">REINVITE.SDP</msg_ref>
											<expr>a=T38FaxFillBitRemoval</expr>
										</contains>
										<contains>
											<msg_ref type="sip">Response.SDP</msg_ref>
											<expr>a=T38FaxFillBitRemoval</expr>
										</contains>
									</and>
									<and>
										<dnc>
											<msg_ref type="sip" msg_instance="first">REINVITE.SDP</msg_ref>
											<expr>a=T38FaxFillBitRemoval</expr>
										</dnc>
										<dnc>
											<msg_ref type="sip">Response.SDP</msg_ref>
											<expr>a=T38FaxFillBitRemoval</expr>
										</dnc>
									</and>
								</or>
							</verify>
							
							<!-- STEP 11 -->
							<verify step="11" requirements="REQ12606, REQ12607, REQ12608, REQ12609">
								<or>
									<and>
										<contains>
											<msg_ref type="sip" msg_instance="first">REINVITE.SDP</msg_ref>
											<var_ref name="mmr"/>
										</contains>
										<contains>
											<msg_ref type="sip">Response.SDP</msg_ref>
											<var_ref name="mmr"/>
										</contains>
									</and>
									<and>
										<dnc>
											<msg_ref type="sip" msg_instance="first">REINVITE.SDP</msg_ref>
											<var_ref name="mmr"/>
										</dnc>
										<dnc>
											<msg_ref type="sip">Response.SDP</msg_ref>
											<var_ref name="mmr"/>
										</dnc>
									</and>
								</or>
							</verify>
							
							<!-- STEP 12 -->
							<verify step="12" requirements="REQ12610, REQ12611, REQ12612, REQ12613">
								<or>
									<and>
										<contains>
											<msg_ref type="sip" msg_instance="first">REINVITE.SDP</msg_ref>
											<var_ref name="jbig"/>
										</contains>
										<contains>
											<msg_ref type="sip">Response.SDP</msg_ref>
											<var_ref name="jbig"/>
										</contains>
									</and>
									<and>
										<dnc>
											<msg_ref type="sip" msg_instance="first">REINVITE.SDP</msg_ref>
											<var_ref name="jbig"/>
										</dnc>
										<dnc>
											<msg_ref type="sip">Response.SDP</msg_ref>
											<var_ref name="jbig"/>
										</dnc>
									</and>
								</or>
							</verify>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Connected" event="REINVITE"/>
			<transition to="Connected" event="xxx-INVITE"/>
			<transition to="Connected" event="ACK"/>
			<transition to="OnHook" event="TimerExpired"/>
		</state>
		
		<state ID="OnHook">
			<prelude once="true">
				<stop_capture/>
				<log step="3" requirements="RFC2771, RFC2772, RFC2774, RFC2779, REQ12546, REQ12553, REQ16632, REQ16633, REQ16639, REQ12584, REQ12585, REQ12588, REQ13335, REQ12590, REQ12591, REQ12594, REQ12595, REQ12598, REQ14818, REQ12602, REQ12603, REQ12604, REQ12605, REQ12606, REQ12607, REQ12608, REQ12609, REQ12610, REQ12611, REQ12612, REQ12613, REQ12714" 
					promptUser="True" yesExpected="True" verify="True" 
					expr="Verify that all pages are received without any distortions."/>
				<!-- Step - 6 test case Appendix B.6 Common Test Procedures -->
				<log step="3" requirements="RFC2771, RFC2772, RFC2774, RFC2779, REQ12546, REQ12553, REQ16632, REQ16633, REQ16639, REQ12584, REQ12585, REQ12588, REQ13335, REQ12590, REQ12591, REQ12594, REQ12595, REQ12598, REQ14818, REQ12602, REQ12603, REQ12604, REQ12605, REQ12606, REQ12607, REQ12608, REQ12609, REQ12610, REQ12611, REQ12612, REQ12613, REQ12714" 
					promptUser="True" yesExpected="True" verify="True" 
					expr="Verify in the capture that the T.38 data is in RTP and not in UDPTL packets.\n."/>
				<send protocol="utility" msgtype="OnHook"/>
			</prelude>
			<response>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
						<eq>
							<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
							<msg_ref type="platform">UE1.IP</msg_ref>
						</eq>
					</or>
					<then>
						<proxy target="UE0"/>
					</then>
					<elseif>
						<or>
							<eq>
								<msg_ref type="sip">Request.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
							<eq>
								<msg_ref type="sip">Response.SourceAddress.IP</msg_ref>
								<msg_ref type="platform">UE0.IP</msg_ref>
							</eq>
						</or>
						<then>
							<proxy target="UE1"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="OnHook" event="OnHookComplete"/>
			<transition to="OnHook" event="Bye"/>
			<transition to="OnHookUE1" event="200-Bye"/>
		</state>
	</add_to>
</pc2xml>
