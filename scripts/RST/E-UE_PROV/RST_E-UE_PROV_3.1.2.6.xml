<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	PCPCII-135 : UPdate the script to accommodate a de-register message during the reboot. (ghassler 06/24/2009)
	




-->

<pc2xml version="$Revision: 8188 $" 
	name="RST_E-UE_PROV 3.1.2.6" 
	descrip="UE Ignores Record-Route Header in a REGISTER Response" 
	number="RST_E-UE_PROV 3.1.2.6" inspector="disable">
	<template file="./templates/CallOrigAtUETemp.xml" name="UE1"/>
	
	<remove_from fsm="UE1">
		<state ID="Register"/>
		<state ID="Connected"/>
		<state ID="OnHook"/>
	</remove_from>
	
	<add_to fsm="UE1">
		<states initialstate="Reboot"/>
		<state ID="Reboot" timer="5000">
			<!-- First we need to power cycle the UE to conduct the test -->
			<prelude once="true">
				<start_capture>
					<filter>
						<var_expr>
						<expr>host </expr>
						<msg_ref type="platform">DUT.IP</msg_ref>
					</var_expr>
				</filter>
				</start_capture>
				<send protocol="utility" msgtype="SNMPSet">
					<mod modtype="add" hdr="array">
						<var_expr>
								<expr>varBind 1 1 3 \r\n ][ , </expr>
								<expr>DOCS-CABLE-DEVICE-MIB::docsDevResetNow.0,INTEGER,1][\r\n</expr>
						</var_expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.CM IP Address</msg_ref>
					</mod>
					<!-- Always use version 2 for a CM reset -->
					<mod modtype="replace" hdr="version">
						<expr>2c</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>SNMPRespFailure</expr>
					</eq>
					<then>
						<fail/>
					</then>
				</if>
				<if>
					<or>
						<eq>
							<msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
							<expr>0</expr>
						</eq>
						<eq>
							<msg_ref type="sip">REGISTER.Expires.value</msg_ref>
							<expr>0</expr>
						</eq>
					</or>
					<then>
						<send protocol="sip" msgtype="200-REGISTER"/>
					</then>
				</if>
			</response>
			<!-- Transitions for PendingRegistration state -->
			<transition to="Reboot" event="SNMPResp"/>
			<transition to="Register" event="TimerExpired"/>
			<transition to="END" event="SNMPRespFailure"/>
			<transition to="Reboot" event="REGISTER"/>
		</state>
		<state ID="Register">
			<response>
				<!-- When the registered event comes in see if the device
				is supposed to be simulated or a real device -->
				<verify step="2">
					<eq>
						<msg_ref type="event"/>
						<expr>Registered</expr>
					</eq>
				</verify>
			</response>
			<transition to="OffHook" event="Registered"/>
			<!--  This is a precaution to make sure we start correctly -->
			<transition to="END" event="Branch2Event"/>
		</state>
					
		<transition from="OffHook" to="DialTone" event="OffHookComplete"/>
		
		<state ID="DialTone">
			<prelude>
				<send protocol="utility" msgtype="VerifyDialTone"/>
			</prelude>
			<response>
				<if>
					<neq>
						<msg_ref type="event"/>
						<expr>Registered</expr>
					</neq>
					<then>
						<verify step="3">
							<eq>
								<msg_ref type="utility">Response</msg_ref>
								<expr>VerifyDialToneComplete</expr>
							</eq>
						</verify>
					</then>
				</if>
			</response>
			<transition to="CheckStatusTable" event="VerifyDialToneComplete"/>
			<transition to="CheckStatusTable" event="VerifyDialToneError"/>
		</state>	
						
		<state ID="CheckStatusTable">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGetTable">
					<mod modtype="add" hdr="oids">
						<expr>ESAFE-MIB::esafeDevStatusTable</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.CM IP Address</msg_ref>
					</mod>
					<mod modtype="replace" hdr="version">
						<expr>2c</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>SNMPResp</expr>
					</eq>
					<then> 
						<!--  Test for the esafeDevServiceIntImpact element -->
						<verify step="4">
							<eq>
								<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
								<expr>1</expr>
							</eq>
						</verify>
						<!--  Test for the esafeDevServiceIntImpactInfo element -->
						<verify step="4">
							<notnull>
								<msg_ref type="utility" index="0 1 2">SNMPResp.varBind</msg_ref>
							</notnull>
						</verify>
					</then>
				</if>
			</response>
			<transition to="Setup" event="SNMPResp"/>
			<transition to="Setup" event="SNMPRespFailure"/>
		</state>
		
		<state ID="Connected">
			<prelude once="true">
				<sleep time="5000"/>
				<send protocol="utility" msgtype="SNMPGetTable">
					<mod modtype="add" hdr="oids">
						<expr>ESAFE-MIB::esafeDevStatusTable</expr>
					</mod>
					<!-- mod modtype="replace" hdr="version">
						<expr>3</expr>
					</mod-->
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.CM IP Address</msg_ref>
					</mod>
					<!-- Always use version 2 for a CM reset -->
					<mod modtype="replace" hdr="version">
						<expr>2c</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>SNMPResp</expr>
					</eq>
					<then> 
						<!--  Test for the esafeDevServiceIntImpact element -->
						<verify step="6">
							<eq>
								<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
								<expr>1</expr>
							</eq>
						</verify>
						<!--  Test for the esafeDevServiceIntImpactInfo element -->
						<verify step="6">
							<notnull>
								<msg_ref type="utility" index="0 1 2">SNMPResp.varBind</msg_ref>
							</notnull>
						</verify>
					</then>
				</if>
			</response>
			<!--Need test for esafeDevStatusTable step 6 -->
			<transition to="Releasing" event="SNMPResp"/>
			<transition to="Releasing" event="SNMPRespFailure"/>
		</state>

		<!-- OnHook State -->
		<state ID="OnHook">
			<prelude>
				<send protocol="utility" msgtype="OnHook"/>
				<sleep time="8000"/>
			</prelude>
			<!-- Transitions for OnHook state -->
			<transition from="OnHook" to="CheckStatusTableOnHook" event="OnHookComplete"/>
		</state>

		<state ID="CheckStatusTableOnHook">
			<prelude once="true">
				<sleep time="3000"/>
				<send protocol="utility" msgtype="SNMPGetTable">
					<mod modtype="add" hdr="oids">
						<expr>ESAFE-MIB::esafeDevStatusTable</expr>
					</mod>
					<!-- mod modtype="replace" hdr="version">
						<expr>3</expr>
					</mod-->
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.CM IP Address</msg_ref>
					</mod>
					<!-- Always use version 2 for a CM reset -->
					<mod modtype="replace" hdr="version">
						<expr>2c</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>SNMPResp</expr>
					</eq>
					<then> 
						<!--  Test for the esafeDevServiceIntImpact element -->
						<verify step="8">
							<eq>
								<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
								<expr>2</expr>
							</eq>
						</verify>
						<!--  Test for the esafeDevServiceIntImpactInfo element -->
						<verify step="8">
							<notnull>
								<msg_ref type="utility" index="0 1 2">SNMPResp.varBind</msg_ref>
							</notnull>
						</verify>
					</then>
				</if>
			</response>
			<transition to="END" event="SNMPResp"/>
			<transition to="END" event="SNMPRespFailure"/>
		</state>	
	</add_to>
</pc2xml>
