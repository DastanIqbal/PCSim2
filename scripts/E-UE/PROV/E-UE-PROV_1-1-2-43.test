#//*****************************************************************************
#// Filename: E-UE-PROV_1-1-2-43.test
#// Author:   Matthew Forbes
#// Creation Date: March 15, 2009
#// Modified by:
#//*****************************************************************************
#// Description:
#//     TC3251 TEST CASE E-UE-PROV 1.1.2.43 - Ability of eUE to Retrieve the ToD
#//	From eCM When ToD is Successfully Retrieved by the eCM (for
#//	Basic and Hybrid Provisioning Flow).
#//
#// Objective:
#//     To verify the ability of the eUE, directed to be provisioned in Basic or Hybrid
#//	mode, to retrieve the ToD from eCM in the scenario when ToD is not
#//	available to the eCM initially and then becomes available and is
#//	successfully retrieved by the eCM.
#//
#//
#// PacketCable DUT:
#//     E-UE
#//
#// Test Steps:
#//     - Initial Configuration
#//     - Set policy for no ToD response
#//     - Start sniffer
#//     - Reset DUT
#//     - Wait for Provisioning of eUE
#//     - Check timestamp of Syslog message, should not match ToD
#//     - Set policy for ToD response
#//     - Monitor trace and verify syslog message and ToD
#//     - Stop sniffer
#//     - Set policy for no ToD response
#//     - Start sniffer
#//     - Reset DUT
#//     - Wait for Provisioning of eUE
#//     - Check timestamp of Syslog message, should not match ToD
#//     - Set policy for ToD response
#//     - Monitor trace and verify syslog message and ToD
#//     - Stop sniffer
#//     - Restore policy
#//
#// Notes:
#//     - Requires provPrimitives.tcl & tftp_primitives.tcl.
#//     - Requires the specific config file in $BASE_CFG_FILE_PATH in Provisioning Server.
#//     - Requires parT.tcl parsing tool to parse data from capture file.
#//*****************************************************************************
global SCRIPT_VERSION
set SCRIPT_VERSION { # $Id: E-UE-PROV_1-1-2-43.test 7406 2010-07-20 17:17:37Z dthakore $ }

DoStep "E-UE-PROV_1-1-2-43-PreStep-1" "Initialize Test Platform" {
    Init_PROV
    Init_CONTROLLER_LAN
    # Initial PARSER TOOL
    Init_PART
} { PASS_STEP }



set msgStr "Configure DHCP SERVER: Block ToD port and set up policy"
DoStep "E-UE-PROV_1-1-2-43_PreStep-3" $msgStr {
} {
    PROV_BLOCK_PORT 37 udp $PROV_DHCP1_IP
    PROV_MODIFY_DEVICE $MTA_MAC BASIC2 Device_Level_Basic.cfg
    PROV_DEPLOY_DHCP
}

set msgStr "Start Sniffer"
DoStep "E-UE-PROV_1-1-2-43_1-1" $msgStr {
    LogMsg "--- $msgStr ---"
    SetupCaptureControllerLan "host $MTA_IP || udp port 67 || host $CM_IP"
    StartCaptureControllerLan
} {PASS_STEP}

DoStep "E-UE-PROV_1-1-2-43_1-2" "Reset DUT" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "Hard reboot of CM and MTA has passed"
} {
    IsEqual $val 0
}

DoStep "E-UE-PROV_1-1-2-43_2-1" "pktcMTADevProvisioningState Content Verification" {
    verify_signal "Wait for eUE to complete provisioning (this may take a couple of minutes)"
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_GET $oid_pktcMtaDevProvisioningState $MTA_IP]
    LogMsg "MTA Provisioning State" 49
    LogMsg "             - Expected : 1" 49
    LogMsg "             - Received : $val" 49
} {
    IsEqual $val 1
}

set msgStr "Verify Syslog message from eUE has a timestamp that does not match the TOD."
DoStep "E-UE-PROV_1-1-2-43_3-1" $msgStr {
    LogMsg "--- $msgStr ---"
} {
    verify_signal $msgStr
}


set msgStr "Configure the ToD Server to be responsive for the ToD requests."
DoStep "E-UE-PROV_1-1-2-43_4-1" $msgStr {
    LogMsg "--- $msgStr ---"
} {
    PROV_UNBLOCK_PORT 37 udp $PROV_DHCP1_IP
}

set msgStr "Wait for the ToD Server to be responsive to eCM ToD requests(this may take a few of minutes)."
DoStep "E-UE-PROV_1-1-2-43_5-1" $msgStr {
    LogMsg "--- $msgStr ---"
} {
    verify_signal $msgStr
}

# DoStep "E-UE-PROV_1-1-2-43_6-1" "pktcMTADevProvisioningState Content Verification" {
    # verify_signal "Wait for eUE to complete provisioning (this may take a few minutes)"
    # # Get the OID from the MTA and check it using our previously defined
    # set val [SNMP_GET $oid_pktcMtaDevProvisioningState $MTA_IP]
    # LogMsg "MTA Provisioning State" 49
    # LogMsg "             - Expected : 1" 49
    # LogMsg "             - Received : $val" 49
# } {
    # IsEqual $val 1
# }

set msgStr "Verify Syslog message from eUE, 4000960006 time has been retrieved from TOD server, and the timestamp matches the TOD response."
DoStep "E-UE-PROV_1-1-2-43_6-1" $msgStr {
    LogMsg "--- $msgStr ---"
} {
    verify_signal $msgStr
}


set msgStr "Stop Sniffer"
DoStep "E-UE-PROV_1-1-2-43_7-1" $msgStr {
    LogMsg "--- $msgStr ---"
    StopCaptureControllerLan
    SaveToFileControllerLan "_Basic"
} {PASS_STEP}


set msgStr "Configure DHCP SERVER: Block ToD port and set up policy"
DoStep "E-UE-PROV_1-1h-2-43_PreStep-3" $msgStr {
} {
    PROV_BLOCK_PORT 37 udp $PROV_DHCP1_IP
    PROV_MODIFY_DEVICE $MTA_MAC HYBRID2 Device_Level_Hybrid.cfg
    PROV_DEPLOY_DHCP
}

set msgStr "Start Sniffer"
DoStep "E-UE-PROV_1-1-2-43_1h-1" $msgStr {
    LogMsg "--- $msgStr ---"
    SetupCaptureControllerLan "host $MTA_IP || udp port 67 || host $CM_IP"
    StartCaptureControllerLan
} {PASS_STEP}

DoStep "E-UE-PROV_1-1-2-43_1h-2" "Reset DUT" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "Hard reboot of CM and MTA has passed"
} {
    IsEqual $val 0
}

DoStep "E-UE-PROV_1-1-2-43_2h-1" "pktcMTADevProvisioningState Content Verification" {
    verify_signal "Wait for eUE to complete provisioning (this may take a couple of minutes)"
    # Get the OID from the MTA and check it using our previously defined
    set val [SNMPvN_GET $oid_pktcMtaDevProvisioningState $MTA_IP]
    LogMsg "MTA Provisioning State" 49
    LogMsg "             - Expected : 1" 49
    LogMsg "             - Received : $val" 49
} {
    IsEqual $val 1
}

set msgStr "Verify Syslog message from eUE has a timestamp that does not match the TOD."
DoStep "E-UE-PROV_1-1-2-43_3h-1" $msgStr {
    LogMsg "--- $msgStr ---"
} {
    verify_signal $msgStr
}


set msgStr "Configure the ToD Server to be responsive for the ToD requests."
DoStep "E-UE-PROV_1-1-2-43_4h-1" $msgStr {
    LogMsg "--- $msgStr ---"
} {
    PROV_UNBLOCK_PORT 37 udp $PROV_DHCP1_IP
}

set msgStr "Wait for the ToD Server to be responsive to eCM ToD requests(this may take a few of minutes)."
DoStep "E-UE-PROV_1-1-2-43_5h-1" $msgStr {
    LogMsg "--- $msgStr ---"
} {
    verify_signal $msgStr
}

# DoStep "E-UE-PROV_1-1-2-43_6-1" "pktcMTADevProvisioningState Content Verification" {
# verify_signal "Wait for eUE to complete provisioning (this may take a few minutes)"
# # Get the OID from the MTA and check it using our previously defined
# set val [SNMP_GET $oid_pktcMtaDevProvisioningState $MTA_IP]
# LogMsg "MTA Provisioning State" 49
# LogMsg "             - Expected : 1" 49
# LogMsg "             - Received : $val" 49
# } {
# IsEqual $val 1
# }

set msgStr "Verify Syslog message from eUE, 4000960006 time has been retrieved from TOD server, and the timestamp matches the TOD response."
DoStep "E-UE-PROV_1-1-2-43_6h-1" $msgStr {
    LogMsg "--- $msgStr ---"
} {
    verify_signal $msgStr
}


set msgStr "Stop Sniffer"
DoStep "E-UE-PROV_1-1-2-43_7h-1" $msgStr {
    LogMsg "--- $msgStr ---"
    StopCaptureControllerLan
    SaveToFileControllerLan "_Hybrid"
} {PASS_STEP}


set msgStr "Restore DHCP SERVER"
DoStep "E-UE-PROV_1-1-2-43_PostStep-1" $msgStr {
} {
    PROV_MODIFY_DEVICE $MTA_MAC MTAFORCW_122 Device_Level_Secure.cfg
    PROV_DEPLOY_DHCP
}

DoStep "E-UE-PROV_1-1-2-43_PostStep-2" "Reset DUT" {
    set val [SNMPvN_RESET $CM_IP]
    LogMsg "Hard reboot of CM and MTA has passed"
} {
    IsEqual $val 0
}

DoStep "E-UE-PROV_1-1-2-43_PostStep-3" "pktcMTADevProvisioningState Content Verification" {
    # Wait for a minute to let CM/MTA starting to reboot
    actionWait "Wait for CM/MTA to reboot" 60
    # Get the OID from the MTA and check it using our previously defined
    set val [GetProvState 1 600]
    LogMsg "MTA Provisioning State"
    LogMsg "             - Expected : 1"
    LogMsg "             - Received : $val"
} {
    IsEqual $val 1
}


Cleanup
