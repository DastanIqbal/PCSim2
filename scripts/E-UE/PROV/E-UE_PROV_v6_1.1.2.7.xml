<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################
 Change History: (Author & Date)
-->
<pc2xml version="$Revision: 7768 $"
        name="EUE Prov 1.1.2.7"
        descrip="eUE recognizes value for sub-option 7 when provided in the configuration."
        number="EUE Prov 1.1.2.7">

    <template file="./templates/EUE_Prov_B_1_1_1.xml" name="SubOption7"/>

    <add_to fsm="SubOption7">
        <transition from="StartCapture_RebootWait" to="ClearKRB" event="TimerExpired"/>

        <!-- Step 1. Clear the KRB ticket. -->
        <state ID="ClearKRB">
            <prelude>
                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <!-- Is this really an 'invalidateProvOnReboot' -->
                            <expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetKrbTickets.0,INTEGER,1][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.Kerberos IP</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="1">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="EDVAProvisions" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>


        <!-- E/MTA DUT reports provisioning pass code (1) to provisioning service (SNMP Entity). -->
        <state ID="EDVAProvisions">
            <prelude once="true">
                <stop_capture/>
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>DOCS-CABLE-DEVICE-MIB::docsDevServerBootState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">UE0.IP</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="2">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="ReConfigure" event="SNMPResp"/>
        </state>


        <!-- 3 TGS Request is sent by the MTA DUT after the AS Reply.
             The first byte of the Request UDP payload must be 6C (APPLICATION 13). -->
        <state ID="VerifyMessaging">
            <prelude once="true">
                <stop_capture/>

                <parse_capture name="eUE_PKTC">
                    <parser_filter protocol="pktc" ip="DUT.IP"/>
                </parse_capture>

                <verify step="3">
                    <and>
                        <gt>
                            <capture_ref type="pktc" name="eUE_PKTC">AS-REQ.timestamp</capture_ref>
                            <capture_ref type="pktc" name="eUE_PKTC">AS-REP.timestamp</capture_ref>
                        </gt>
                    <!-- Here is where the payload check would go -->
                        <eq>
                            <expr>1</expr> 
                            <expr>2</expr> 
                        </eq>
                    </and>
                </verify>
                <generate event="SucceedEvent"/>
                <transition to="ClearKRB2" event="SucceedEvent"/>
            </prelude>
        </state>


        <!-- Step 4. Clear the KRB ticket. -->
        <state ID="ClearKRB2">
            <prelude>
                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <!-- Is this really an 'invalidateProvOnReboot' -->
                            <expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetKrbTickets.0,INTEGER,1][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.Kerberos IP</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>3</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="4">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="ReConfigure" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>



        <!-- 5 Reconfigure provisioning service. -->
        <state ID="ReConfigure"
               provFile="E-UE_PROV_v6_2.1.2.1_2.bin"
               policyFile="MTAFORCW122_test"
               nextState="Reset2"/>


        <!-- Reset the UE DUT (not the CM) and bring it to an operational state. -->
        <state ID="Reset2" timer="120000">
            <prelude once="true">
                <start_capture>
                    <filter>
                        <var_expr>
                            <expr>host </expr>
                            <msg_ref type="platform">DUT.IP</msg_ref>
                        </var_expr>
                    </filter>
                </start_capture>

                <send protocol="utility" msgtype="SNMPSet">
                    <mod modtype="add" hdr="array">
                        <var_expr>
                            <expr>varBind 1 1 3 \r\n ][ , </expr>
                            <expr>PKTC-IETF-MTA-MIB::pktcMtaDevResetNow.0,INTEGER,1][\r\n</expr>
                        </var_expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">DUT.IP Address</msg_ref>
                    </mod>
                    <mod modtype="replace" hdr="version">
                        <expr>2c</expr>
                    </mod>
                </send>
            </prelude>
            <response>
                <if>
                    <eq>
                        <msg_ref type="utility">Response</msg_ref>
                        <expr>SNMPRespFailure</expr>
                    </eq>
                    <then>
                        <fail/>
                    </then>
                </if>
                <if>
                    <or>
                        <eq>
                            <msg_ref type="sip">REGISTER.Contact.expires</msg_ref>
                            <expr>0</expr>
                        </eq>
                        <eq>
                            <msg_ref type="sip">REGISTER.Expires.value</msg_ref>
                            <expr>0</expr>
                        </eq>
                    </or>
                    <then>
                        <send protocol="sip" msgtype="200-REGISTER"/>
                    </then>
                </if>
            </response>
            <transition to="EDVAProvisions2" event="TimerExpired"/>
            <transition to="Reset2" event="SNMPResp"/>
            <transition to="Reset2" event="REGISTER"/>
            <!-- Step 9 MTA resets properly, otherwise SNMPRespFailure. -->
            <transition to="END" event="SNMPRespFailure"/>
        </state>


        <!-- 6 E/MTA DUT reports provisioning pass code (1) to the provisioning service (SNMP Entity). -->
        <state ID="EDVAProvisions2">
            <prelude once="true">
                <stop_capture/>
                <send protocol="utility" msgtype="SNMPGet">
                    <mod modtype="add" hdr="oids">
                        <expr>DOCS-CABLE-DEVICE-MIB::docsDevServerBootState.0</expr>
                    </mod>
                    <mod modtype="replace" hdr="agentip">
                        <msg_ref type="platform">UE0.IP</msg_ref>
                    </mod>
                </send>
            </prelude>
            <response>
                <verify step="13">
                    <contains>
                        <msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
                        <expr>1</expr>
                    </contains>
                </verify>
            </response>
            <transition to="VerifyMessaging2" event="SNMPResp"/>
            <transition to="END" event="SNMPRespFailure"/>
        </state>


        <!-- 7 No TGS Request sent by MTA.
                MTA sends an AP Request to the Provisioning Server IP address for SNMPv3 key establishment. -->
        <state ID="VerifyMessaging2">
            <prelude once="true">
                <stop_capture/>

                <parse_capture name="eUE_PKTC">
                    <parser_filter protocol="pktc" ip="DUT.IP"/>
                </parse_capture>

                <verify step="16">
                    <and>
                        <null>
                            <!-- We don't know how to do this. -->
                            <!-- <capture_ref type="pktc" name="eUE_PKTC">TSG</capture_ref> -->
                            <expr>We don't know how to test for this message yet.</expr> 
                        </null>
                        <eq>
                            <capture_ref type="pktc" name="eUE_PKTC">AP-REQ.ip.dst_host.show</capture_ref>
                            <msg_ref type="platform">DUT.KDC IP Address</msg_ref>
                        </eq>
                    </and>
                </verify>
            </prelude>
        </state>
    </add_to>
</pc2xml>
