<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)



-->
<!-- First are the document type and the attributes for our document -->
<pc2xml version="$Revision: 7768 $" name="EUE Prov 2.1.2.9" 
		descrip="Ability of eUE to Support Post Configuration Incremental Provisioning in IPv6" 
		number="EUE Prov 2.1.2.9">

	<!-- Next we define the each of state machines -->
	<template file="./templates/EUE_Prov_B_1_1_1.xml" name="RebootCM"/>
	
	<add_to fsm="RebootCM">
		<transition from="StartCapture_RebootWait" to="VerifyProvState" event="TimerExpired"/>
	
		
		<state ID="VerifyProvState">
			<prelude>
			<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
					</mod>
					<mod modtype="replace" hdr="version">
						<expr>3</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="2">
					<eq>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>1</expr>
					</eq>
				</verify>
			</response>
			<transition to="AddpktcEUEUsrIMPITable" event="SNMPResp"/>
			<transition to="AddpktcEUEUsrIMPITable" event="SNMPRespFailure"/>
		</state>
		
		<state ID="AddpktcEUEUsrIMPITable" timer="5000">
			<!-- First we need to power cycle the UE to conduct the test -->
			<prelude once="true" >
				<send protocol="utility" msgtype="SNMPSet">
					<mod modtype="add" hdr="array">
						<var_expr>
							<expr>varBind 1 1 3 \r\n ][ , </expr>
							<expr>CL-PKTC-EUE-USER-MIB::pktcEUEUsrIMPIId.2,STRING,7205551302@redlab.com][\r\n</expr>
						</var_expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP Address</msg_ref>
					</mod>
					<!-- Always use version 2 for a CM reset -->
					<mod modtype="replace" hdr="version">
						<expr>3</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="3">
					<contains>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>7205551302@redlab.com</expr>
					</contains>
				</verify>
			</response>
			<transition to="AddpktcEUEUsrIMPUId" event="SNMPResp"/>
			<transition to="AddpktcEUEUsrIMPUId" event="SNMPRespFailure"/>
		</state>
						
		<state ID="AddpktcEUEUsrIMPUId">
			<prelude>
				<send protocol="utility" msgtype="SNMPSet">
					<mod modtype="add" hdr="array">
						<var_expr>
							<expr>varBind 1 1 3 \r\n ][ , </expr>
							<expr>CL-PKTC-EUE-USER-MIB::pktcEUEUsrIMPUId.2,STRING,7205551302@redlab.com][\r\n</expr>
						</var_expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP Address</msg_ref>
					</mod>
					<!-- Always use version 2 for a CM reset -->
					<mod modtype="replace" hdr="version">
						<expr>3</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="4">
					<contains>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>7205551302@redlab.com</expr>
					</contains>
				</verify>
			</response>
			<transition to="VerifypktcEUEUsrIMPITable" event="SNMPResp"/>
			<transition to="VerifypktcEUEUsrIMPITable" event="SNMPRespFailure"/>
		</state>
		
		
		<state ID="VerifypktcEUEUsrIMPITable">
			<prelude>
				<send protocol="utility" msgtype="SNMPGetTable">
					<mod modtype="add" hdr="oids">
						<expr>CL-PKTC-EUE-USER-MIB::pktcEUEUsrIMPITable</expr>
					</mod>
					<mod modtype="replace" hdr="version">
						<expr>3</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="5">
					<contains>
						<msg_ref type="utility" index="0 1 2">SNMPResp.varBind</msg_ref>
						<expr>7205551302@redlab.com</expr>
					</contains>
				</verify>
			</response>
			<transition to="VerifypktcEUEUsrIMPUTable" event="SNMPResp"/>
			<transition to="VerifypktcEUEUsrIMPUTable" event="SNMPRespFailure"/>
		</state>
		
		<state ID="VerifypktcEUEUsrIMPUTable">
			<prelude>
				<send protocol="utility" msgtype="SNMPGetTable">
					<mod modtype="add" hdr="oids">
						<expr>CL-PKTC-EUE-USER-MIB::pktcEUEUsrIMPUTable</expr>
					</mod>
					<mod modtype="replace" hdr="version">
						<expr>3</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="5">
					<contains>
						<msg_ref type="utility" index="0 1 2">SNMPResp.varBind</msg_ref>
						<expr>7205551302@redlab.com</expr>
					</contains>
				</verify>
			</response>
			<postlude>
				<stop_capture/>
			</postlude>
			<transition to="END" event="SNMPResp"/>
			<transition to="END" event="SNMPRespFailure"/>
		</state>
		
	</add_to>
</pc2xml>
