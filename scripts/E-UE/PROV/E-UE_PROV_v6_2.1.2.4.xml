<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################

 Change History: (Author & Date)



-->
<!-- First are the document type and the attributes for our document -->
<pc2xml version="$Revision: 7768 $" name="EUE Prov 2.1.2.4" 
		descrip="Ability of eUE to Recognize Faulty Value for Optional Object in the Configuration File and Report PassWithWarnings in IPv6" 
		number="EUE Prov 2.1.2.4">

	<!-- Next we define the each of state machines -->
	<template file="./templates/EUE_Prov_B_1_1_1.xml" name="RebootCM"/>
	
	<add_to fsm="RebootCM">
		<transition from="StartCapture_RebootWait" to="VerifyBootState" event="TimerExpired"/>
	
		<state ID="VerifyBootState">
			<prelude once="true">
				<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningState.0</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="3">
					<contains>
						<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
						<expr>4</expr>
					</contains>
				</verify>
				
			</response>
			<postlude>
				<stop_capture/>
			</postlude>
			<transition to="VerifyFaultyOptValue" event="SNMPResp"/>
			<transition to="VerifyFaultyOptValue" event="SNMPRespFailure"/>
		</state>
		
		<!-- The config file contains IETF-pktcMtaDevProvisioningTimer and has a wrong value(IETF-pktcMtaDevProvisioningTimer Unsigned32(99)99)-->
		<state ID="VerifyFaultyOptValue">
			<prelude>
			<send protocol="utility" msgtype="SNMPGet">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevProvisioningTimer.1</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="5">
					<or>
						<contains>
							<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
							<expr>Such Instance currently exists at this OID</expr>
						</contains>
						<eq>
							<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
							<expr>10</expr>
						</eq>
					</or>
				</verify>
			</response>
			<postlude>
				<stop_capture/>
			</postlude>
			<transition to="VerifyError" event="SNMPResp"/>
			<transition to="VerifyError" event="SNMPRespFailure"/>
		</state>
		
		<state ID="VerifyError">
			<prelude>
			<send protocol="utility" msgtype="SNMPGetTable">
					<mod modtype="add" hdr="oids">
						<expr>PKTC-IETF-MTA-MIB::pktcMtaDevErrorOidsEntry</expr>
					</mod>
					<mod modtype="replace" hdr="agentip">
						<msg_ref type="platform">DUT.IP</msg_ref>
					</mod>
				</send>
			</prelude>
			<response>
				<verify step="5">
				<eq>
					<msg_ref type="utility" index="0 0 2">SNMPResp.varBind</msg_ref>
					<expr>1.3.6.1.2.1.140.1.1.10.0.</expr>
				</eq>
				</verify>
				<verify step="5">
					<eq>
						<msg_ref type="utility" index="0 1 2">SNMPResp.varBind</msg_ref>
						<expr>99</expr>
					</eq>
				</verify>
				<verify step="5">
					<eq>
						<msg_ref type="utility" index="0 2 2">SNMPResp.varBind</msg_ref>
						<expr>BAD VALUE</expr>
					</eq>
				</verify>
			</response>
			<postlude>
				<stop_capture/>
			</postlude>
			<transition to="END" event="SNMPResp"/>
			<transition to="END" event="SNMPRespFailure"/>
		</state>
	</add_to>
</pc2xml>
