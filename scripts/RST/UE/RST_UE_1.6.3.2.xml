<?xml version="1.0"?>

<!--
#######################################################################################
##                                                                                   ##
## (c) 2007-2012 Cable Television Laboratories, Inc.  All rights reserved.  Any use  ##
## of this documentation/package is subject to the terms and conditions of the       ##
## CableLabs License provided to you on download of the documentation/package.       ##
##                                                                                   ##
#######################################################################################


 Change History: (Author & Date)
	PCPCII-139 : Update the Voicetronix modifiers to use the new values. (ghassler 07/10/2009)




-->
<pc2xml version="$Revision: 8188 $" 
	name="RST-UE 1.6.3.2" 
	descrip="Distinctive Alerting â€“ feature enabled" 
	number="RST-UE 1.6.3.2" inspector="disable">

	<template file="./templates/CallTermAtUETemp.xml" name="UE1"/>

	<remove_from fsm="UE1">
		<state ID="Alerting"/>
		<state ID="Setup"/>
		<state ID="Connected"/>
	</remove_from>

	<add_to fsm="UE1">
		<NE targets="*61"/>
		<transition from="Register" to="OffHook" event="Registered"/>
		
		<state ID="OffHook">
			<prelude>
				<send protocol="utility" msgtype="OffHook"/>
			</prelude>
			<transition to="Setup1" event="OffHookComplete"/>
		</state>
		
		<state ID="Setup1">
			<prelude once="true">
				<!-- Step 2 test case SIP 1.6.3.2 - Go off-hook on the device 
				attached to the DUT (UE-A) and dial *61.-->
				<send protocol="utility" msgtype="DialDigits">
					<mod modtype="add" hdr="number">
						<expr>*61</expr>
					</mod>
				</send>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>Invite</expr>
					</eq>
					<then>
						<verify step="1" requirements="REQ13905">
							<and>
								<eq>
									<msg_ref type="sip">Invite.Request-Line.username</msg_ref>
									<expr>*61</expr>
								</eq>
								<and>
									<eq>
										<msg_ref type="sip">Invite.Request-Line.domain</msg_ref>
										<msg_ref type="platform">UE0.domain</msg_ref>
									</eq>
									<eq>
										<msg_ref type="sip">Invite.Request-Line.user</msg_ref>
										<expr>dialstring</expr>
									</eq>
								</and>
							</and>
						</verify>
						<send protocol="sip" msgtype="200-INVITE"/>
					</then>
				</if>
			</response>
			<!-- Step 2 test case SIP 1.6.3.2 -Dial the number for UE-A from UE-B 
				to establish a stable two-way call as per steps 1-12 [UE Terminating Case Flow]..-->
			<transition to="Setup1" event="DialDigitsComplete"/>
			<transition to="Setup1" event="Invite"/>
			<transition to="EndSession" event="ACK"/>
		</state>
		
		<state ID="EndSession" ES="true">
			<transition to="Setup" event="SessionTerminated"/>
		</state>
		
		<state ID="Setup">
			<prelude>
				<sleep time="10000"/>
				<send protocol="sip" msgtype="Invite">
					<mod modtype="add" hdr="Alert-Info">
						<expr>&lt;file:///PacketCableRST/rg&gt;</expr>
					</mod>
				</send>
			</prelude>
			<!-- Expected responses are 100, 180, 183 or 200 -->
			<response>
				<if>
					<contains>
						<msg_ref type="sip" hdr_instance="any">18x-Invite.Require</msg_ref>
						<expr>100rel</expr>
					</contains>
					<then>
						<!--Reliability required for test sending Prack message to peer.-->
						<send protocol="sip" msgtype="Prack"/>
					</then>
				</if>
			</response>
			<transition to="Proceeding" event="100-INVITE"/>
			<transition to="Alerting" event="180-INVITE"/>
			<transition to="Alerting" event="183-INVITE"/>
			<transition to="Connected" event="200-INVITE"/>
		</state>
		
		<state ID="Alerting" timer="12000">
			<prelude once="true">
				<!-- Step 3 test case SIP 1.6.3.2 - Upon receiving the incoming INVITE request with -->
				<log step="2" requirements="REQ13911, REQ13912" 
					promptUser="True" yesExpected="True" verify="True" 
					expr="Is the DUT alerting the user according to the pattern carried\nin the Alert-Info header parameter?"/>
			</prelude>
			<response>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>TimerExpired</expr>
					</eq>
					<then>
						<!--Take DUT phone off hook-->
						<send protocol="utility" msgtype="OffHook"/>
					</then>
				</if>
				<!-- Expected responses are 180, 183, PRACK, UPDATE, or 200 -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required for test, sending a 200-OK to Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
								<expr>180</expr>
							</eq>
							<contains>
								<msg_ref type="sip" hdr_instance="any">180-INVITE.Require</msg_ref>
								<expr>100rel</expr>
							</contains>
						</and>
						<then>
							<!--Reliability required for test, sending Prack message to peer.-->
							<send protocol="sip" msgtype="Prack"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Alerting" event="200-PRACK"/>
			<transition to="Alerting" event="UPDATE"/>
			<transition to="Alerting" event="18x-INVITE"/>
			<transition to="Answer" event="TimerExpired"/>
			<transition to="Connected" event="200-INVITE"/>
		</state>
		
		<state ID="Connected">
			<prelude once="true">
				<send protocol="sip" msgtype="ACK"/>
				<!-- Step 4 test case SIP 1.6.3.2 - While the A-B call is still active, 
					dial the number for UE-A from UE-C. -->
				<generate event="SucceedEvent" fsm="UE2"/>
			</prelude>
			<transition to="Connected" event="OffHookComplete"/>
			<transition to="EndingCall" event="SucceedEvent"/>
		</state>
		
		<state ID="EndingCall" ES="true">
			<transition to="WaitForBranch1" event="SessionTerminated"/>
		</state>
		
		<state ID="WaitForBranch1">
			<transition to="Setup2" event="Branch1Event"/>
		</state>
		
		<state ID="Setup2">
			<prelude>
				<sleep time="10000"/>
				<send protocol="sip" msgtype="Invite">
					<mod modtype="add" hdr="Alert-Info">
						<expr>&lt;file:///PacketCableRST/oo&gt;</expr>
					</mod>
				</send>
			</prelude>
			<!-- Expected responses are 100, 180, 183 or 200 -->
			<response>
				<if>
					<contains>
						<msg_ref type="sip" hdr_instance="any">18x-Invite.Require</msg_ref>
						<expr>100rel</expr>
					</contains>
					<then>
						<!--Reliability required for test sending Prack message to peer.-->
						<send protocol="sip" msgtype="Prack"/>
					</then>
				</if>
			</response>
			<transition to="Proceeding2" event="100-INVITE"/>
			<transition to="Alerting2" event="180-INVITE"/>
			<transition to="Alerting2" event="183-INVITE"/>
			<transition to="VerifyStandardTone" event="ALERTING_UAC"/>
		</state>
		<state ID="Proceeding2">
			<!-- Expected responses are 180, 183 or 200 -->
			<response>
				<if>
					<contains>
						<msg_ref type="sip" hdr_instance="any">18x-Invite.Require</msg_ref>
						<expr>100rel</expr>
					</contains>
					<then>
						<!--Reliability required for test sending Prack message to peer.-->
						<send protocol="sip" msgtype="Prack"/>
					</then>
				</if>
			</response>
			<transition to="Alerting2" event="180-INVITE"/>
			<transition to="Alerting2" event="183-INVITE"/>
			<transition to="VerifyStandardTone" event="ALERTING_UAC"/>
		</state>
		
		<state ID="Alerting2" timer="12000">
			<response>
				<if>
					<eq>
						<msg_ref type="event"/>
						<expr>TimerExpired</expr>
					</eq>
					<then>
						<!--Take DUT phone off hook-->
						<send protocol="utility" msgtype="OffHook"/>
					</then>
				</if>
				<!-- Expected responses are 180, 183, PRACK, UPDATE, or 200 -->
				<if>
					<eq>
						<msg_ref type="sip">Request</msg_ref>
						<expr>UPDATE</expr>
					</eq>
					<then>
						<!--QoS required for test, sending a 200-OK to Update message to peer.-->
						<send protocol="sip" msgtype="200-Update"/>
					</then>
					<elseif>
						<and>
							<eq>
								<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
								<expr>180</expr>
							</eq>
							<contains>
								<msg_ref type="sip" hdr_instance="any">180-INVITE.Require</msg_ref>
								<expr>100rel</expr>
							</contains>
						</and>
						<then>
							<!--Reliablity required for test, sending Prack message to peer.-->
							<send protocol="sip" msgtype="Prack"/>
						</then>
					</elseif>
				</if>
			</response>
			<transition to="Alerting2" event="200-PRACK"/>
			<transition to="Alerting2" event="UPDATE"/>
			<transition to="Alerting2" event="18x-INVITE"/>
			<transition to="VerifyStandardTone" event="ALERTING_UAC"/>
		</state>
		
		<state ID="VerifyStandardTone">
			<prelude>
				<send protocol="utility" msgtype="VerifyRing"/>
			</prelude>
			<response>
				<verify step="6" requirements="REQ13913">
					<eq>
						<msg_ref type="utility">Response</msg_ref>
						<expr>VerifyRingComplete</expr>
					</eq>
				</verify>
			</response>
			<transition to="END" event="VerifyRingComplete"/>
		</state>
	</add_to>
	
	<fsm name="UE2">
		<models>
			<session/>
		</models>
		
		<NE sim_type="orig" elements="UE2 PCSCF2 SCSCF1 PCSCF1" targets="UE2"/>
		
		<states initialstate="DUTRegister">
			<state ID="DUTRegister">
				<transition to="WaitSucceedEvent" event="Registered"/>
			</state>
			
			<state ID="WaitSucceedEvent">
				<transition to="Setup" event="SucceedEvent"/>
			</state>
			
			<state ID="Setup">
				<prelude once="true">
					<sleep time="10000"/>
					<send protocol="sip" msgtype="Invite">
						<mod modtype="add" hdr="Alert-Info">
							<expr>&lt;file:///PacketCableRST/wt1&gt;</expr>
						</mod>
					</send>
				</prelude>
				<transition to="Setup" event="1xx-INVITE"/>
				<transition to="VerifyCallWaitingTone" event="ALERTING_UAC"/>
			</state>
			
			<state ID="VerifyCallWaitingTone">
				<prelude>
					<!-- Step 3 test case SIP 1.9.5.4-->
					<log step="3" requirements="REQ13915" 
						yesExpected="True" verify="True" promptUser="true"
						expr="Is the DUT applying the call waiting tone specified\nby the Alert-Info header to a distinctive call waiting\ntone when the DUT is busy."/>
					<generate event="SucceedEvent"/>
				</prelude>
				<postlude>
					<generate event="SucceedEvent" fsm="UE1"/>
				</postlude>
				<transition to="EndTheCall" event="SucceedEvent"/>
			</state>
			
			<state ID="EndTheCall" ES="true">
				<transition to="Setup1" event="SessionTerminated"/>
			</state>
			
			<state ID="Setup1">
				<prelude>
					<sleep time="10000"/>
					<send protocol="sip" msgtype="Invite">
						<mod modtype="add" hdr="Alert-Info">
							<expr>&lt;file:///PacketCableRST/wt1&gt;</expr>
						</mod>
					</send>
				</prelude>
				<!-- Expected responses are 100, 180, 183 or 200 -->
				<response>
					<if>
						<contains>
							<msg_ref type="sip" hdr_instance="any">18x-Invite.Require</msg_ref>
							<expr>100rel</expr>
						</contains>
						<then>
							<!--Reliability required for test sending Prack message to peer.-->
							<send protocol="sip" msgtype="Prack"/>
						</then>
					</if>
				</response>
				<transition to="Proceeding1" event="100-INVITE"/>
				<transition to="Alerting1" event="180-INVITE"/>
				<transition to="Alerting1" event="183-INVITE"/>
				<transition to="VerifyDistinctiveTone" event="ALERTING_UAC"/>
			</state>
			<state ID="Proceeding1">
				<!-- Expected responses are 180, 183 or 200 -->
				<response>
					<if>
						<contains>
							<msg_ref type="sip" hdr_instance="any">18x-Invite.Require</msg_ref>
							<expr>100rel</expr>
						</contains>
						<then>
							<!--Reliability required for test sending Prack message to peer.-->
							<send protocol="sip" msgtype="Prack"/>
						</then>
					</if>
				</response>
				<transition to="Alerting1" event="180-INVITE"/>
				<transition to="Alerting1" event="183-INVITE"/>
				<transition to="VerifyDistinctiveTone" event="ALERTING_UAC"/>
			</state>
			
			<state ID="Alerting1">
				<response>
					<!-- Expected responses are 180, 183, PRACK, UPDATE, or 200 -->
					<if>
						<eq>
							<msg_ref type="sip">Request</msg_ref>
							<expr>UPDATE</expr>
						</eq>
						<then>
							<!--QoS required for test, sending a 200-OK to Update message to peer.-->
							<send protocol="sip" msgtype="200-Update"/>
						</then>
						<elseif>
							<and>
								<eq>
									<msg_ref type="sip">Response.Status-Line.status-code</msg_ref>
									<expr>180</expr>
								</eq>
								<contains>
									<msg_ref type="sip" hdr_instance="any">180-INVITE.Require</msg_ref>
									<expr>100rel</expr>
								</contains>
							</and>
							<then>
								<!--Reliability required for test, sending Prack message to peer.-->
								<send protocol="sip" msgtype="Prack"/>
							</then>
						</elseif>
					</if>
				</response>
				<transition to="Alerting1" event="200-PRACK"/>
				<transition to="Alerting1" event="UPDATE"/>
				<transition to="Alerting1" event="18x-INVITE"/>
				<transition to="VerifyDistinctiveTone" event="ALERTING_UAC"/>
			</state>
			
			<state ID="VerifyDistinctiveTone">
				<prelude>
					<log step="4" requirements="REQ13914" 
						promptUser="true" yesExpected="True" verify="True" 
						expr="Verify that DUT plays a distinctive ringing alert tone."/>
					<generate event="SucceedEvent"/>
				</prelude>
				<transition to="EndTheCall1" event="SucceedEvent"/>
			</state>
			
			<state ID="EndTheCall1" ES="true">
				<prelude>
					<generate event="Branch1Event" fsm="UE1"/>
				</prelude>
			</state>
			
		</states>
	</fsm>
</pc2xml>
